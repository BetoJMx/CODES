--CHNG BASE EMPL 241022
SELECT  ppf.person_id,
        ppf.person_number                                   emp_number,
        pldft.location_name									desc_uni,
        pj.name                                             emp_puesto,
        hr_general.decode_lookup('EMPLOYEE_CATG',paam.employee_category) emp_catego,
        TO_CHAR(hoif.org_information1)                      emp_unidad,
        REPLACE(
            UPPER(
                (ppn.last_name||' '||
                ppn.previous_last_name||' '||
                ppn.first_name||' '||
                ppn.middle_names)
                ),'  ',' '
            )                                               emp_nombre,
        pplf.legislation_code                               emp_est,
        NVL(
            SUBSTR(
                rfc.national_identifier_number, 1, 4
                ),'000'
            ) || '-' || 
        NVL(
            SUBSTR(
                rfc.national_identifier_number, 5, 6
                ),'000'
        ) || '-' ||
        NVL(
            SUBSTR(
                rfc.national_identifier_number, 11, 3
                ),'000'
        )                                                   emp_rfc,
        curp.national_identifier_number                     emp_curp,
        NVL(
            SUBSTR(
                imss.national_identifier_number, 1, 2
            ),'000'
        ) || '-' ||
        NVL(
            SUBSTR(
                imss.national_identifier_number, 3, 2
                ),'000'
        ) || '-' || 
        NVL(
            SUBSTR(
                imss.national_identifier_number, 5, 2
                ),'000'
        ) || '-' || 
        NVL(
            SUBSTR(
                imss.national_identifier_number, 7, 4
                ),'000'
        ) || '-' || 
        NVL(
            SUBSTR(
                imss.national_identifier_number, 11, 1
            ),'000'
        )                                                   emp_imms,
        pplf.sex                                            emp_sexo,
        round((cs.salary_amount / 8),2)                     emp_salhor,
        round(cs.salary_amount,2)                           emp_saldia,
        round((cs.salary_amount * 30),2)                    emp_salmes,
        (  
            SELECT  TO_CHAR(SUM(prv.value),'FM0999.00') sdi_imss
            FROM    pay_rate_values prv,
                    pay_rate_definitions_f prdf,
                    pay_pay_relationships_dn pprd
            WHERE   prv.rate_definition_id 	     = prdf.rate_definition_id
                    AND pprd.payroll_relationship_id = prv.payroll_relationship_id
                    AND prdf.base_name 		 	     = 'ORA_HRX_MX_SDI_TOTAL_VALUE'
                    AND ppr.payroll_relationship_id  = pprd.payroll_relationship_id
                    AND ppr.payroll_relationship_id  = prv.payroll_relationship_id
                    AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN TRUNC(prv.start_date) 
                                                                        AND TRUNC(prv.end_date)
                    AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN TRUNC(pprd.start_date) 
                                                                        AND TRUNC(pprd.end_date)
                    AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN prdf.effective_start_date 
                                                                        AND prdf.effective_end_date			
        ) 													emp_salint,
        TO_CHAR(
            NVL(
                (
                    SELECT  MIN(ppei.pei_information_date1)
                    FROM    per_people_extra_info_f ppei 
                    WHERE   ppei.person_id = paam.person_id
                            AND ppei.information_type = 'Cambio de Empleador Legal'
                            AND TRUNC(SYSDATE)  BETWEEN ppei.effective_start_date 
                                                AND ppei.effective_end_date
                ), psdf.seniority_date), 'DD-MM-YYYY'
        )                                                   fec_ingreso,
        (
            SELECT  pba.BANK_ACCOUNT_NUM  
            FROM    pay_personal_payment_methods_f  pppm,
                    pay_bank_accounts               pba
            WHERE   1 = 1
                    AND pppm.payroll_relationship_id    = ppr.payroll_relationship_id
                    AND pppm.name                       = 'NOMINA'
                    AND NVL(pppm.priority,10) 		    = 10
                    AND pba.bank_account_id 		    = pppm.bank_account_id
                    AND pba.bank_branch_name 		    = pppm.name
                    AND TRUNC(SYSDATE)  BETWEEN pppm.effective_start_date 
                                        AND pppm.effective_end_date
                    AND TRUNC(SYSDATE)  BETWEEN pba.start_date 
                                        AND pba.end_date
        )                                                   emp_cuenta,
        NVL( -- si existe = ZLFN(Zona Libre Frontera Norte) si no = G(zona General)
            (
                SELECT  MAX('ZLFN')
                FROM    fnd_lookup_values
                WHERE   lookup_type 	        = 'TOKS_ORG_ZONA_FRONTERIZA'
                        AND language 		    = 'E'
                        AND enabled_flag 	    = 'Y'
                        AND UPPER(description)  = UPPER(pd.name)
                        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN start_date_active 
                                                                            AND NVL(end_date_active,TRUNC(NVL(pps.actual_termination_date,SYSDATE)))
            ),'G'
        )												    zona_economica,
        --+ DIRECCION
        UPPER(paf.ADDRESS_LINE_1)                           emp_calle,
        UPPER(paf.addl_address_attribute2)                  emp_colonia,
        UPPER(paf.REGION_2)                                 emp_estado,
        paf.REGION_1                                        emp_delegacion,
        (
            CASE 
            WHEN UPPER(paf.REGION_2) = 'AGUASCALIENTES'   	THEN 'AGS'
            WHEN UPPER(paf.REGION_2) = 'BAJA CALIFORNIA'  	THEN 'BC'     
            WHEN UPPER(paf.REGION_2) = 'BAJA CALIFORNIA SUR'THEN 'BCS'
            WHEN UPPER(paf.REGION_2) = 'CAMPECHE'  		  	THEN 'CAMP'
            WHEN UPPER(paf.REGION_2) = 'COAHUILA'  			THEN 'COAH'
            WHEN UPPER(paf.REGION_2) = 'COLIMA'   		 	THEN 'COL'
            WHEN UPPER(paf.REGION_2) = 'CHIAPAS'  			THEN 'CHIS'
            WHEN UPPER(paf.REGION_2) = 'CHIHUAHUA'  		THEN 'CHIH'
            WHEN UPPER(paf.REGION_2) = 'CIUDAD DE M?XICO'   THEN 'CDMX'
            WHEN UPPER(paf.REGION_2) = 'DF'    				THEN 'CDMX'
            WHEN UPPER(paf.REGION_2) = 'CDMX'    			THEN 'CDMX'
            WHEN UPPER(paf.REGION_2) = 'MEXICO DF'    		tHEN 'CDMX'
            WHEN UPPER(paf.REGION_2) = 'DURANGO'   			THEN 'DGO'
            WHEN UPPER(paf.REGION_2) = 'GUANAJUATO'   		THEN 'GTO'
            WHEN UPPER(paf.REGION_2) = 'GUERRERO'   		THEN 'GRO'
            WHEN UPPER(paf.REGION_2) = 'HIDALGO'   			THEN 'HGO'
            WHEN UPPER(paf.REGION_2) = 'JALISCO'   			THEN 'JAL'
            WHEN UPPER(paf.REGION_2) = 'M?XICO'   			THEN 'MEX'
            WHEN UPPER(paf.REGION_2) = 'MEXICO'   			THEN 'MEX'
            WHEN UPPER(paf.REGION_2) = 'MICHOAC?N'  		THEN 'MICH'
            WHEN UPPER(paf.REGION_2) = 'MICHOACAN'  		THEN 'MICH'
            WHEN UPPER(paf.REGION_2) = 'MORELOS'   			THEN 'MOR'
            WHEN UPPER(paf.REGION_2) = 'NAYARIT'   			THEN 'NAY'
            WHEN UPPER(paf.REGION_2) = 'NUEVO LE?N'    		THEN 'NL'
            WHEN UPPER(paf.REGION_2) = 'OAXACA'			    THEN 'OAX'
            WHEN UPPER(paf.REGION_2) = 'PUEBLA'   			THEN 'PUE'
            WHEN UPPER(paf.REGION_2) = 'QUER?TARO'   		THEN 'QRO'
            WHEN UPPER(paf.REGION_2) = 'QUERETARO'   		THEN 'QRO'
            WHEN UPPER(paf.REGION_2) = 'QUINTANA ROO'  		THEN 'QROO'
            WHEN UPPER(paf.REGION_2) = 'SAN LUIS POTOS?'   	THEN 'SLP'
            WHEN UPPER(paf.REGION_2) = 'SAN LUIS POTOSI'   	THEN 'SLP'
            WHEN UPPER(paf.REGION_2) = 'SINALOA'   			THEN 'SIN'
            WHEN UPPER(paf.REGION_2) = 'SONORA'   			THEN 'SON'
            WHEN UPPER(paf.REGION_2) = 'TABASCO'   			THEN 'TAB'
            WHEN UPPER(paf.REGION_2) = 'TAMAULIPAS' 		THEN 'TAMPS'
            WHEN UPPER(paf.REGION_2) = 'TLAXCALA'  			THEN 'TLAX'
            WHEN UPPER(paf.REGION_2) = 'VERACRUZ'   		THEN 'VER'
            WHEN UPPER(paf.REGION_2) = 'YUCAT?N'   			THEN 'YUC'
            WHEN UPPER(paf.REGION_2) = 'YUCATAN'   			THEN 'YUC'
            WHEN UPPER(paf.REGION_2) = 'ZACATECAS'   		THEN 'ZAC'    
            ELSE '-'
            END
        )                                         	        emp_edo,
        paf.addl_address_attribute3                         tiempo_traslado,
        --+
        paf.postal_code                                     emp_cp, --+
--paf.address_id,
        --+
        substr(pgftl.NAME,1,3)  							employee_category,
        pgftl.NAME                                          grado_completo,
        (  
            SELECT  pei_information1
            FROM    per_people_extra_info_f ppei
            WHERE   ppei.person_id = ppf.person_id
                    AND ppei.information_type = 'Empresa Origen'
                    AND TRUNC (SYSDATE) BETWEEN ppei.effective_start_date 
                                        AND ppei. effective_end_date
        )                                                   empresa_origen,
        TO_CHAR(pps.ACTUAL_TERMINATION_DATE,'YYYY-MM-DD')   fecha_baja,
        TO_CHAR(pps.NOTIFIED_TERMINATION_DATE,'YYYY-MM-DD') captura_baja,
        NVL2(
            pps.ACTUAL_TERMINATION_DATE,
            UPPER(par.ACTION_REASON), 
            null
        )                                                   causa_baja,
        (
            SELECT  round(csh.salary_amount * 30, 2)
            FROM    cmp_salary_history_v csh
            WHERE   csh.assignment_id = paam.assignment_id
                    AND TRUNC(csh.date_to) = TRUNC(cs.date_FROM) - 1 
        )                                                   salario_anterior,
        (
            SELECT  TO_CHAR(csh.date_to + 1, 'YYYY-MM-DD') 
            FROM    cmp_salary_history_v csh
            WHERE   csh.assignment_id = paam.assignment_id
                    AND TRUNC(csh.date_to) = TRUNC(cs.date_FROM) - 1 
        )                                                   fecha_salario_anterior,
        (
            SELECT  pj_ant.name
            FROM    per_all_assignments_f   paam_ant
                    , per_jobs              pj_ant
            WHERE   1 = 1
                    AND paam_ant.person_id 			= paam.person_id
                    AND paam_ant.assignment_type 	= 'E'
                    AND paam_ant.primary_flag 		= 'Y'
                    AND paam_ant.assignment_status_type = 'ACTIVE'
                    AND pj_ant.job_id = paam_ant.job_id
                    AND pj_ant.name <> pj.name
                    AND pj_ant.active_status = 'A'
                    AND TRUNC(paam_ant.effective_start_date) = (
                        (
                            SELECT  MAX(paam_ant.effective_start_date)
                            FROM    per_all_assignments_f paam_ant
                                    , per_jobs              pj_ant
                            WHERE   1 = 1
                                    AND paam_ant.person_id 			= paam.person_id
                                    AND paam_ant.assignment_type 	= 'E'
                                    AND paam_ant.primary_flag 		= 'Y'
                                    AND paam_ant.assignment_status_type = 'ACTIVE'
                                    AND pj_ant.job_id = paam_ant.job_id
                                    AND pj_ant.name <> pj.name
                                    AND pj_ant.active_status = 'A'
                        )
                    )
        )                                                   puesto_anterior,
        (
            SELECT  TO_CHAR(MAX(paam_ant.effective_start_date),'YYYY-MM-DD')
            FROM    per_all_assignments_f paam_ant
                    , per_jobs              pj_ant
            WHERE   1 = 1
                    AND paam_ant.person_id 			= paam.person_id
                    AND paam_ant.assignment_type 	= 'E'
                    AND paam_ant.primary_flag 		= 'Y'
                    AND paam_ant.assignment_status_type = 'ACTIVE'
                    AND pj_ant.job_id = paam_ant.job_id
                    AND pj_ant.name <> pj.name
                    AND pj_ant.active_status = 'A'
        )                                                   fecha_puesto_anterior,
        TO_CHAR(psdf.seniority_date,'YYYY-MM-DD') AS fecha_antiguedad
FROM    per_person_secured_list_v   	ppf,
        per_person_names_f              ppn,
	    per_people_legislative_f        pplf,
        per_assignment_secured_list_v   paam,
        --+
        per_jobs                        pj,
        per_periods_of_service          pps,
        per_action_occurrences          pao,
        per_actions_vl                  pa,
        per_action_reasons_vl           par, 
        --+
        per_national_identifiers        curp,
        per_national_identifiers        rfc,
        per_national_identifiers        imss,
        --+
        cmp_salary                      cs,
        hr_all_organization_units       haou,
        per_person_addr_usages_f        ppau,
        per_addresses_f                 paf,	
        per_location_details_f_tl 		pldft, 
        per_location_details_f 			pldf,
        per_locations 					pl, 
        per_departments 				pd,
        --+
        pay_pay_relationships_dn        ppr,
        pay_rel_groups_dn               prgdn,
        --+
        hr_organization_information_f   hoif,
        per_grades_f                    pgf,
        per_grades_f_tl                 pgftl,
	    --+
	    per_seniority_dates_f           psdf, -- Seniority Date
	    per_seniority_dates_setup       psds
	    --+
WHERE   1 = 1
        AND ppn.person_id   = ppf.person_id
        AND ppn.name_type 	= 'MX'
        AND paam.person_id 	= ppn.person_id
        AND pplf.person_id 	= ppf.person_id
        --+
        --AND ppf.person_number = '82551'
        --+
        AND paam.primary_flag 			= 'Y'
        AND pps.legal_entity_id         = paam.legal_entity_id
        AND pps.person_id               = paam.person_id
        AND pps.period_of_service_id    = paam.period_of_service_id
        AND pps.period_type             = 'E'
        --+
        AND pao.action_occurrence_id 		    = pps.action_occurrence_id
        AND pa.action_id                        = pao.action_id
        AND par.action_reason_id(+) 		    = pao.action_reason_id
        AND curp.person_id(+)				    = ppf.person_id
        AND curp.national_identifier_type(+)	= 'CURP'
        AND rfc.person_id(+)				    = ppf.person_id
        AND rfc.national_identifier_type(+)	    = 'RFC'
        AND imss.person_id(+)				    = ppf.person_id
        AND imss.national_identifier_type(+)	= 'IMSS'
        --+
        AND cs.legal_entity_id(+)   = paam.legal_entity_id
        AND cs.assignment_id(+) 	= paam.assignment_id
        AND cs.salary_approved(+)   = 'Y'
        AND pj.job_id 				= paam.job_id
        AND pj.active_status 		= 'A'
        AND haou.organization_id 	= paam.organization_id 
        --+
        AND pgf.grade_id(+) 				= paam.grade_id
        AND pgf.active_status(+)            = 'A'
        AND pgf.grade_type(+)               = 'STEP'
        AND pgftl.grade_id(+) 				= pgf.grade_id
        AND pgftl.language(+) 				= sys_context('USERENV','LANG')
        AND hoif.organization_id(+) 		= paam.organization_id
        AND hoif.org_information_context(+) = 'PER_GL_COST_CENTER_INFO'
        AND pl.location_id 					= haou.location_id
        AND pldf.location_id 				= pl.location_id
        AND pldft.location_details_id 		= pldf.location_details_id
        AND pldft.LANGUAGE 					= 'E'
        AND pd.organization_id				= paam.organization_id
        AND pd.status						= 'A'
        --+
        AND ppau.person_id(+) 		= ppf.person_id
        AND ppau.address_type(+)    = 'HOME'
        AND ppr.person_id 			= ppf.person_id
        --+
        AND prgdn.legislative_data_group_id = ppr.legislative_data_group_id
        AND prgdn.payroll_relationship_id 	= ppr.payroll_relationship_id
        AND prgdn.legal_employer_id 		= paam.legal_entity_id
        AND prgdn.assignment_id             = paam.assignment_id
        AND prgdn.group_type 				= 'A'
        --+ 
        AND paf.address_id(+) = ppau.address_id
        --+
        AND (
                ( 
                    NVL(pa.action_type_code , 'X')  = 'EMPL_TERMINATE'
                    AND paam.assignment_status_type = 'ACTIVE'
                    AND TRUNC(pps.actual_termination_date)
                        BETWEEN paam.effective_start_date
                        AND paam.effective_end_date 
                )
                OR
                (
                    NVL(pa.action_type_code,'X')    != 'EMPL_TERMINATE'
                    AND paam.assignment_status_type = 'ACTIVE'
                    AND TRUNC(SYSDATE)
                        BETWEEN paam.effective_start_date
                        AND paam.effective_end_date )
        )
        --+
        AND psdf.person_id              = paam.person_id
        AND psdf.seniority_field        = 'ORA_ENT'
        AND psds.seniority_date_code    = psdf.seniority_date_code
        AND psds.active_flag            = 'Y'
        AND TRUNC(SYSDATE)              BETWEEN psdf.effective_start_date 
                                        AND psdf.effective_end_date
        --+
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN ppf.effective_start_date 
                                                            AND ppf.effective_end_date
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN ppn.effective_start_date 
                                                            AND ppn.effective_end_date
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE))	BETWEEN pplf.effective_start_date 
                                                            AND pplf.effective_end_date
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN cs.date_FROM(+) 
                                                            AND cs.date_to(+)
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN paf.effective_start_date(+) 
                                                            AND paf.effective_end_date(+)
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN pldft.effective_start_date 
                                                            AND pldft.effective_end_date
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN pldf.effective_start_date 
                                                            AND pldf.effective_end_date
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN pd.effective_start_date 
                                                            AND pd.effective_end_date
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN ppau.effective_start_date(+) 
                                                            AND ppau.effective_end_date(+)
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN pgf.effective_start_date(+) 
                                                            AND pgf.effective_end_date(+)
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN pgftl.effective_start_date(+) 
                                                            AND pgftl.effective_end_date(+)
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN hoif.effective_start_date(+) 
                                                            AND hoif.effective_end_date(+)
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN pj.effective_start_date 
                                                            AND pj.effective_end_date
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN haou.effective_start_date 
                                                            AND haou.effective_end_date 
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN ppr.start_date 
                                                            AND ppr.end_date
        AND TRUNC(NVL(pps.actual_termination_date,SYSDATE)) BETWEEN prgdn.start_date 
                                                            AND prgdn.end_date
ORDER BY ppf.person_number ASC
