--QRY PTU AUSENTISMOS
select  hr.name as legal_entity,
        pap.person_number,
        --ppn.last_name ||' '||ppn.previous_last_name||' '|| ppn.first_name||' '||ppn.middle_names 
        
        REPLACE(ppn.full_name,',') as person_name,
        aatv.name 
            as absence_type,
        to_char(apae.start_date,'DD-MM-YYYY') 
            as start_date,
        to_char(apae.end_date,'DD-MM-YYYY') 
            as end_date,
        apae.duration,
        case when aatv.name like '%Hrs%'
             then 1
             when apae.end_date > to_date('31/12/'||:p_process_year,'dd/mm/yyyy') 
             then (to_date('31/12/'||:p_process_year,'dd/mm/yyyy') - apae.start_date) + 1
             when apae.start_date < to_date('01/01/'||:p_process_year,'dd/mm/yyyy') 
             then (apae.end_date - to_date('01/01/'||:p_process_year,'dd/mm/yyyy')) + 1
             else trunc( apae.duration )
        end as period_abs_days
from    per_all_people_f                pap,
        per_person_names_f              ppn,
        per_all_assignments_f           paa,
        --hr_all_organization_units       hr,
        per_legal_employers             hr,
        per_periods_of_service          ppos,
        ANC_PER_ABS_ENTRIES             apae,
        ANC_ABSENCE_TYPES_VL            aatv
where   1 = 1
    --and pap.person_number = nvl( :p_person_number, pap.person_number ) 
    and ppn.person_id = pap.person_id
    and ppn.name_type = 'MX'
    --+ Assigment
    and paa.person_id = pap.person_id
    and paa.assignment_type = 'E'
    and paa.effective_latest_change = 'Y'
    and paa.legal_entity_id = nvl( :p_legal_employeer_id, paa.legal_entity_id )
    and hr.organization_id = paa.legal_entity_id
    --+ Period of Service
    AND ppos.period_of_service_id = paa.period_of_service_id
    AND ppos.legal_entity_id = paa.legal_entity_id
    AND ppos.person_id = paa.person_id
    --AND to_char( ppos.date_start, 'YYYY' ) <= :p_process_year
    AND EXTRACT(YEAR FROM ppos.date_start) <= :p_process_year
    --AND nvl( to_char( ppos.actual_termination_date, 'YYYY' ), :p_process_year ) >= :p_process_year 
    AND NVL(EXTRACT(YEAR FROM ppos.actual_termination_date), :p_process_year ) >= :p_process_year 
    --+ Ausencias
    and apae.period_of_service_id = ppos.period_of_Service_id
    and apae.absence_type_id = aatv.absence_type_id
    and apae.legal_entity_id = paa.legal_entity_id
    and apae.ABSENCE_STATUS_CD = 'SUBMITTED'
    --and to_char( apae.start_date, 'YYYY' ) <= :p_process_year 
    and EXTRACT(YEAR FROM apae.start_date) <= :p_process_year 
    --and to_char( apae.end_date, 'YYYY' ) >= :p_process_year 
    and EXTRACT(YEAR FROM apae.end_date) >= :p_process_year 
    and UPPER(aatv.NAME) IN (
                            'FALTA', 'FALTAF', 'FALTAHRS', 'FALTAHRSF', 
                            'ENFERMEDADGENERAL', 'ENFERMEDADGENERALF', 
                            'ENFERMEDADGENERALHRS', 'ENFERMEDADGENERALHRSF', 
                            'PERMISOSINSUELDO', 'PERMISOSINSUELDOF', 
                            'PERMISOSINSUELDOHRS', 'PERMISOSINSUELDOHRSF',
                            'SUSPENCIÓN', 'SUSPENCIÓNHRS', 
                            'SUSPENSIÓNF', 'SUSPENSIÓNHRSF' )
    --Dates
    and nvl(ppos.actual_termination_date, sysdate) 
        between pap.effective_start_date and pap.effective_end_Date
    and nvl(ppos.actual_termination_date, sysdate) 
        between ppn.effective_start_date and ppn.effective_end_Date
    and nvl(ppos.actual_termination_date, sysdate) 
        between paa.effective_start_date and paa.effective_end_Date
    and nvl(ppos.actual_termination_date, sysdate) 
        between aatv.effective_start_date and aatv.effective_end_Date
order by legal_entity, person_name, apae.start_date
