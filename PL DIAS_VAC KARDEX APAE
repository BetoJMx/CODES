--PL DIAS_VAC KARDEX APAE
DECLARE
	--  Para Salida del tipo procedure-call
	TYPE refcursor IS REF CURSOR;
	xdo_cursor            refcursor;
	-- Variables de trabajo
	l_data_clob         CLOB; 
	l_elementos         CLOB;
	l_elem_name         CLOB;
	l_elem_value        CLOB;
	l_cabecero          CLOB;
	l_elemen_cad        CLOB;
	--+
	l_tab_sdi_name		VARCHAR2(250);
	l_antiguedad		NUMBER := 0;
	l_aniv				NUMBER := 0;
	v_dias_vac			NUMBER;
	l_dias_vac			NUMBER;
	v_cont				NUMBER;
	v_loop				NUMBER := 0;

BEGIN
	--
	l_data_clob := EMPTY_CLOB();
	--
	l_tab_sdi_name 	:= '';
	l_antiguedad 	:= 0;
	l_aniv 			:= 0;
    --
	FOR i1 IN (
		WITH GRG_SDI_FACTOR AS (
				SELECT  pvdt.name               value_definition_name,
						pvdf2.base_name         tabla,
						pvdf3.base_name         factor,
						haou.name               tru,
						prdf.base_name          tabla_sdi,
						haou.organization_id    tru_id
				FROM    pay_value_definitions_tl   pvdt,
						pay_value_definitions_f    pvdf,
						pay_value_definitions_f    pvdf2,
						pay_value_definitions_f    pvdf3,
						pay_range_items_f          prif,
						hr_all_organization_units  haou,
						pay_range_items_f          prif2,
						pay_rate_definitions_f     prdf
				WHERE   1 = 1 
						AND pvdt.value_defn_id = pvdf.value_defn_id
						AND prif.value_defn_id = pvdf2.value_defn_id
						AND prif.low_value_text = haou.organization_id
						AND prif2.value_defn_id = pvdf3.value_defn_id
						--+
						AND prdf.rate_definition_id = prif2.value1
						AND pvdf.value_defn_id = pvdf2.parent_value_defn_id
						AND pvdf2.value_defn_id = pvdf3.parent_value_defn_id
						AND pvdt.name = 'Fixed SDI Calculation'
						AND pvdt.LANGUAGE = 'US'
						AND TRUNC(SYSDATE) BETWEEN pvdf.effective_start_date AND pvdf.effective_END_date
						AND TRUNC(SYSDATE) BETWEEN pvdf2.effective_start_date AND pvdf2.effective_END_date
						AND TRUNC(SYSDATE) BETWEEN pvdf3.effective_start_date AND pvdf3.effective_END_date
						AND TRUNC(SYSDATE) BETWEEN prif.effective_start_date AND prif.effective_END_date
						AND TRUNC(SYSDATE) BETWEEN prif2.effective_start_date AND prif2.effective_END_date
						AND TRUNC(SYSDATE) BETWEEN prdf.effective_start_date AND prdf.effective_END_date
						AND TRUNC(SYSDATE) BETWEEN haou.effective_start_date AND haou.effective_END_date
		)
		SELECT  DISTINCT papf.person_number AS ESTAFETA, 
				pwaev.effective_start_date AS PERIODO,
				ABS(apae.duration) AS TOMADOS,
				gsf.tabla_sdi,
				psdf.seniority_date,
				TRUNC((MONTHS_BETWEEN(pwaev.effective_start_date, psdf.seniority_date)) / 12)  ANT
		FROM    PER_ALL_PEOPLE_F            papf,
				PER_SENIORITY_DATES_F       psdf,
				per_seniority_dates_setup   psds,
				ANC_PER_ABS_ENTRIES         apae,
            	PAY_WORKER_ABSENCE_ENTRY_VL pwaev,
				GRG_SDI_FACTOR 				gsf,
				PAY_PAY_RELATIONSHIPS_DN 	pprd,
				PAY_DIR_CARDS_F 			pdc,
				PAY_DIR_REP_CARDS_F 		pdrc
		WHERE   1 = 1
				AND papf.person_number          = :P_ESTAFETA
				AND papf.person_id              = psdf.person_id
				AND psdf.seniority_field        = 'ORA_ENT'
				AND psds.seniority_date_code    = psdf.seniority_date_code
				AND psds.active_flag            = 'Y'
				AND papf.person_id              = apae.person_id
				AND apae.per_absence_entry_id   = pwaev.absence_entry_id
				AND pwaev.absence_plan_name     = 'NP079'
				--AND pwaev.type                  = 'INIT'
				AND pprd.person_id              = papf.person_id
				AND pdc.payroll_relationship_id = pprd.payroll_relationship_id
				AND pdrc.dir_card_id            = pdc.dir_card_id
				AND gsf.tru_id                  = pdrc.tax_unit_id
				--+
				AND pwaev.effective_start_date  BETWEEN papf.effective_start_date AND papf.effective_end_date
				AND pwaev.effective_start_date  BETWEEN pprd.start_date AND pprd.end_date
				AND pwaev.effective_start_date  BETWEEN pdc.effective_start_date AND pdc.effective_end_date
				AND pwaev.effective_start_date  BETWEEN pdrc.effective_start_date AND pdrc.effective_end_date
		ORDER BY periodo
	) LOOP
		--
		v_loop := v_loop + 1;

		IF 	TO_DATE(EXTRACT(YEAR FROM i1.periodo)||'-'||EXTRACT(MONTH FROM i1.seniority_date)||'-'||EXTRACT(DAY FROM i1.seniority_date),'YYYY-MM-DD') < i1.periodo THEN 
			l_aniv := 1;
		ELSE 
			l_aniv := 0;
		END IF;

		SELECT  prif2.value1 dias_vac
		INTO	v_dias_vac
		FROM    pay_value_definitions_tl  pvdt,
				pay_value_definitions_f   pvdf,
				pay_value_definitions_f   pvdf2,
				pay_range_items_f         prif,
				pay_value_definitions_f   pvdf3,
				pay_range_items_f         prif2
		WHERE   1 = 1 
				AND pvdt.value_defn_id = pvdf.value_defn_id
				AND pvdt.name = i1.tabla_sdi
				AND prif.value_defn_id = pvdf2.value_defn_id
				AND pvdt.language = 'US'
				AND pvdf.value_defn_id = pvdf2.parent_value_defn_id
				AND pvdf2.value_defn_id = pvdf3.parent_value_defn_id
				AND prif2.value_defn_id = pvdf3.value_defn_id
				AND i1.ant + 0.01 between TO_NUMBER(prif.low_value_text) and (
						SELECT  nvl( MIN(TO_NUMBER(prif_high.low_value_text)-.01), 100)
						FROM    pay_range_items_f prif_high
								,pay_value_definitions_f pvdf_high
						WHERE   1 = 1 
								AND pvdf_high.parent_value_defn_id = pvdf.value_defn_id
								AND prif_high.value_defn_id = pvdf_high.value_defn_id
								AND TO_NUMBER(prif_high.low_value_text) > TO_NUMBER(prif.low_value_text)
								AND i1.periodo BETWEEN pvdf_high.effective_start_date AND pvdf_high.effective_END_date
								AND i1.periodo BETWEEN prif_high.effective_start_date AND prif_high.effective_END_date
					)
				AND pvdf3.value_identifier = 'C' --DIAS VACACIONES
				AND i1.periodo BETWEEN pvdf.effective_start_date AND pvdf.effective_END_date
				AND i1.periodo BETWEEN pvdf2.effective_start_date AND pvdf2.effective_END_date
				AND i1.periodo BETWEEN prif.effective_start_date AND prif.effective_END_date
				AND i1.periodo BETWEEN pvdf3.effective_start_date AND pvdf3.effective_END_date
				AND i1.periodo BETWEEN prif2.effective_start_date AND prif2.effective_END_date;
		
		IF l_antiguedad < i1.ant AND l_aniv = 1 OR v_loop = 1 THEN 
			 l_antiguedad := i1.ant;
			 v_cont := v_dias_vac;
			 l_dias_vac := v_dias_vac;
		END IF;
		
		v_cont := v_cont - i1.tomados;
		
		--  Crea XML  
		l_data_clob := l_data_clob
		            || '<G_ROW>'
					||'<ESTAFETA>'||DBMS_XMLGEN.CONVERT(i1.estafeta)||'</ESTAFETA>'    -- 01
					||'<PERIODO>'||DBMS_XMLGEN.CONVERT(i1.periodo)||'</PERIODO>'    -- 02
					||'<DIAS>'||DBMS_XMLGEN.CONVERT(l_dias_vac)||'</DIAS>'          -- 03
					||'<TOMADOS>'||DBMS_XMLGEN.CONVERT(i1.tomados)||'</TOMADOS>'    -- 04
					||'<PENDIENTES>'||DBMS_XMLGEN.CONVERT(v_cont)||'</PENDIENTES>'  -- 05 
					||'<ANT>'||DBMS_XMLGEN.CONVERT(i1.ant)||'</ANT>'  -- 06 
					||'</G_ROW>'; 

		l_dias_vac := l_dias_vac - i1.tomados; 
      -- 
	END LOOP;
    --
    OPEN :xdo_cursor FOR
  	SELECT l_data_clob
  	  FROM dual;
  END;
