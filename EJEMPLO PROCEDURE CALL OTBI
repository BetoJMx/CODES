--EJEMPLO PROCEDURE CALL OTBI
DECLARE
  --  Para Salida del tipo procedure-call
  TYPE refcursor IS REF CURSOR;
  xdo_cursor            refcursor;
  --
  -- Cursor Gneral de la informacion  
  CURSOR c_variable_bimestral IS
    WITH xxtoks_tabla_sdi_v AS (
                    SELECT /*+materialize*/ 
                           pvdt.name             value_definition_name
                          ,pvdf2.base_name       tabla
                          ,pvdf3.base_name       factor
                          ,haou.name             nombre_tru
                          ,prdf.base_name        tabla_sdi
                          ,haou.organization_id  tru_id
                      FROM pay_value_definitions_tl  pvdt
                          ,pay_value_definitions_f   pvdf
                          ,pay_value_groups          pvg
                          ,pay_value_groups_tl       pvgtl
                          --+
                          ,pay_value_definitions_f   pvdf2
                          --+
                          ,pay_value_definitions_f   pvdf3
                          ,pay_range_items_f         prif
                          ,hr_all_organization_units haou
                          ,pay_range_items_f         prif2
                          ,pay_rate_definitions_f    prdf
                     WHERE 1 = 1 
                       AND pvdt.value_defn_id  = pvdf.value_defn_id
                       AND pvdf.value_group_id = pvg.value_group_id
                       AND pvg.value_group_id  = pvgtl.value_group_id
                       AND prif.value_defn_id  = pvdf2.value_defn_id
                       AND prif.low_value_text = haou.organization_id
                       AND prif2.value_defn_id = pvdf3.value_defn_id
                       --+
                       AND prdf.rate_definition_id = prif2.value1
                       AND pvdf.value_defn_id      = pvdf2.parent_value_defn_id
                       AND pvdf2.value_defn_id     = pvdf3.parent_value_defn_id
                       AND pvgtl.language          = userenv('LANG')
                       AND pvdt.name               = 'Fixed SDI Calculation'
	                   AND pvdt.language           = userenv('LANG')
                       AND trunc(sysdate) BETWEEN pvdf.effective_start_date 
                                              AND pvdf.effective_end_date
                       AND trunc(sysdate) BETWEEN pvdf2.effective_start_date 
                                              AND pvdf2.effective_end_date
                       AND trunc(sysdate) BETWEEN pvdf3.effective_start_date 
                                              AND pvdf3.effective_end_date
                       AND trunc(sysdate) BETWEEN prif.effective_start_date 
                                              AND prif.effective_end_date
                       AND trunc(sysdate) BETWEEN prif2.effective_start_date 
                                              AND prif2.effective_end_date
                       AND trunc(sysdate) BETWEEN prdf.effective_start_date 
                                              AND prdf.effective_end_date
	                   AND trunc(sysdate) BETWEEN haou.effective_start_date 
                                              AND haou.effective_end_date
                                ) 
          ,xxtoks_sdi_factor_table_v As (
                    SELECT /*+materialize*/ 
                           pvdt.name               tabla_sdi
                          ,pvdf2.sequence
						  ,min ( pvdf2.sequence ) over ( partition by pvdt.name, pvdf3.value_identifier 
						                                order by     pvdt.name, pvdf3.value_identifier) min_seq
                          ,pvdf2.base_name         base_name_rango
                          ,prif.low_value_text     low_value
                          ,pvdf3.base_name
                          ,pvdf3.value_identifier  columna
                          ,prif2.value1            sdi_factor
                      FROM pay_value_definitions_tl   pvdt
                          ,pay_value_definitions_f    pvdf
                          ,pay_value_groups           pvg
                          ,pay_value_groups_tl        pvgtl
                          --+
                          ,pay_value_definitions_f    pvdf2
                          ,pay_range_items_f          prif
                          --+
                          ,pay_value_definitions_f    pvdf3
                          ,pay_range_items_f          prif2
                     WHERE 1 = 1 
                       AND pvdt.value_defn_id    = pvdf.value_defn_id
                       AND pvdf.value_group_id   = pvg.value_group_id
                       AND pvg.value_group_id    = pvgtl.value_group_id
                       AND pvdt.name             like 'Tabla%'
                       AND prif.value_defn_id    = pvdf2.value_defn_id
                       AND pvgtl.language        = userenv('LANG')
                       AND pvdt.language         = userenv('LANG')
                       AND pvdf.value_defn_id    = pvdf2.parent_value_defn_id
                       AND pvdf2.value_defn_id   = pvdf3.parent_value_defn_id
                       AND prif2.value_defn_id   = pvdf3.value_defn_id
                       AND trunc(sysdate) BETWEEN pvdf.effective_start_date
                                              AND pvdf.effective_end_date
                       AND trunc(sysdate) BETWEEN pvdf2.effective_start_date
                                              AND pvdf2.effective_end_date
                       AND trunc(sysdate) BETWEEN prif.effective_start_date
                                              AND prif.effective_end_date
                       AND trunc(sysdate) BETWEEN pvdf3.effective_start_date
                                              AND pvdf3.effective_end_date
                       AND trunc(sysdate) BETWEEN prif2.effective_start_date
                                              AND prif2.effective_end_date
                    Order By 1, 6 desc
                                         )		
--    ,xxtoks_pay_defined_balances_v as (
--                   SELECT /*+materialize*/ 
--					         DISTINCT 
--                             prb.payroll_relationship_id
--                           , prb.payroll_rel_action_id
--						   , LISTAGG(pbt.balance_name, '-') WITHIN GROUP (ORDER BY pbt.balance_name)
--					                                          OVER( partition by prb.payroll_rel_action_id, 
--															                      prb.payroll_relationship_id)||'-'  balance_name
--						   , LISTAGG(prb.balance_value, '-') WITHIN GROUP (ORDER BY pbt.balance_name)
--					                                          OVER( partition by prb.payroll_rel_action_id, 
--															                      prb.payroll_relationship_id)||'-'  balance_value																				  
--                           --,pbt.balance_name
--                           --,prb.balance_value						   
--                       FROM per_legislative_data_groups_vl  ldg
--                           ,pay_balance_types_vl            pbt
--                           ,pay_defined_balances            pdb
--                           ,pay_dimension_usages_vl         pdu
--                     	  -- 
--                     	  , pay_run_balances               prb
--                      WHERE 1 = 1
--                        AND ldg.name                              = 'MX Legislative Data Group'
--                        AND ldg.legislation_code                  = 'MX'
--                        AND nvl(pbt.legislation_code, ldg.legislation_code)                   = ldg.legislation_code
--                        AND nvl(pbt.legislative_data_group_id, ldg.legislative_data_group_id) = ldg.legislative_data_group_id
--                        AND pbt.balance_name                      in( 'DIAS TRABAJADOS', 'AUSENTISMOS IMSS', 'INCAPACIDADES IMSS',
--                                                                       'NP001 Days Worked' )
--                        AND pdb.balance_type_id                   = pbt.balance_type_id
--                        AND pdb.legislative_data_group_id         = ldg.legislative_data_group_id
--                        AND pdu.balance_dimension_id              = pdb.balance_dimension_id
--                        AND nvl(pdu.legislation_code, ldg.legislation_code)                   = ldg.legislation_code
--                        AND nvl(pdu.legislative_data_group_id, ldg.legislative_data_group_id) = ldg.legislative_data_group_id
--                        AND pdu.database_item_suffix              in ('_ASG_RUN', 'CORE_ASG_RUN') 
--                        -- 
--                        AND prb.defined_balance_id   = pdb.defined_balance_id                                   										 
--					)										 
          									 
	 --
     --  Consulta con las vistas anteriores
     --	 									 
	 SELECT DISTINCT
		    hoif.org_information1                                            unidad            -- 01
		   ,convert(hdepa.name,'us7ascii','al32utf8')                        organizacion      -- 02
		   ,papf.person_number                                               estafeta          -- 03
		   ,convert(ppnf.full_name,'us7ascii','al32utf8')                    nombre            -- 04        
		   ,convert(pjft.name,'us7ascii','al32utf8')                         puesto            -- 05
		   ,replace(pni_rfc.national_identifier_number,'-')                  rfc               -- 06
		   ,pni_curp.national_identifier_number                              curp              -- 07
		   ,pni_imss.national_identifier_number                              no_ss             -- 08
		   ,to_char (ppos.date_start, 'yyyy-mm-dd')                          fechaingreso      -- 09
		   ,nvl (to_char (ppos.actual_termination_date, 'yyyy-mm-dd'),'-')   fechabaja         -- 10
		   ,haouf.organization_code                                          reg_patronal      -- 11
		   ,xtsdi.tabla_sdi                                                  tabla_factor      -- 12
		   	   ,Case When trunc(ppos.date_start) > trunc(fnd_date.canonical_to_date(:p_effective_start_date)) Then
			  --trunc(trunc(:p_effective_end_date) - (trunc(ppos.date_start) + 1))				  
			  to_char(trunc(fnd_date.canonical_to_date(:p_effective_start_date)),'J') -  ((to_char (trunc(fnd_date.canonical_to_date(:p_effective_start_date)),'J')) + 1)				  
			Else
			  trunc(trunc(fnd_date.canonical_to_date(:p_effective_start_date)) - (trunc(fnd_date.canonical_to_date(:p_effective_start_date)) + 1 ) )				  				  
			End                                                              dias_bim             -- 13  
		   ,round(greatest( months_BETWEEN( trunc(fnd_date.canonical_to_date(:p_effective_start_date)) + 1                    
			            ,ppos.date_start) / 12, 0), 2)                       antiguedad           -- 14 
		   ,cs.date_from                                                     fech_ultimo_sueldo   -- 15
		   ,nvl(cs.salary_amount,0)                                                 ultimo_sueldo        -- 16
		   ,nvl(xsft.sdi_factor,0)                                            sdi_factor                               -- 17
		   ,(cs.salary_amount * nvl(xsft.sdi_factor,0))                      percepcion_fija      -- 18		   
		   ,nvl(cs_ant.salary_amount,0)                                             sueldo_anterior
		   -- +
--           ,xpdb.balance_name  
--		   ,nvl(xpdb.balance_value,0)                                        balance_value
		   -- +
--		   , pra.payroll_rel_action_id
		   , paypd.payroll_term_id
		   , prgdn.legal_employer_id
		   , pra.payroll_relationship_id
	   FROM per_all_people_f                papf
		   ,per_person_names_f              ppnf
		   ,per_all_assignments_f           paaf
		   ,per_national_identifiers        pni_rfc
		   ,per_national_identifiers        pni_imss
		   ,per_national_identifiers        pni_curp
		   ,per_periods_of_service          ppos
		   ,per_jobs_f_tl                   pjft
		   ,per_departments                 hdepa
		   ,hr_all_organization_units_f     haouf
		   --+ 01   
		   ,hr_organization_information_f   hoif
		   ,cmp_salary                      cs
		   ,cmp_salary                      cs_ant	  -- Para calculo del SDI_ANTERIOR	   
		   ,pay_payroll_terms               ppt    
		   ,pay_rel_groups_dn               prgdn  
		   ,pay_rel_groups_f                prgf
		   --+ 02
		   ,pay_assigned_payrolls_dn        paypd
		   ,pay_pay_relationships_dn        pprd   --  De Aqui sin duplicados
		   --+ 03
		   ,pay_payroll_rel_actions         pra
		   ,pay_payroll_actions             ppa
		   --+ 04
		   ,pay_dir_cards_f                 pdc
		   ,pay_dir_rep_cards_f             pdrc
		   ,per_tax_reporting_units         tru
		   ,xxtoks_tabla_sdi_v              xtsdi     -- * 1  vista with			  
		   ,xxtoks_sdi_factor_table_v       xsft      -- * 2  vista with
		   --+ 		   
--		   ,xxtoks_pay_defined_balances_v   xpdb      -- * 3  vista with
		   --+
	  WHERE 1 = 1
		AND papf.person_id                       = ppnf.person_id
		AND ppnf.name_type                       = 'MX'
		AND papf.person_id                       = paaf.person_id
		AND paaf.assignment_status_type_id       = 1
		AND pni_rfc.person_id(+)                 = ppnf.person_id
		AND pni_rfc.national_identifier_type(+)  = 'RFC'
		AND pni_imss.person_id(+)                = ppnf.person_id
		AND pni_imss.national_identifier_type(+) = 'IMSS'
		AND pni_curp.person_id(+)                = ppnf.person_id
		AND pni_curp.national_identifier_type(+) = 'CURP'
		--+
		AND paaf.legal_entity_id                 = ppos.legal_entity_id
		AND paaf.person_id                       = ppos.person_id               --> Nueva Linea
		AND paaf.period_of_service_id            = ppos.period_of_service_id    --> Nueva Linea
		AND ppos.actual_termination_date IS NULL                                --> Nueva Linea
		--+
		AND paaf.job_id                          = pjft.job_id                    
		AND pjft.LANGUAGE                        = 'E'
		AND paaf.organization_id                 = hdepa.organization_id
		AND haouf.organization_id                = paaf.organization_id         --> Nueva Linea
		--+ 01
		AND hoif.organization_id(+)              = paaf.organization_id      
		AND hoif.org_information_context(+)      = 'PER_GL_COST_CENTER_INFO'
		AND cs.person_id(+)                      = paaf.person_id
		AND cs.salary_approved (+)               = 'Y'
		AND cs_ant.person_id(+)                  = paaf.person_id
		AND cs_ant.salary_approved (+)           = 'Y'
		and ( cs.date_from - 1 )                 = cs_ant.date_to (+)             --> Salario a Dos Meses Anteriores 
		AND ppt.legal_employer_id                = paaf.legal_entity_id
		AND prgdn.legal_employer_id              = ppt.legal_employer_id          --> Nueva Linea
		AND prgdn.payroll_relationship_id        = ppt.payroll_relationship_id    --> Nueva Linea
		AND prgdn.term_id                        = ppt.hr_term_id                 --> Nueva Linea
		AND prgdn.assignment_id                  = paaf.assignment_id
		AND prgdn.legal_employer_id              = paaf.legal_entity_id
		AND prgdn.group_type                     = 'A'
		AND prgf.relationship_group_id           = prgdn.relationship_group_id
		--+ 02
		AND paypd.payroll_term_id                = ppt.payroll_term_id            --> Nueva Linea Sin (+)
		AND paypd.payroll_term_id                = prgdn.parent_rel_group_id      --> Nueva Linea
		AND prgdn.payroll_relationship_id        = pprd.payroll_relationship_id
		AND ppt.payroll_relationship_id          = pprd.payroll_relationship_id
		AND pprd.person_id(+)                    = papf.person_id
		--+ 03
		AND pra.payroll_relationship_id          = prgdn.payroll_relationship_id  --> Nueva Linea
		AND pra.payroll_relationship_id          = pprd.payroll_relationship_id
		AND pra.retro_component_id               IS NULL
		AND pra.source_action_id                 IS NOT NULL                      --> Nueva linea 
		AND pra.action_status                    = 'C'                            --> Nueva Linea  
		AND ppa.payroll_action_id                = pra.payroll_action_id  
		AND ppa.action_status                    = 'C'                            
		AND ppa.action_type                      IN ('R','Q')
		--+ 04
		AND pdc.payroll_relationship_id       = pprd.payroll_relationship_id   
		AND pdc.dir_card_id                   = pdrc.dir_card_id                
		AND pdrc.tax_unit_id                  = tru.organization_id             
		AND tru.organization_id               = xtsdi.tru_id(+)            
		AND xsft.tabla_sdi(+)                 = xtsdi.tabla_sdi
	    AND xsft.columna(+)                   = 'K'
		AND round(greatest( MONTHS_BETWEEN( trunc(fnd_date.canonical_to_date(:p_effective_start_date)) + 1
		   ,ppos.date_start) / 12, 0), 2) <= to_number(xsft.low_value)
		and xsft.sequence                     = xsft.min_seq       --> NOTA: Se cambio por funcion analitica la consulta del min 
--        and xpdb.payroll_relationship_id   = pra.payroll_relationship_id
--        and xpdb.payroll_rel_action_id     = pra.payroll_rel_action_id
		--------------------
		--  Rango de fechas
		--------------------
		AND trunc(ppa.effective_date) BETWEEN papf.effective_start_date   --**
									      AND papf.effective_end_date
		AND trunc(sysdate) BETWEEN ppnf.effective_start_date 
							   AND ppnf.effective_end_date
		--   AND trunc(ppa.effective_date) BETWEEN paaf.effective_start_date   -- Cual es la corecta
		--                                     AND paaf.effective_end_date
		AND trunc(sysdate) BETWEEN paaf.effective_start_date     --  Nueva Condicion 
							   AND paaf.effective_end_date
		AND trunc(sysdate) BETWEEN pjft.effective_start_date 
							   AND pjft.effective_end_date
		AND trunc(ppa.effective_date) BETWEEN hdepa.effective_start_date  --**
										  AND hdepa.effective_end_date
		AND trunc(sysdate) BETWEEN haouf.effective_start_date 
							   AND haouf.effective_end_date
		   --+ 01
		AND trunc(sysdate) BETWEEN hoif.effective_start_date (+) 
							   AND hoif.effective_end_date(+)   
		--   AND trunc(ppa.effective_date) BETWEEN cs.date_from(+)
		--                                     AND cs.date_to(+)
		AND trunc(sysdate) BETWEEN cs.date_from(+)              -- Cambia por fecha SYSDATE
						  AND cs.date_to(+)
		AND trunc(sysdate) BETWEEN prgf.effective_start_date    -- Cambia por fecha SYSDATE
								  AND prgf.effective_end_date	
		--+ 02						  
		AND trunc(sysdate) BETWEEN paypd.start_date 
							  AND paypd.end_date
		--AND trunc(sysdate) BETWEEN paypf.effective_start_date 
		--					 AND paypf.effective_end_date
		AND trunc(sysdate) BETWEEN pdc.effective_start_date 
							  AND pdc.effective_end_date
		AND trunc(sysdate) BETWEEN pdrc.effective_start_date 
							  AND pdrc.effective_end_date
		AND trunc(ppa.effective_date) BETWEEN pprd.start_date            --**  
										 AND pprd.end_date
		AND trunc(ppa.effective_date) BETWEEN tru.effective_from
										 AND nvl(tru.effective_to, sysdate+1)
		-- 
		-- Parametros 
	    AND trunc(ppa.effective_date) BETWEEN trunc(fnd_date.canonical_to_date(:p_effective_start_date))    
	                                      AND trunc(fnd_date.canonical_to_date(:p_effective_end_date))
	    AND ppa.payroll_id          = NVL(:p_payroll_id, ppa.payroll_id)
	    AND hoif.org_information1   = NVL(:p_unidad_proceso, hoif.org_information1)
	    AND haouf.organization_id   = NVL(:p_legal_employeer_id, haouf.organization_id)
        -- 
     ORDER BY  papf.person_number DESC; 
  --	 
  -- Fin Cursor Variable
  --   
  -- Variables de trabajo
  l_data_clob           CLOB; 
  l_elementos           CLOB;
  l_elem_name           CLOB;
  l_elem_value          CLOB;
  l_cabecero            CLOB;
  l_elemen_cad          CLOB;
  l_value_ditra         VARCHAR2(25);
  l_value_auims         VARCHAR2(25);
  l_value_incims        VARCHAR2(25);
  l_value_dias_nvo      VARCHAR2(25);
  l_element_name        VARCHAR2(50);
  l_nomina_quincenal    NUMBER;
  l_vales               NUMBER;
  l_tot_variable        NUMBER;
  l_var_dia             NUMBER;
  l_sdi_variable        NUMBER;	
  l_sdi_anterio         NUMBER;
  -- 
  l_count               NUMBER;
  l_name                VARCHAR2(100);
  l_value               VARCHAR2(100); 
  l_pos_ini             NUMBER;
  l_pos_fin             NUMBER;
  l_pos_ini1            NUMBER;
  l_pos_fin1            NUMBER;
  -- 
  BEGIN
	--
	l_data_clob := EMPTY_CLOB();
	--  
    FOR i1 IN c_variable_bimestral LOOP
	  -- 
	  --  
	  l_value_auims     := 0;
	  l_value_ditra     := 0;
	  l_value_incims    := 0;
	  l_value_dias_nvo  := 0;
	  -- 
	  --  Balances
	  FOR c_bal IN ( SELECT  prb.payroll_relationship_id
                           , 'NOM'                          Preg            
	                       , pbt.balance_name               Name_Rel 
                           , SUM ( prb.balance_value )       sum_value
                       FROM per_legislative_data_groups_vl  ldg
                           ,pay_balance_types_vl            pbt
                           ,pay_defined_balances            pdb
                           ,pay_dimension_usages_vl         pdu
                           ,pay_run_balances               prb
	                       -- 
	                       ,pay_payroll_rel_actions        pra
	                       ,pay_payroll_actions            ppa
                      WHERE 1 = 1
                        AND ldg.name                              = 'MX Legislative Data Group'
                        AND ldg.legislation_code                  = 'MX'
                        AND nvl(pbt.legislation_code, ldg.legislation_code)                   = ldg.legislation_code
                        AND nvl(pbt.legislative_data_group_id, ldg.legislative_data_group_id) = ldg.legislative_data_group_id
                        AND pbt.balance_name                      in( 'DIAS TRABAJADOS', 'AUSENTISMOS IMSS', 'INCAPACIDADES IMSS',
                                                                       'NP001 Days Worked' )
                        AND pdb.balance_type_id                   = pbt.balance_type_id
                        AND pdb.legislative_data_group_id         = ldg.legislative_data_group_id
                        AND pdu.balance_dimension_id              = pdb.balance_dimension_id
                        AND nvl(pdu.legislation_code, ldg.legislation_code)                   = ldg.legislation_code
                        AND nvl(pdu.legislative_data_group_id, ldg.legislative_data_group_id) = ldg.legislative_data_group_id
                        AND pdu.database_item_suffix              in ('_ASG_RUN', 'CORE_ASG_RUN') 
                        -- 
                        AND prb.defined_balance_id   = pdb.defined_balance_id   
                        --
                        AND pra.retro_component_id               IS NULL
                        AND pra.source_action_id                 IS NOT NULL                      --> Nueva linea 
                        AND pra.action_status                    = 'C'                            --> Nueva Linea  
                        AND ppa.payroll_action_id                = pra.payroll_action_id  
                        AND ppa.action_status                    = 'C'                            
                        AND ppa.action_type                      IN ('R','Q')
                        AND prb.payroll_relationship_id          = pra.payroll_relationship_id 
                        and prb.payroll_rel_action_id            = pra.payroll_rel_action_id
                        --
                        AND pra.payroll_relationship_id          = i1.payroll_relationship_id    
                     GROUP BY prb.payroll_relationship_id, pbt.balance_name
                     UNION
                     SELECT 
                           prb.payroll_relationship_id
                         , 'REL'                                 Preg             
                         , to_char(prb.payroll_rel_action_id)    Name_Rel
                         , 0                                     sum_value
                       FROM per_legislative_data_groups_vl  ldg
                           ,pay_balance_types_vl            pbt
                           ,pay_defined_balances            pdb
                           ,pay_dimension_usages_vl         pdu
                           ,pay_run_balances               prb
                     	   -- 
                     	   ,pay_payroll_rel_actions        pra
                     	   ,pay_payroll_actions            ppa
                      WHERE 1 = 1
                        AND ldg.name                              = 'MX Legislative Data Group'
                        AND ldg.legislation_code                  = 'MX'
                        AND nvl(pbt.legislation_code, ldg.legislation_code)                   = ldg.legislation_code
                        AND nvl(pbt.legislative_data_group_id, ldg.legislative_data_group_id) = ldg.legislative_data_group_id
                        AND pbt.balance_name                      in( 'DIAS TRABAJADOS', 'AUSENTISMOS IMSS', 'INCAPACIDADES IMSS',
                                                                       'NP001 Days Worked' )
                        AND pdb.balance_type_id                   = pbt.balance_type_id
                        AND pdb.legislative_data_group_id         = ldg.legislative_data_group_id
                        AND pdu.balance_dimension_id              = pdb.balance_dimension_id
                        AND nvl(pdu.legislation_code, ldg.legislation_code)                   = ldg.legislation_code
                        AND nvl(pdu.legislative_data_group_id, ldg.legislative_data_group_id) = ldg.legislative_data_group_id
                        AND pdu.database_item_suffix              in ('_ASG_RUN', 'CORE_ASG_RUN') 
                        -- 
                        AND prb.defined_balance_id   = pdb.defined_balance_id   
                        --
                        AND pra.retro_component_id               IS NULL
                        AND pra.source_action_id                 IS NOT NULL                      --> Nueva linea 
                        AND pra.action_status                    = 'C'                            --> Nueva Linea  
                        AND ppa.payroll_action_id                = pra.payroll_action_id  
                        AND ppa.action_status                    = 'C'                            
                        AND ppa.action_type                      IN ('R','Q')
                        AND prb.payroll_relationship_id          = pra.payroll_relationship_id 
                        and prb.payroll_rel_action_id            = pra.payroll_rel_action_id
                        --
                        AND pra.payroll_relationship_id          = i1.payroll_relationship_id
                        group by prb.payroll_relationship_id, prb.payroll_rel_action_id
	                  )
	  LOOP 
	    -- 
		IF c_bal.preg = 'NOM' THEN
          -- 
          IF c_bal.name_rel  = 'AUSENTISMOS IMSS' THEN
            l_value_auims := c_bal.sum_value;
          ELSIF c_bal.name_rel  = 'DIAS TRABAJADOS' THEN
            l_value_ditra := c_bal.sum_value;
          ELSIF c_bal.name_rel  = 'INCAPACIDADES IMSS' THEN
            l_value_incims := c_bal.sum_value;
          ELSIF c_bal.name_rel  = 'NP001 Days Worked' THEN
            l_value_dias_nvo := c_bal.sum_value;        
          END IF;
		ELSIF c_bal.preg = 'REL' THEN
          -- 
          --  Inicializa Variables
	      l_elementos         := '';
	      l_element_name      := '';
          l_elemen_cad   	  := '';
	      l_nomina_quincenal  := 0;
	      l_vales             := 0;
	      --
	      FOR c_ele IN ( SELECT        
	                            hls.lookup_type              look_type 
	                           ,petf.base_element_name	    
                               ,prrv.result_value	
		                       ,NVL(SUM(prrv.result_value) over ( PARTITION BY  hls.lookup_type ),0)  sum_qna
                           FROM pay_run_results                 prr
                               ,pay_run_result_values           prrv
                               ,pay_input_values_f              pivf
                               ,pay_element_types_f             petf
               		           ,hr_lookups                      hls
                          WHERE 1 = 1
                            AND prr.run_result_id               = prrv.run_result_id        
                            AND NVL(prrv.result_value, '0')     != '0'		
                            AND prrv.input_value_id             = pivf.input_value_id        
                            AND pivf.element_type_id            = petf.element_type_id            
                            AND pivf.base_name                  = 'Pay Value'         
                            and hls.lookup_code  = petf.base_element_name
               	            AND hls.enabled_flag = 'Y'
               	            AND hls.lookup_type  in ( 'TOKS_SDI_ELEMENTOS_QUINCENAL', 'TOKS_SDI_ELEMENTOS_VALES')
               	            AND TRUNC(SYSDATE) BETWEEN hls.start_date_active     AND NVL(hls.end_date_active, TRUNC(SYSDATE+1))
                            AND TRUNC(SYSDATE) BETWEEN petf.effective_start_date AND petf.effective_end_date
                            AND TRUNC(SYSDATE) BETWEEN pivf.effective_start_date AND pivf.effective_end_date
                            -- 
                            --  Parametros	   
               	            AND prr.payroll_rel_action_id =  to_number(c_bal.name_rel)
                            AND prr.payroll_term_id       =  i1.payroll_term_id          
                            AND prr.legal_employer_id     =  i1.legal_employer_id 
					     GROUP BY hls.lookup_type, petf.base_element_name, prrv.result_value	
                         ORDER BY petf.base_element_name ASC )
          --
	      LOOP
	        -- 
	        l_element_name := REPLACE(c_ele.base_element_name,' ','_');
	        -- 
	        -- Concatena nombre de elemento y su valor
	        --  
	        l_elementos := '<'||l_element_name||'>'
		    				  ||DBMS_XMLGEN.CONVERT(nvl(c_ele.result_value,0))
		    				  ||'</'||l_element_name||'>'
		                      ||l_elementos;	
            -- 
            l_elemen_cad := l_element_name||'|'||DBMS_XMLGEN.CONVERT(c_ele.result_value)||'|'||l_elemen_cad;		
            -- 
	        IF c_ele.look_type = 'TOKS_SDI_ELEMENTOS_QUINCENAL' THEN
		      -- 
 		      l_nomina_quincenal := c_ele.sum_qna;
	        ELSE
		      l_vales            := c_ele.sum_qna;
            END IF;
	      END LOOP;	  -- FOR ELEMENTOS
		END IF;
      END LOOP;  -- FOR BALANCE
	  -- 
	  l_tot_variable      := 0;
      l_var_dia           := 0;	
      l_sdi_variable      := 0;	
	  l_sdi_anterio       := 0;		
	  --
	  SELECT decode(l_value_ditra,0,1,l_value_ditra) INTO l_value_ditra FROM DUAL;  --  Avitar divicion en cero
	  -- 
	  --
	  l_elemen_cad  := '<l_elemen_cad>'||l_elemen_cad||'</l_elemen_cad>';
	  --
	  l_tot_variable := l_nomina_quincenal + l_vales;
	  l_var_dia      := round(l_tot_variable / l_value_ditra,2);
	  l_sdi_variable := round((i1.ultimo_sueldo * i1.sdi_factor) + l_var_dia,2);		
	  l_sdi_anterio  := round((i1.sueldo_anterior * i1.sdi_factor) + l_var_dia,2);
	  -- 
	  --  Crea XML  
	  l_data_clob := l_data_clob
		            || '<G_Row>'
					||'<unidad>'||DBMS_XMLGEN.CONVERT(i1.unidad)||'</unidad>'                                       -- 01
					||'<organizacion>'||DBMS_XMLGEN.CONVERT(i1.organizacion)||'</organizacion>'                     -- 02
					||'<estafeta>'||DBMS_XMLGEN.CONVERT(i1.estafeta)||'</estafeta>'                                 -- 03
					||'<nombre>'||DBMS_XMLGEN.CONVERT(i1.nombre)||'</nombre>'                                       -- 04 
					||'<puesto>'||DBMS_XMLGEN.CONVERT(i1.puesto)||'</puesto>'                                       -- 05
					||'<rfc>'||DBMS_XMLGEN.CONVERT(i1.rfc)||'</rfc>'                                                -- 06
					||'<curp>'||DBMS_XMLGEN.CONVERT(i1.curp)||'</curp>'                                             -- 07 
					||'<no_ss>'||DBMS_XMLGEN.CONVERT(i1.no_ss)||'</no_ss>'                                          -- 08 
					||'<fechaingreso>'||DBMS_XMLGEN.CONVERT(i1.fechaingreso)||'</fechaingreso>'                     -- 09 
					||'<fechabaja>'||DBMS_XMLGEN.CONVERT(i1.fechabaja)||'</fechabaja>'                              -- 10 
					||'<reg_patronal>'||DBMS_XMLGEN.CONVERT(i1.reg_patronal)||'</reg_patronal>'					   -- 11   
					||'<tabla_factor>'||DBMS_XMLGEN.CONVERT(i1.tabla_factor)||'</tabla_factor>'                     -- 12
					||'<dias_bim>'||DBMS_XMLGEN.CONVERT(i1.dias_bim)||'</dias_bim>'                                 -- 13
					||'<antiguedad>'||DBMS_XMLGEN.CONVERT(i1.antiguedad)||'</antiguedad>'                           -- 14 
					||'<fech_ultimo_sueldo>'||DBMS_XMLGEN.CONVERT(i1.fech_ultimo_sueldo)||'</fech_ultimo_sueldo>'   -- 15 
					||'<ultimo_sueldo>'||DBMS_XMLGEN.CONVERT(i1.ultimo_sueldo)||'</ultimo_sueldo>'                  -- 16 
					||'<sdi_factor>'||DBMS_XMLGEN.CONVERT(i1.sdi_factor)||'</sdi_factor>'                           -- 17 
					||'<percepcion_fija>'||DBMS_XMLGEN.CONVERT(i1.percepcion_fija)||'</percepcion_fija>'            -- 18 
					||'<ausentismos_imss>'||DBMS_XMLGEN.CONVERT(nvl(l_value_auims,0))||'</ausentismos_imss>'                       -- 19 
					||'<incapacidades_imss>'||DBMS_XMLGEN.CONVERT(nvl(l_value_incims,0))||'</incapacidades_imss>'				   -- 20      
                    ||'<dias_adic_nvo_ingreso>'||DBMS_XMLGEN.CONVERT(nvl(l_value_dias_nvo,0))||'</dias_adic_nvo_ingreso>'          -- 21					   
					||'<dias_trabajados>'||DBMS_XMLGEN.CONVERT(l_value_ditra)||'</dias_trabajados>'                         -- 22
					||'<nomina_quincenal>'||DBMS_XMLGEN.CONVERT(l_nomina_quincenal)||'</nomina_quincenal>'                  -- 23
					||'<total_variable>'||DBMS_XMLGEN.CONVERT(l_tot_variable)||'</total_variable>'                          -- 25
					||'<variable_dia>'||DBMS_XMLGEN.CONVERT(l_var_dia)||'</variable_dia>'                                   -- 26
					||'<sdi_variable>'||DBMS_XMLGEN.CONVERT(l_sdi_variable)||'</sdi_variable>'                              -- 27
					||'<sdi_anterior>'||DBMS_XMLGEN.CONVERT(l_sdi_anterio)||'</sdi_anterior>'                              -- 28					   
					||l_elemen_cad
					||'</G_Row>';  
      -- 
	END LOOP;
    --
    OPEN :xdo_cursor FOR
  	SELECT l_data_clob
  	  FROM dual;
  END;
