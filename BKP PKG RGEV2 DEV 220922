--BKP PKG RGEV2 DEV 220922
create or replace PACKAGE     xxtoks_pay_rgev2_new_pkg AS 
    l_user_token VARCHAR2(5000); 
    --+ Procedimiento para limpiar tablas de información
    PROCEDURE limpiar(p_id_exec NUMBER); 
    --+ 
    PROCEDURE visual_log(  p_message    IN VARCHAR2 
                        ); 
    --+ 
    PROCEDURE visual_output(  p_message IN VARCHAR2 
                           ); 
    --+ Procedimiento para obtener información de unidades
    PROCEDURE get_organizations(  p_fechainicio         IN VARCHAR2
                                , p_fechafin            IN VARCHAR2
                                , p_consolidacion_id    IN VARCHAR2
                                , p_nomina_id           IN VARCHAR2
                                , p_id_exec             IN NUMBER
                                , p_organizacion_id     IN VARCHAR2
                                , p_acumulado           IN VARCHAR2
                                , p_user_token          IN VARCHAR2 DEFAULT NULL
                                , p_user_name           IN VARCHAR2 DEFAULT '-1'
                                , p_flag				IN CHAR
                                ); 
    --+ Procedimiento para obetener información por segmentos paralelos 
    PROCEDURE get_data_by_units(  
            p_start_id      NUMBER 
          , p_end_id        NUMBER 
    ); 
    --+ Procedimiento para generar hilos de ejecución en paralelo 
    PROCEDURE generar_procesos_paralelo(  
            p_id_exec       NUMBER
    ); 
    --+ Procedimiento para almacenar el contenido del archivo 
    PROCEDURE ac_data (contenido CLOB, id_exec IN NUMBER); 
    --+ Procedimiento para generar el contenido del archivo 
    PROCEDURE ac_clob ( p_id_exec       IN NUMBER,
                        p_fechainicio   IN VARCHAR2,
                        p_fechafin      IN VARCHAR2); 
    --+ Procedimiento principal por procs encadenados 
    PROCEDURE init_exe(  
                        p_fechainicio           IN VARCHAR2 
                        , p_fechafin            IN VARCHAR2 
                        , p_consolidacion_id    IN VARCHAR2 
                        , p_consolidacion_name  IN VARCHAR2 
                        , p_nomina_id           IN VARCHAR2 
                        , p_nomina_name         IN VARCHAR2 
                        , p_organizacion_id     IN VARCHAR2
                        , p_organizacion_name   IN VARCHAR2
                        , p_acumulado           IN VARCHAR2
                        , p_user_token          IN VARCHAR2 DEFAULT NULL 
                        , p_process_id          IN NUMBER
                        , p_user_name           IN VARCHAR2 DEFAULT '-1'
                        , p_status              OUT NUMBER
                    ); 
END xxtoks_pay_rgev2_new_pkg;

--|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

create or replace PACKAGE BODY     xxtoks_pay_rgev2_new_pkg AS
    PROCEDURE limpiar(p_id_exec NUMBER) as
    BEGIN
        --
        DELETE
        FROM      pay.XXTOKS_PAY_RGEV2_ORG
        WHERE     1 = 1
        AND       id_exec = p_id_exec;
        --
        DELETE
        FROM      pay.XXTOKS_PAY_RGEV2_BASE_DATA
        WHERE     1 = 1
        AND       id_exec = p_id_exec;
        --
        DELETE
        FROM      pay.XXTOKS_PAY_RGEV2_EARNINGS_DATA
        WHERE     1 = 1
        AND       id_exec = p_id_exec;
        --
        DELETE
        FROM      pay.XXTOKS_PAY_RGEV2_DEDUCTIONS_DATA
        WHERE     1 = 1
        AND       id_exec = p_id_exec;
        --
        DELETE
        FROM      pay.XXTOKS_PAY_RGEV2_ISR_RET_DATA
        WHERE     1 = 1
        AND       id_exec = p_id_exec;
        --
        DELETE
        FROM      pay.XXTOKS_PAY_RGEV2_OTHER_EL_DATA
        WHERE     1 = 1
        AND       id_exec = p_id_exec;
        --
    END limpiar;
    --
    PROCEDURE visual_log(  p_message    IN VARCHAR2
                        ) IS
        BEGIN
            --
            dbms_output.put_line('Message:'||p_message);
            --
        EXCEPTION
            WHEN OTHERS THEN
                --
                RETURN;
                --
    END visual_log;
    --
    PROCEDURE visual_output(  p_message IN VARCHAR2
                        ) IS
        BEGIN
            --
            dbms_output.put_line('Message:'||p_message);
            --
        EXCEPTION
            WHEN OTHERS THEN
                --
                RETURN;
                --
    END visual_output;
    --
    PROCEDURE get_organizations(  p_fechainicio         IN VARCHAR2
                                , p_fechafin            IN VARCHAR2
                                , p_consolidacion_id    IN VARCHAR2
                                , p_nomina_id           IN VARCHAR2
                                , p_id_exec             IN NUMBER
                                , p_organizacion_id     IN VARCHAR2
                                , p_acumulado           IN VARCHAR2
                                , p_user_token          IN VARCHAR2 DEFAULT NULL
                                , p_user_name           IN VARCHAR2 DEFAULT '-1'
                                , p_flag				IN CHAR
                                ) 
    IS
        --
        v_user_name                VARCHAR2 (100);
        v_password                 VARCHAR2 (100);
        --
        v_ws_url                   VARCHAR2 (500);
        v_ws_action                VARCHAR2 (500) := 'http://xmlns.oracle.com/oxp/service/PublicReportService/ExternalReportWSSService/runReportRequest'; --Este es el action que va a ejecutar
        --
        v_ws_envelope              CLOB;
        v_ws_response_clob         CLOB;
        --
        v_ws_resp_xml              XMLTYPE;
        v_ws_resp_xml2             XMLTYPE;
        --
        v_cdata                    CLOB;
        v_clob                     CLOB;
        --
        v_errormsg                 VARCHAR2(512);
        --+
        v_valid                    NUMBER := 0;
        
        BEGIN
            --+ Se genera el payload request para el soap
            v_ws_envelope :=
                '<soap:Envelope xmlns:pub="http://xmlns.oracle.com/oxp/service/PublicReportService" xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
                        <soap:Body>
                        <pub:runReport>
                            <pub:reportRequest>
                                <pub:parameterNameValues>
                                    <pub:item>  
                                        <pub:name>flag</pub:name>  
                                        <pub:values>  
                                                <pub:item>'||p_flag||'</pub:item>  
                                        </pub:values>  
                                    </pub:item> 
                                    <pub:item>
                                        <pub:name>p_consolidation_set_id</pub:name>
                                        <pub:values>
                                            <pub:item>'||p_consolidacion_id||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                    <pub:item>
                                        <pub:name>p_legal_entity_id</pub:name>
                                        <pub:values>
                                            <pub:item>'||p_organizacion_id||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                    <pub:item>
                                        <pub:name>p_fecha_inicio</pub:name>
                                        <pub:values>
                                            <pub:item>'||p_fechainicio||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                    <pub:item>
                                        <pub:name>p_fecha_final</pub:name>
                                        <pub:values>
                                            <pub:item>'||p_fechafin||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                    <pub:item>
                                        <pub:name>p_payroll_id</pub:name>
                                        <pub:values>
                                            <pub:item>'||p_nomina_id||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                </pub:parameterNameValues>
                                <pub:attributeFormat>xml</pub:attributeFormat>
                                <pub:reportAbsolutePath>/Reportes Custom/PAY/TOKS PAY Reporte de Gravable y Exento V2/Unidades TPREGv2/Unidades TPREGv2 - RT.xdo</pub:reportAbsolutePath>
                                <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>
                            </pub:reportRequest>
                        </pub:runReport>
                    </soap:Body>
                </soap:Envelope>';
                
            ---REQUEST TOKEN---
            --+ Se lanza la petición para correr el soap
            --GRG_COMMON_CONNECTIONS_ATI_PKG.get_otbi_report(
            GRG_COMMON_CONNECTIONS.get_otbi_report(
                        l_ws_envelope => v_ws_envelope,
                        l_user_token  => p_user_token,
                        x_ws_response => v_clob,
                        p_instance_name => 'DEV2' );
            --+ Se mapea el resultado en xml para su manipulación
            v_ws_resp_xml2 := XMLTYPE.createXML (v_clob);
            ---REQUEST TOKEN---

            --DBMS_OUTPUT.PUT_LINE(''||v_ws_envelope);

            --+ Se recorren los resultados del soap en xml
            FOR v_organization IN ( SELECT    * 
                                    FROM      XMLTABLE (
                                                        '/DATA_DS/G_1' PASSING xmltype.createxml(v_clob)
                                                        COLUMNS
                                                        ID_UNIDAD           VARCHAR2(250) PATH 'ID_UNIDAD',
                                                        NOMBRE_UNIDAD       VARCHAR2(250) PATH 'NOMBRE_UNIDAD',
                                                        ID_LEMP             VARCHAR2(250) PATH 'ID_LEMP',
                                                        NOMBRE_LEMP         VARCHAR2(250) PATH 'NOMBRE_LEMP',
                                                        INICIO 				VARCHAR2(250) PATH 'INICIO',
														FIN					VARCHAR2(250) PATH 'FIN'
                                                    ) xml_data
                                  ) 
                                  
            --+ Se recorren los resultados mapeados anteriormente para su inserción en tabla
            LOOP
                --
                BEGIN
                    --
                    SELECT  NVL(COUNT(*),0) cont 
                    INTO    v_valid
                    FROM    XXTOKS_PAY_RGEV2_ORG
                    WHERE   id_exec = p_id_exec
                            AND unidad_id = v_organization.id_unidad
                            AND unidad_name = v_organization.nombre_unidad
                            AND fecha_inicio = v_organization.inicio
                            AND fecha_fin = v_organization.fin;
                    
                    IF v_valid = 0 THEN
                    --
                        INSERT INTO XXTOKS_PAY_RGEV2_ORG(   ID_EXEC
                                                            , UNIDAD_ID
                                                            , UNIDAD_NAME
                                                            , LEMP_ID
                                                            , LEMP_NAME
                                                            , FECHA_INICIO
                                                            , FECHA_FIN                                                        
                                                            , CONSOLIDACION
                                                            , NOMINA
                                                            , ORGANIZACION
                                                            , P_ACUMULADO
                                                            , TOKEN
                                                            , P_USER_NAME
                                                            )VALUES(  p_id_exec
                                                                    , v_organization.id_unidad
                                                                    , v_organization.nombre_unidad
                                                                    , v_organization.id_lemp
                                                                    , v_organization.nombre_lemp
                                                                    , v_organization.inicio 
                                                                    , v_organization.fin 
                                                                    , p_consolidacion_id
                                                                    , p_nomina_id
                                                                    , p_organizacion_id
                                                                    , p_acumulado
                                                                    , p_user_token
                                                                    , p_user_name
                                                                    );
                        COMMIT;
                    END IF;
                    --+
                    v_valid := 0;
                    --+
                EXCEPTION
                    WHEN OTHERS THEN
                        --
                        DBMS_OUTPUT.PUT_LINE('Error: '|| SQLERRM);
                        --
                END;
                --
            END LOOP;
            --
        EXCEPTION
            WHEN OTHERS THEN
            v_errormsg := SQLERRM;
            INSERT INTO XXTOKS_PAY_RGEV2_ERROR_TRACING( process_id
                                                        , error
                                                        , fecha
                                                        , created_by
                                                        , creation_date
                                                        , last_updated_by
                                                        , last_update_date
                                                        ) VALUES(  p_id_exec
                                                                , 'Ocurrió un error en el proceso get_organizations:'||v_errormsg
                                                                , SYSDATE - 6/24
                                                                , '-1'
                                                                , SYSDATE - 6/24
                                                                , '-1'
                                                                , SYSDATE - 6/24
                                                                );              
        END get_organizations;
        
    --
    PROCEDURE get_data_by_units(  p_start_id    NUMBER
                                , p_end_id      NUMBER
                            ) IS
        --
        CURSOR c_organizations IS
            SELECT    unidad_id
                    , unidad_name
                    , fecha_inicio
                    , fecha_fin
                    , nomina
                    , consolidacion
                    , id_exec
                    , token
                    , organizacion
                    , p_acumulado
            FROM    XXTOKS_PAY_RGEV2_ORG
            WHERE   1 = 1
            AND     id BETWEEN p_start_id AND p_end_id
            AND     id_exec = (
                                SELECT    id_exec
                                FROM      XXTOKS_PAY_RGEV2_ORG
                                WHERE     id = p_start_id
                              );
            
        --
        l_user_name                VARCHAR2 (100);
        l_password                 VARCHAR2 (100);
        l_ws_url                   VARCHAR2 (500);
        l_ws_action                VARCHAR2 (500) := 'http://xmlns.oracle.com/oxp/service/PublicReportService/ExternalReportWSSService/runReportRequest';
        --
        l_ws_envelope              CLOB;
        --
        l_ws_response_clob         CLOB;
        --
        v_cdata                    CLOB;
        l_clob                     CLOB;
        --
        l_ws_resp_xml              XMLTYPE;
        l_ws_resp_xml2             XMLTYPE;
        --
        --
        v_val                      PLS_INTEGER;
        v_lines_arr                apex_t_varchar2;
        v_content_arr              apex_t_varchar2;
        p_errormsg                 VARCHAR2 (512 CHAR);
        v_inicio                   VARCHAR2(200);
        

        BEGIN
            --+ Se recorre el cursor para obetener los segmentos de información
            FOR v_organization IN c_organizations LOOP
                
                --+ Se genera el payload request para la ejecución del soap
                l_ws_envelope :=
                '<soap:Envelope xmlns:pub="http://xmlns.oracle.com/oxp/service/PublicReportService" xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
                        <soap:Body>
                        <pub:runReport>
                            <pub:reportRequest>
                                <pub:parameterNameValues>
                                    <pub:item>
                                        <pub:name>p_location_id</pub:name>
                                        <pub:values>
                                            <pub:item>'||v_organization.unidad_id||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                    <pub:item>
                                        <pub:name>p_fecha_inicio</pub:name>
                                        <pub:values>
                                            <pub:item>'||v_organization.fecha_inicio||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                    <pub:item>
                                        <pub:name>p_fecha_final</pub:name>
                                        <pub:values>
                                            <pub:item>'||v_organization.fecha_fin||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                    <pub:item>
                                        <pub:name>p_legal_entity_id</pub:name>
                                        <pub:values>
                                            <pub:item>'||v_organization.organizacion||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                    <pub:item>
                                        <pub:name>p_consolidation_set_id</pub:name>
                                        <pub:values>
                                            <pub:item>'||v_organization.consolidacion||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                    <pub:item>
                                        <pub:name>p_payroll_id</pub:name>
                                        <pub:values>
                                            <pub:item>'||v_organization.nomina||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                    <pub:item>
                                        <pub:name>p_acumulado</pub:name>
                                        <pub:values>
                                            <pub:item>'||v_organization.p_acumulado||'</pub:item>
                                        </pub:values>
                                    </pub:item>
                                </pub:parameterNameValues>
                                <pub:attributeFormat>xml</pub:attributeFormat>
                                <pub:reportAbsolutePath>/Reportes Custom/PAY/TOKS PAY Reporte de Gravable y Exento V2/RGVE V2 - RT.xdo</pub:reportAbsolutePath>
                                <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>
                            </pub:reportRequest>
                        </pub:runReport>
                    </soap:Body>
                </soap:Envelope>';
                
                INSERT INTO XXTOKS_RGEV2_LOG (ID_EXEC,PHASE) VALUES (v_organization.id_exec,'Nomina id ' || v_organization.nomina);

                BEGIN
                    --+
                    INSERT INTO XXTOKS_RGEV2_LOG (ID_EXEC,PHASE) VALUES (v_organization.id_exec,'SOAP_INIT ' || v_organization.unidad_id);
                    --+
                    ---REQUEST TOKEN--- Se lanza la petición para correr el soap
                    --GRG_COMMON_CONNECTIONS_ATI_PKG.get_otbi_report(
                    GRG_COMMON_CONNECTIONS.get_otbi_report(
                        l_ws_envelope => l_ws_envelope,
                        l_user_token  => v_organization.token,
                        x_ws_response => l_clob,
                        p_instance_name => 'DEV2' );
                    --+ Se mapea el resultado en xml para su manipulación
                    l_ws_resp_xml2 := XMLTYPE.createXML (l_clob);
                    ---REQUEST TOKEN---
                    --+
                    INSERT INTO XXTOKS_RGEV2_LOG (ID_EXEC,PHASE) VALUES (v_organization.id_exec,'SOAP_END ' || v_organization.unidad_id);
                    --+
                
                --+ Si falla
                EXCEPTION
                    WHEN OTHERS THEN
                        --
                        p_errormsg := SQLERRM;
                        INSERT INTO XXTOKS_PAY_RGEV2_ERROR_TRACING( PROCESS_ID,
                                                                    error
                                                                  ) VALUES ( v_organization.id_exec,
                                                                                'Error al procesar informacion mediante token - XML2. UNIDAD_ID: '||v_organization.unidad_id||
                                                                                '. ERROR: '||p_errormsg
                                                                           );
                        COMMIT;
                        RETURN;
                        --						
                END;
                --+LOG FOR LOOP INIT
                INSERT INTO XXTOKS_RGEV2_LOG (ID_EXEC,PHASE) VALUES (v_organization.id_exec,'INSERT_INIT ' || v_organization.unidad_id);
                --+
                --+ Se recorren los resultados del soap en xml
                BEGIN --+ INFORMACION BASE
                --
                    FOR i IN (  SELECT * 
                                FROM XMLTABLE (
                                            '/DATA_DS/G_1' PASSING xmltype.createxml(l_clob)
                                            COLUMNS
                                            PERIODO                 VARCHAR2(250) PATH 'PERIODO',
                                            UNIDAD                  VARCHAR2(250) PATH 'UNIDAD',
                                            DESCRIPCION             VARCHAR2(250) PATH 'DESCRIPCION',
                                            ESTAFETA                VARCHAR2(250) PATH 'ESTAFETA',
                                            NOMBRE                  VARCHAR2(250) PATH 'NOMBRE',
                                            PUESTO                  VARCHAR2(250) PATH 'PUESTO',
                                            FEC_INGRESO             VARCHAR2(250) PATH 'FEC_INGRESO',
                                            FEC_BAJA                VARCHAR2(250) PATH 'FEC_BAJA',
                                            CURP                    VARCHAR2(250) PATH 'CURP',
                                            RFC                     VARCHAR2(250) PATH 'RFC',
                                            NSS                     VARCHAR2(250) PATH 'NSS',
                                            EMP_LEG                 VARCHAR2(250) PATH 'EMP_LEG',
                                            ISR_SUBJECT             VARCHAR2(250) PATH 'ISR_SUBJECT',
                                            ISR_EXEMPT              VARCHAR2(250) PATH 'ISR_EXEMPT',
                                            ISR_WITHHELD            VARCHAR2(250) PATH 'ISR_WITHHELD',
                                            NP044                   VARCHAR2(250) PATH 'NP044',
                                            NP052                   VARCHAR2(250) PATH 'NP052',
                                            SUBSIDY_FOR_EMPLOYMENT  VARCHAR2(250) PATH 'SUBSIDY_FOR_EMPLOYMENT',
                                            ISR_CALCULATED          VARCHAR2(250) PATH 'ISR_CALCULATED',
                                            FAH                     VARCHAR2(250) PATH 'FAH',
                                            FAH_ACUMULADO           VARCHAR2(250) PATH 'FAH_ACUMULADO',
                                            EFFECTIVE_DATE          VARCHAR2(250) PATH 'EFFECTIVE_DATE'
                                ) xml_data
                            ) 
                LOOP
                    --
                    BEGIN
                        --
                        INSERT INTO XXTOKS_PAY_RGEV2_DATA (    
                                                            ID_EXEC,
                                                            PERIODO,
                                                            UNIDAD,
                                                            DESCRIPCION,
                                                            ESTAFETA,
                                                            NOMBRE,
                                                            PUESTO,
                                                            F_INGRESO,
                                                            F_BAJA,
                                                            CURP,
                                                            RFC,
                                                            NSS,
                                                            EMPLEADOR_LEGAL,
                                                            ISR_SUBJECT,
                                                            ISR_EXEMPT,
                                                            ISR_WITHHELD,
                                                            NP044,
                                                            NP052,
                                                            SUBSIDY_FOR_EMPLOYMENT,
                                                            ISR_CALCULATED,
                                                            FAH,
                                                            FAH_ACUMULADO,
                                                            EFFECTIVE_DATE
                                                        )VALUES(  
                                                                v_organization.id_exec,
                                                                i.PERIODO,
                                                                i.UNIDAD,
                                                                v_organization.unidad_name,
                                                                i.ESTAFETA,
                                                                i.NOMBRE,
                                                                i.PUESTO,
                                                                i.FEC_INGRESO,
                                                                i.FEC_BAJA,
                                                                i.CURP,
                                                                i.RFC,
                                                                i.NSS,
                                                                i.EMP_LEG,
                                                                i.ISR_SUBJECT,
                                                                i.ISR_EXEMPT,
                                                                i.ISR_WITHHELD,
                                                                i.NP044,
                                                                i.NP052,
                                                                i.SUBSIDY_FOR_EMPLOYMENT,
                                                                i.ISR_CALCULATED,
                                                                i.FAH,
                                                                i.FAH_ACUMULADO,
                                                                i.EFFECTIVE_DATE
                                                            );
                        --
                        --COMMIT;
                        --+ Si falla la inserción
                        EXCEPTION WHEN OTHERS THEN
                            --
                            p_errormsg := SQLERRM;
                            INSERT INTO XXTOKS_PAY_RGEV2_ERROR_TRACING( 
                                                                        error,
                                                                        process_id,
                                                                        fecha,
                                                                        created_by,
                                                                        creation_date,
                                                                        last_updated_by,
                                                                        last_update_date
                                                                      ) VALUES (
                                                                                    'Error al guardar al empleado. estafeta: '||i.estafeta||
                                                                                    ' ORG_ID: '||v_organization.unidad_id||'. ERROR: '||p_errormsg,
                                                                                    v_organization.id_exec,
                                                                                    SYSDATE - 6/24,
                                                                                    '-1',
                                                                                    SYSDATE - 6/24,
                                                                                    '-1',
                                                                                    SYSDATE - 6/24
                                                                               );
                            --COMMIT;
                            --RETURN;
                            --
                    END;
                    --  
                END LOOP;
                --+ Si falla loop
                EXCEPTION
                    WHEN OTHERS THEN
                        --
                        p_errormsg := SQLERRM;
                        INSERT INTO XXTOKS_PAY_RGEV2_ERROR_TRACING(
                                                                    error,
                                                                    process_id,
                                                                    fecha,
                                                                    created_by,
                                                                    creation_date,
                                                                    last_updated_by,
                                                                    last_update_date
                                                                  ) values (
                                                                                'IB - Error al leer la UNIDAD_ID: '||v_organization.unidad_id||
                                                                                '. ERROR:'||p_errormsg,
                                                                                v_organization.id_exec,
                                                                                SYSDATE - 6/24,
                                                                                '-1',
                                                                                SYSDATE - 6/24,
                                                                                '-1',
                                                                                SYSDATE - 6/24
                                                                           );
                        --COMMIT;
                        --RETURN;
                        --
                END; --+ INFORMACION BASE
                --+
                COMMIT;
                --+ LOG FOR LOOP END
                INSERT INTO XXTOKS_RGEV2_LOG (ID_EXEC,PHASE) VALUES (v_organization.id_exec,'INSERT_END ' || v_organization.unidad_id);
                --+
            END LOOP;

            
            --
        EXCEPTION
            WHEN OTHERS THEN
                P_ERRORMSG := SQLERRM;
                INSERT INTO XXTOKS_PAY_RGEV2_ERROR_TRACING( error,
                                                            fecha,
                                                            created_by,
                                                            creation_date,
                                                            last_updated_by,
                                                            last_update_date ) values (
                                                                                        'get_data_by_units: '||P_ERRORMSG,
                                                                                        SYSDATE - 6/24,
                                                                                        '-1',
                                                                                        SYSDATE - 6/24,
                                                                                        '-1',
                                                                                        SYSDATE - 6/24
                                                                                      );
                COMMIT;
                --
        END get_data_by_units;
    --
    PROCEDURE generar_procesos_paralelo(  p_id_exec   NUMBER ) 
    IS
        --
        v_task_name         VARCHAR2(240);
        v_plsql_block       VARCHAR2(32767);
        --
        v_sql_stmt_filtro   VARCHAR2(32767);
        v_sql_stmt          VARCHAR2(32767);
        --
        v_intentos          NUMBER := 0;
        --
        v_errormsg          VARCHAR2(512);
        BEGIN
            --+ Se crea el nombre de la tarea 
            v_task_name := dbms_parallel_execute.generate_task_name( prefix   => 'TKSPAYRGEV2$_' );
            
            --+ Se crea la tarea
            dbms_parallel_execute.create_task( task_name   => v_task_name );
            
            --+ Se genera la query para los segmentos de información -> NTILE(40) = 30 unidades por sección
            v_sql_stmt_filtro := '  SELECT    MIN(id) start_id
                                            , MAX(id) end_id
                                    FROM      (
                                                SELECT    id
                                                        , NTILE(30) OVER( ORDER BY id asc ) grupo 
                                                FROM      XXTOKS_PAY_RGEV2_ORG
                                                WHERE     1 = 1
                                                AND       id_exec = '||p_id_exec||'
                                            )
                                    GROUP BY  grupo
                                ';
            
            --+ Se crean los segmentos de información para el dbms_parallel
            dbms_parallel_execute.create_chunks_by_sql(  
                                                        task_name  => v_task_name
                                                        , sql_stmt => v_sql_stmt_filtro
                                                        , by_rowid => FALSE
                                                      );
            
            --+ se genera el query text para el statement de la ejecución de la tarea
            v_sql_stmt := q'[
                            BEGIN 
                            pay.xxtoks_pay_rgev2_new_pkg.get_data_by_units(  :start_id , :end_id);
                            END;
                            ]';
            
            --+ Se ejecuta la tarea
            dbms_parallel_execute.run_task( 
                                            task_name        => v_task_name
                                            , sql_stmt       => v_sql_stmt
                                            , language_flag  => DBMS_SQL.native
                                            , parallel_level => 20
                                          );
            --
            LOOP
                --
                EXIT
                    WHEN
                        --+ Se cierra el loop cuando termina la ejecución o cuando se detectan mas de 2 intentos
                        dbms_parallel_execute.task_status(v_task_name) = dbms_parallel_execute.finished OR v_intentos > 2;
                        --
                v_intentos := v_intentos + 1;
                dbms_lock.sleep(3);
                --
            END LOOP;
            --
            dbms_parallel_execute.drop_task(v_task_name);
            --
        EXCEPTION
        WHEN OTHERS THEN 
            v_errormsg := SQLERRM;
            INSERT INTO XXTOKS_PAY_RGEV2_ERROR_TRACING( process_id
                                                        , error
                                                        , fecha
                                                        , created_by
                                                        , creation_date
                                                        , last_updated_by
                                                        , last_update_date
                                                        ) VALUES(  p_id_exec
                                                                , 'Ocurrió un error en el proceso generar_procesos_paralelo: '||v_errormsg
                                                                , SYSDATE - 6/24
                                                                , '-1'
                                                                , SYSDATE - 6/24
                                                                , '-1'
                                                                , SYSDATE - 6/24
                                                                );	
                                                                COMMIT;	
        END generar_procesos_paralelo;
    --
    --
    PROCEDURE ac_data (contenido CLOB, id_exec IN NUMBER)
    AS
        ac_id       NUMBER;
        v_errormsg  VARCHAR2(512);
    BEGIN
        INSERT INTO XXTOKS_PAY_RGEV2_CLOB_DATA (contenido, id)
            VALUES (contenido, id_exec)
        RETURNING id
            INTO ac_id;

        COMMIT;

        --UPDATE xxtoks_pay_ac_exec 
        --  SET EXECUTION_END = TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'),
        --      STATUS = 'PROCESSED'
        --      WHERE ID_EXEC = id_exec;
        --COMMIT;
        --
        --apex_json.open_object;
        --apex_json.write ('ID_DATA', ac_id);
        --apex_json.close_object;
            --htp.p(ac_id);
    EXCEPTION
    WHEN OTHERS THEN 
            v_errormsg := SQLERRM;
            INSERT INTO XXTOKS_PAY_RGEV2_ERROR_TRACING( process_id
                                                        , error
                                                        , fecha
                                                        , created_by
                                                        , creation_date
                                                        , last_updated_by
                                                        , last_update_date
                                                        ) VALUES(  id_exec
                                                                , 'Ocurrió un error en el proceso ac_data:'||v_errormsg
                                                                , SYSDATE - 6/24
                                                                , '-1'
                                                                , SYSDATE - 6/24
                                                                , '-1'
                                                                , SYSDATE - 6/24
                                                                );	
            COMMIT;
    END ac_data;
    --
    PROCEDURE ac_clob ( p_id_exec       IN NUMBER,
                        p_fechainicio   IN VARCHAR2,
                        p_fechafin      IN VARCHAR2)
    AS
        contenido   CLOB;
        v_excel     VARCHAR2 (32000);
        v_errormsg  VARCHAR2(512);
        --variables header
        v_elementos CLOB;
        v_header    CLOB;

        CURSOR datos IS
            WITH FAH_AC AS (
                SELECT  /*+materialize*/
                        fah.ESTAFETA,
                        fah.FAH_ACUMULADO,
                        fah.EMPLEADOR_LEGAL
                FROM    XXTOKS_PAY_RGEV2_DATA fah
                WHERE   fah.ID_EXEC = p_id_exec
                        --AND fah.FAH_ACUMULADO != 0
                        AND TO_DATE(fah.EFFECTIVE_DATE,'YYYY-MM-DD') = (
                                                    SELECT  MAX(TO_DATE(fah1.EFFECTIVE_DATE,'YYYY-MM-DD')) -- over (PARTITION BY ESTAFETA)
                                                    FROM    XXTOKS_PAY_RGEV2_DATA fah1   
                                                    WHERE   fah1.ID_EXEC = fah.ID_EXEC
                                                            AND fah1.ESTAFETA = fah.ESTAFETA
                                                            --AND fah1.FAH_ACUMULADO != 0
                                                            AND fah1.EMPLEADOR_LEGAL = fah.EMPLEADOR_LEGAL
                                                    )
                GROUP BY fah.ESTAFETA,fah.FAH_ACUMULADO,fah.EMPLEADOR_LEGAL
            ),
            FINAL AS (
                SELECT  /*+materialize*/
                        xprd.EMPLEADOR_LEGAL,
                        xprd.PERIODO,
                        xprd.UNIDAD,
                        UPPER(xprd.DESCRIPCION) AS DESCRIPCION,
                        xprd.ESTAFETA,
                        UPPER(xprd.NOMBRE) AS NOMBRE,
                        UPPER(xprd.PUESTO) AS PUESTO,
                        xprd.F_INGRESO,
                        xprd.F_BAJA,
                        xprd.CURP,
                        xprd.RFC,
                        xprd.NSS,
                        SUM(xprd.ISR_SUBJECT) AS ISR_GRA,
                        SUM(xprd.ISR_EXEMPT) AS ISR_EXE,
                        SUM(xprd.ISR_WITHHELD) AS ISR_RET,
                        SUM(xprd.NP044) AS NP044,
                        SUM(xprd.NP052) NP052,
                        SUM(xprd.FAH) FAH,
                        SUM(xprd.SUBSIDY_FOR_EMPLOYMENT) ISR_SUB_EMP,
                        SUM(xprd.ISR_CALCULATED) ISR_CALC,
                        (
                            SELECT  fac.FAH_ACUMULADO
                            FROM    FAH_AC fac
                            WHERE   fac.ESTAFETA = xprd.ESTAFETA
                                    AND fac.EMPLEADOR_LEGAL = xprd.EMPLEADOR_LEGAL
                                    AND ROWNUM = 1
                        ) FAH_ACUMULADO
                FROM    XXTOKS_PAY_RGEV2_DATA xprd
                Where 1 = 1
                And xprd.id_exec = p_id_exec
                GROUP BY    xprd.EMPLEADOR_LEGAL,
                            xprd.PERIODO,
                            xprd.UNIDAD,
                            xprd.DESCRIPCION,
                            xprd.ESTAFETA,
                            xprd.NOMBRE,
                            xprd.PUESTO,
                            xprd.F_INGRESO,
                            xprd.F_BAJA,
                            xprd.CURP,
                            xprd.RFC,
                            xprd.NSS
            )

            SELECT  EMPLEADOR_LEGAL||','||
                    PERIODO||','||
                    UNIDAD||','||
                    DESCRIPCION||','||
                    ESTAFETA||','||
                    NOMBRE||','||
                    PUESTO||','||
                    F_INGRESO||','||
                    F_BAJA||','||
                    CURP||','||
                    RFC||','||
                    NSS||','||
                    ISR_GRA||','||
                    ISR_EXE||','||
                    ISR_RET||','||
                    NP044||','||
                    FAH||','||
                    FAH_ACUMULADO||','||
                    NP052||','||
                    ISR_SUB_EMP||','||
                    ISR_CALC AS BODY
            FROM    FINAL
            ORDER BY    
                        PERIODO,
                        NOMBRE;
    --
    BEGIN
        --construcción header
        v_header := 'EMPLEADOR_LEGAL,'||
                    'PERIODO,'||
                    'UNIDAD,'||
                    'DESCRIPCION,'||
                    'ESTAFETA,'||
                    'NOMBRE,'||
                    'PUESTO,'||
                    'F_INGRESO,'||
                    'F_BAJA,'||
                    'CURP,'||
                    'RFC,'||
                    'NSS,'||
                    'ISR_GRA,'||
                    'ISR_EXE,'||
                    'ISR_RET,'||
                    'NP044,'||
                    'FAH,'||
                    'FAH_ACUMULADO,'||
                    'NP052,'||
                    'ISR_SUB_EMP,'||
                    'ISR_CALC';
        --Encabezado de archivo
        contenido := 'REPORTE DE GRAVABLE Y EXENTO'|| CHR(13);
		contenido := contenido ||'Fecha de Ejecucion: ' || TO_CHAR((SYSDATE - 6/24), 'DD/MM/YYYY HH24:MI:SS') || CHR(13);
        contenido := contenido ||'Del: '|| TO_CHAR(TO_DATE(p_fechainicio, 'YYYY-MM-DD'), 'DD/MM/YYYY') || ' al: ' || TO_CHAR(TO_DATE(p_fechafin, 'YYYY-MM-DD'), 'DD/MM/YYYY') || CHR(13) || CHR(13);
        contenido := contenido || ',Pagina:,1' || CHR(13) || CHR(13);
        --inserción header 
        contenido := contenido || v_header || CHR(10);
        --inserción lineas
        FOR line IN datos
        LOOP
            IF line.body NOT LIKE '%0,0,0,0,0,0,0,0,0' THEN
                contenido := contenido || line.body || CHR (10);
            ELSE 
                contenido := contenido;
            END IF;
        END LOOP;

        ac_data (contenido, p_id_exec);
        --
    EXCEPTION 
    WHEN OTHERS THEN
            v_errormsg := SQLERRM;
            INSERT INTO XXTOKS_PAY_RGEV2_ERROR_TRACING( process_id
                                                        , error
                                                        , fecha
                                                        , created_by
                                                        , creation_date
                                                        , last_updated_by
                                                        , last_update_date
                                                        ) VALUES(  p_id_exec
                                                                , 'Ocurrió un error en el proceso ac_clob:'||v_errormsg
                                                                , SYSDATE - 6/24
                                                                , '-1'
                                                                , SYSDATE - 6/24
                                                                , '-1'
                                                                , SYSDATE - 6/24
                                                                );   	
    END ac_clob;
    --
    PROCEDURE init_exe(  
                        p_fechainicio           IN VARCHAR2 
                        , p_fechafin            IN VARCHAR2 
                        , p_consolidacion_id    IN VARCHAR2 
                        , p_consolidacion_name  IN VARCHAR2 
                        , p_nomina_id           IN VARCHAR2 
                        , p_nomina_name         IN VARCHAR2 
                        , p_organizacion_id     IN VARCHAR2
                        , p_organizacion_name   IN VARCHAR2
                        , p_acumulado           IN VARCHAR2
                        , p_user_token          IN VARCHAR2 DEFAULT NULL 
                        , p_process_id          IN NUMBER
                        , p_user_name           IN VARCHAR2 DEFAULT '-1'
                        , p_status              OUT NUMBER
                    ) AS
    --
    v_id_exec   NUMBER;
    v_inicio_f  DATE;
    v_errormsg  VARCHAR2(512);
    --+
    v_inicio 	DATE := TO_DATE(p_fechainicio,'YYYY-MM-DD');
    v_fin		DATE := TO_DATE(p_fechafin,'YYYY-MM-DD');
    v_flag		CHAR := 'N';
    --+
    BEGIN
        --+
        -- IF MONTHS_BETWEEN(v_fin,v_inicio) > 2 THEN
        --     v_flag := 'Y';
        -- ELSE
        --     v_flag := 'N';
        -- END IF;
        --+
        v_inicio := SYSDATE;
        --
        l_user_token := p_user_token;
        --
        v_id_exec := p_process_id;
        BEGIN
        
        INSERT INTO XXTOKS_PAY_RGEV2_PROCESS(   PROCESS_ID,
                                                NOMINA_ID,
                                                NOMINA_NAME,
                                                CONSOLIDACION_ID,
                                                CONSOLIDACION_NAME,
                                                ORGANIZACION_ID,
                                                ORGANIZACION_NAME,
                                                FECHA_INICIO,
                                                FECHA_FIN,
                                                STATUS,
                                                F_INICIO,
                                                CLIENT_IDENTIFIER,
                                                ACUMULADO_FLAG,
                                                FLAG )VALUES( v_id_exec,
                                                                        p_nomina_id,
                                                                        p_nomina_name,
                                                                        p_consolidacion_id,
                                                                        p_consolidacion_name,
                                                                        p_organizacion_id,
                                                                        p_organizacion_name,
                                                                        p_fechainicio,
                                                                        p_fechafin,
                                                                        'INIT_PROCESS',
                                                                        SYSDATE - 6/24,
                                                                        p_user_name,
                                                                        p_acumulado,
                                                                        v_flag );
            --+
        EXCEPTION
            WHEN OTHERS THEN
            v_errormsg := SQLERRM;
            INSERT INTO XXTOKS_PAY_RGEV2_ERROR_TRACING( process_id
                                                        , error
                                                        , fecha
                                                        , created_by
                                                        , creation_date
                                                        , last_updated_by
                                                        , last_update_date
                                                        ) VALUES(  v_id_exec
                                                                , 'Ocurrió un error al insertar en XXTOKS_PAY_RGEV2_PROCESS:'||v_errormsg
                                                                , SYSDATE - 6/24
                                                                , '-1'
                                                                , SYSDATE - 6/24
                                                                , '-1'
                                                                , SYSDATE - 6/24
                                                                );
        END;
        --+
        INSERT INTO XXTOKS_RGEV2_LOG (ID_EXEC,PHASE) VALUES (v_id_exec,'INICIO ORGANIZACIONES');
        --+ Obtenemos las organizaciones que serán procesadas
        xxtoks_pay_rgev2_new_pkg.get_organizations( p_fechainicio
                                                , p_fechafin
                                                , p_consolidacion_id
                                                , p_nomina_id
                                                , v_id_exec
                                                , p_organizacion_id
                                                , p_acumulado
                                                , l_user_token
                                                , p_user_name
                                                , v_flag
                                                );
        --+
        INSERT INTO XXTOKS_RGEV2_LOG (ID_EXEC,PHASE) VALUES (v_id_exec,'FIN ORGANIZACIONES E INICIO DE PARALELOS');
        --+ Lanzamos los procesos en paralelo
        xxtoks_pay_rgev2_new_pkg.generar_procesos_paralelo(v_id_exec);
        --+
        INSERT INTO XXTOKS_RGEV2_LOG (ID_EXEC,PHASE) VALUES (v_id_exec,'FIN DE PARALELOS E INICIO DE ARMADO ARCHIVO');
        --+ Guardado de clob para archivo
        COMMIT;
        ac_clob ( v_id_exec,
                  p_fechainicio,
                  p_fechafin );
        --+
        INSERT INTO XXTOKS_RGEV2_LOG (ID_EXEC,PHASE) VALUES (v_id_exec,'FIN DE ARMADO ARCHIVO E INICIO DE GUARDADO');
        --+ Limpiar las tablas usadas para información con el id de ejecución
        --xxtoks_pay_rgev2_new_pkg.limpiar(v_id_exec);
        --+
        INSERT INTO XXTOKS_RGEV2_LOG (ID_EXEC,PHASE) VALUES (v_id_exec,'FIN DE GUARDADO Y FINAL DEL PROCESO');
        --+ Actualizar status del proceso para historial
        UPDATE XXTOKS_PAY_RGEV2_PROCESS
        SET STATUS = 'PROCESSED'
        ,F_FIN = SYSDATE - 6/24
        WHERE PROCESS_ID = v_id_exec;
        
        --+ Si falla
        EXCEPTION WHEN OTHERS THEN
        
        v_errormsg := SQLERRM;
        INSERT INTO XXTOKS_PAY_RGEV2_ERROR_TRACING( process_id
                                                    , error
                                                    , fecha
                                                    , created_by
                                                    , creation_date
                                                    , last_updated_by
                                                    , last_update_date
                                                    ) VALUES(  v_id_exec
                                                            , 'Ocurrió un error en el proceso init_exe:'||v_errormsg
                                                            , SYSDATE - 6/24
                                                            , '-1'
                                                            , SYSDATE - 6/24
                                                            , '-1'
                                                            , SYSDATE - 6/24
                                                            );				
                

    END init_exe;
        --
END xxtoks_pay_rgev2_new_pkg;
