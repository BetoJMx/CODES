--QUERY G_3 RECIBO FINIQUITO CFDI V2
/*
    CONSULTA PARA EXTRACCION DE INFORMACION BASE Y SUMA DE RESULTADOS DE NOMINA DE 
    EMPLEADOS POR PERIODOS PARA SU POST-PROCESAMIENTO Y GENERACION DE REPORTE FINAL.

VERSION |RESPONSABLE            |CAMBIO                                                         |FECHA
--------------------------------------------------------------------------------------------------------
2.0.0   |ALBERTO JUAREZ         |ADD SOLUTION FOR MULTIPLE RESULTS SUBQUERY 		            |010323
*/
WITH 
    cat_elements as (
        SELECT  /*+ materialize */
                meaning as element_name
              , decode( tag,
                  'FONDO_AHORRO', 'FONDO_AHORRO',
                  'INTERESES', 'INTERESES'
                ) as element_name_reporte
        FROM    fnd_lookup_values
        WHERE   1 = 1
        AND     lookup_type = 'XXGRG_INDEMN_RECIBO_FIN_CFDI'
        AND     tag in ('FONDO_AHORRO', 'INTERESES')
        AND     language = 'US'
        AND     enabled_flag = 'Y'
    ),
    totales_finiquito_h2 as (
        SELECT  
                DECODE(.00000000001*(MOD(ABS((total)),1000000000000)-MOD(ABS((total)),100000000000)),
                     1,DECODE(SUBSTR(TO_CHAR(TRUNC((total),0)),-12,3),'100','CIEN ','CIENTO '),
                     2,'DOSCIENTOS ',3,'TRESCIENTOS ',
                     4,'CUATROCIENTOS ',5,'QUINIENTOS ',6,'SEISCIENTOS ',
                     7,'SETECIENTOS ',8,'OCHOCIENTOS ',9,'NOVECIENTOS ',
                     0,NULL,'ERROR') ||
                     DECODE(.0000000001*(MOD(ABS((total)),100000000000)-MOD(ABS((total)),10000000000)),
                     1,(DECODE(.000000001*(MOD(ABS((total)),10000000000)
                     -MOD(ABS((total)),1000000000)),
                     0,'DIEZ ',1,'ONCE ',2,'DOCE ',3,'TRECE ',
                     4,'CATORCE ',5,'QUINCE ',6,'DIECISEIS ',
                     7,'DIECISIETE ',8,'DIECIOCHO ',9,'DIECINUEVE ','ERROR')),
                     2,(DECODE(.000000001*(MOD(ABS((total)),10000000000)
                     -MOD(ABS((total)),1000000000)),
                     0,'VEINTE ',1,'VEINTIUN ',2,'VEINTIDOS ',3,'VEINTITRES ',
                     4,'VEINTICUATRO ',5,'VEINTICINCO ',6,'VEINTISEIS ',
                     7,'VEINTISIETE ',8,'VEINTIOCHO ',9,'VEINTINUEVE ','ERROR')),
                     3,'TREINTA ',4,'CUARENTA ',
                     5,'CINCUENTA ',6,'SESENTA ',7,'SETENTA ',
                     8,'OCHENTA ',9,'NOVENTA ',NULL) ||
                     DECODE(.000000001*(MOD(ABS((total)),10000000000)-MOD(ABS((total)),1000000000))
                     ,0,NULL,
                     (DECODE(.0000000001*(MOD(ABS((total)),100000000000)-MOD(ABS((total)),10000000000)),
                     0,NULL,1,NULL,2,NULL,'Y ')))||
                     DECODE(.0000000001*(MOD(ABS((total)),100000000000)-MOD(ABS((total)),10000000000)),
                     1,NULL,2,NULL,(DECODE(.000000001*(MOD(ABS((total)),10000000000)
                     -MOD(ABS((total)),1000000000)),
                     1,'UN ',2,'DOS ',3,'TRES ',4,'CUATRO ',5,'CINCO ',
                     6,'SEIS ',7,'SIETE ',8,'OCHO ',9,'NUEVE ',
                     0,NULL,'ERROR')))||
                     DECODE(SIGN(ABS((total))-999.99),1,
                     DECODE(.00000000001*(MOD(ABS((total)),1000000000000)
                     -MOD(ABS((total)),100000000000)),0,
                     DECODE (.0000000001*(MOD(ABS((total)),100000000000)
                     -MOD(ABS((total)),10000000000)),0,
                     DECODE(.000000001*(MOD(ABS((total)),10000000000)
                     -MOD(ABS((total)),1000000000)),0, NULL, DECODE(SUBSTR(TO_CHAR(TRUNC((total),0)),-10,1),'1','BILLON ','BILLONES ')),
                     'BILLONES '),
                     'BILLONES '),  NULL) ||
                     DECODE(.00000001*(MOD(ABS((total)),1000000000)-MOD(ABS((total)),100000000)),
                     1,DECODE(SUBSTR(TO_CHAR(TRUNC((total),0)),-9,3),'100','CIEN ','CIENTO '),
                     2,'DOSCIENTOS ',3,'TRESCIENTOS ',
                     4,'CUATROCIENTOS ',5,'QUINIENTOS ',6,'SEISCIENTOS ',
                     7,'SETECIENTOS ',8,'OCHOCIENTOS ',9,'NOVECIENTOS ',
                     0,NULL,'ERROR') ||
                     DECODE(.0000001*(MOD(ABS((total)),100000000)-MOD(ABS((total)),10000000)),
                     1,(DECODE(.000001*(MOD(ABS((total)),10000000)
                     -MOD(ABS((total)),1000000)),
                     0,'DIEZ ',1,'ONCE ',2,'DOCE ',3,'TRECE ',
                     4,'CATORCE ',5,'QUINCE ',6,'DIECISEIS ',
                     7,'DIECISIETE ',8,'DIECIOCHO ',9,'DIECINUEVE ','ERROR')),
                     2,(DECODE(.000001*(MOD(ABS((total)),10000000)
                     -MOD(ABS((total)),1000000)),
                     0,'VEINTE ',1,'VEINTIUN ',2,'VENTIDOS ',3,'VEINTITRES ',
                     4,'VEINTICUATRO ',5,'VEINTICINCO ',6,'VEINTISEIS ',
                     7,'VEINTISIETE ',8,'VEINTIOCHO ',9,'VEINTINUEVE ','ERROR')),
                     3,'TREINTA ',4,'CUARENTA ',
                     5,'CINCUENTA ',6,'SESENTA ',7,'SETENTA ',
                     8,'OCHENTA ',9,'NOVENTA ',NULL) ||
                     DECODE(.000001*(MOD(ABS((total)),10000000)-MOD(ABS((total)),1000000))
                     ,0,NULL,
                     (DECODE(.0000001*(MOD(ABS((total)),100000000)-MOD(ABS((total)),10000000)),
                     0,NULL,1,NULL,2,NULL,'Y ')))||
                     DECODE(.0000001*(MOD(ABS((total)),100000000)-MOD(ABS((total)),10000000)),
                     1,NULL,2,NULL,(DECODE(.000001*(MOD(ABS((total)),10000000)
                     -MOD(ABS((total)),1000000)),
                     1,'UN ',2,'DOS ',3,'TRES ',4,'CUATRO ',5,'CINCO ',
                     6,'SEIS ',7,'SIETE ',8,'OCHO ',9,'NUEVE ',
                     0,NULL,'ERROR')))||
                     DECODE(SIGN(ABS((total))-999.99),1,
                     DECODE(.00000001*(MOD(ABS((total)),1000000000)
                     -MOD(ABS((total)),100000000)),0,
                     DECODE (.0000001*(MOD(ABS((total)),100000000)
                     -MOD(ABS((total)),10000000)),0,
                     DECODE(.000001*(MOD(ABS((total)),10000000)
                     -MOD(ABS((total)),1000000)),0, NULL, DECODE(SUBSTR(TO_CHAR(TRUNC((total),0)),-7,1),
                                                                  '1','MILLON ','MILLONES ')),
                     'MILLONES '),
                     'MILLONES '),  NULL) ||
                     DECODE(.00001*(MOD(ABS((total)),1000000)-MOD(ABS((total)),100000)),
                     1,DECODE(SUBSTR(TO_CHAR(TRUNC((total),0)),-6,3),'100','CIEN ','CIENTO '),
                     2,'DOSCIENTOS ',3,'TRESCIENTOS ',
                     4,'CUATROCIENTOS ',5,'QUINIENTOS ',6,'SEISCIENTOS ',
                     7,'SETECIENTOS ',8,'OCHOCIENTOS ',9,'NOVECIENTOS ',
                     0,NULL,'ERROR') ||
                     DECODE(.0001*(MOD(ABS((total)),100000)-MOD(ABS((total)),10000)),
                     1,(DECODE(.001*(MOD(ABS((total)),10000)-MOD(ABS((total)),1000)),
                     0,'DIEZ ',1,'ONCE ',2,'DOCE ',3,'TRECE ',
                     4,'CATORCE ',5,'QUINCE ',6,'DIECISEIS ',
                     7,'DIECISIETE ',8,'DIECIOCHO ',9,'DIECINUEVE ','ERROR')),
                     2,(DECODE(.001*(MOD(ABS((total)),10000)
                     -MOD(ABS((total)),1000)),
                     0,'VEINTE ',1,'VEINTIUN ',2,'VEINTIDOS ',3,'VEINTITRES ',
                     4,'VEINTICUATRO ',5,'VEINTICINCO ',6,'VEINTISEIS ',
                     7,'VEINTISIETE ',8,'VEINTIOCHO ',9,'VEINTINUEVE ','ERROR')),
                     3,'TREINTA ',4,'CUARENTA ',
                     5,'CINCUENTA ',6,'SESENTA ',7,'SETENTA ',
                     8,'OCHENTA ',9,'NOVENTA ',NULL) ||
                     DECODE(.001*(MOD(ABS((total)),10000)-MOD(ABS((total)),1000))
                     ,0,NULL,
                     (DECODE(.0001*(MOD(ABS((total)),100000)-MOD(ABS((total)),10000)),
                     0,NULL,1,NULL,2,NULL,'Y ')))||
                     DECODE(.0001*(MOD(ABS((total)),100000)-MOD(ABS((total)),10000)),
                     1,NULL,2,NULL,(DECODE(.001*(MOD(ABS((total)),10000)-MOD(ABS((total)),1000)),
                     1,'UN ',2,'DOS ',3,'TRES ',4,'CUATRO ',5,'CINCO ',
                     6,'SEIS ',7,'SIETE ',8,'OCHO ',9,'NUEVE ',
                     0,NULL,'ERROR')))||
                     DECODE(SIGN(ABS((total))-999.99),1,
                     DECODE(.00001*(MOD(ABS((total)),1000000)-MOD(ABS((total)),100000)),0,
                     DECODE (.0001*(MOD(ABS((total)),100000)-MOD(ABS((total)),10000)),0,
                     DECODE(.001*(MOD(ABS((total)),10000)-MOD(ABS((total)),1000)),0,
                     NULL, 'MIL '),
                     'MIL '),
                     'MIL '),  NULL) ||
                     DECODE(.01*(MOD(ABS((total)),1000)-MOD(ABS((total)),100)),
                     1,DECODE(SUBSTR(TO_CHAR(TRUNC((total),0)),-3,3),'100','CIEN ','CIENTO '),
                     2,'DOSCIENTOS ',3,'TRESCIENTOS ',
                     4,'CUATROCIENTOS ',5,'QUINIENTOS ',6,'SEISCIENTOS ',
                     7,'SETECIENTOS ',8,'OCHOCIENTOS ',9,'NOVECIENTOS ',
                     NULL) ||
                     DECODE(.1*(MOD(ABS((total)),100)-MOD(ABS((total)),10)),
                     1,(DECODE(TRUNC(MOD(ABS((total)),10)),
                     0,'DIEZ ',1,'ONCE ',2,'DOCE ',3,'TRECE ',
                     4,'CATORCE ',5,'QUINCE ',6,'DIECISEIS ',
                     7,'DIECISIETE ',8,'DIECIOCHO ',9,'DIECINUEVE ','ERROR')),
                     2,(DECODE(TRUNC(MOD(ABS((total)),10)),
                     0,'VEINTE ',1,'VEINTIUN ',2,'VEINTIDOS ',3,'VEINTITRES ',
                     4,'VEINTICUATRO ',5,'VEINTICINCO ',6,'VEINTISEIS ',
                     7,'VEINTISIETE ',8,'VEINTIOCHO ',9,'VEINTINUEVE ','ERROR')),
                     2,'VEINTE ',3,'TREINTA ',4,'CUARENTA ',
                     5,'CINCUENTA ',6,'SESENTA ',7,'SETENTA ',
                     8,'OCHENTA ',9,'NOVENTA ',NULL) ||
                     DECODE(TRUNC(MOD(ABS((total)),10))
                     ,0,NULL,
                     (DECODE(.1*(MOD(ABS((total)),100)-MOD(ABS((total)),10)),
                     0,NULL,1,NULL,2,NULL,'Y ')))||
                     DECODE(.1*(MOD(ABS((total)),100)-MOD(ABS((total)),10)),
                     1,NULL,2,NULL,(DECODE(TRUNC(MOD(ABS((total)),10)),
                     1,'UN ',2,'DOS ',3,'TRES ',
                     4,'CUATRO ',5,'CINCO ',6,'SEIS ',
                     7,'SIETE ',8,'OCHO ',9,'NUEVE ',
                     0,NULL,'ERROR'))) ||
                    --+ 0´s
                CASE WHEN total != 0 THEN
                     DECODE (MOD(TRUNC((total),0),1000000),0,'DE ',NULL)
                     || 'PESOS '||
                     CASE WHEN DECODE((ABS((total))-TRUNC(ABS((total)))),
                     0,'00',(ABS((total))-TRUNC(ABS((total)))))
                     LIKE '%.0%'
                     THEN
                     REPLACE(DECODE((ABS((total))-TRUNC(ABS((total)))),
                     0,'00',(ABS((total))-TRUNC(ABS((total))))),'.','')
                     ELSE 
                    DECODE(100*(ABS((total))-TRUNC(ABS((total)))),
                     0,'00',100*(ABS((total))-TRUNC(ABS((total))))) end
                     ||'/100'
                     ||' M.N.' 
                END as fa_suma_letra
              , payroll_rel_action_id
              , trim(to_char(total_fdo_ahorro / 2, '999,999,990.00')) as monto_atrabajador
              , trim(to_char(total_fdo_ahorro / 2, '999,999,990.00')) as monto_patron
              , trim(to_char(total_intereses, '999,999,990.00')) as monto_intereses
              , trim(to_char(total, '999,999,990.00')) as monto_fa_suma
        FROM (
                SELECT  payroll_rel_action_id
                      , total_fdo_ahorro
                      , total_intereses
                      , total_fdo_ahorro + total_intereses as total
                FROM  (
                        SELECT  payroll_rel_action_id
                              , nvl(sum( fondo_ahorro ), 0) as total_fdo_ahorro
                              , nvl(sum( intereses ), 0) as total_intereses
                        --FROM    tks_element_results_v
                        FROM  (
                            SELECT ppra.payroll_rel_action_id
                                  , decode( element_name_reporte,
                                            'FONDO_AHORRO', ABS(prrv.result_value), 
                                            0 ) as fondo_ahorro
                                  , decode( element_name_reporte,
                                            'INTERESES', ABS(prrv.result_value), 
                                            0 ) as intereses
                            FROM    
                                    pay_payroll_actions             ppa
                                  , pay_payroll_rel_actions         ppra
                                  , pay_run_types_f                 prtf
                                  , pay_run_results                 prr
                                  , pay_run_result_values           prrv
                                  , pay_element_types_f             pet
                                  , pay_element_types_tl            pettl
                                  , fusion.pay_input_values_f       piv
                                  , pay_input_values_tl             pivtl
                                  , cat_elements                    elem
                            WHERE   1 = 1
                                AND ppa.payroll_action_id = ppra.payroll_action_id
                                AND ppa.payroll_id = :p_payroll_id
                                AND ppa.consolidation_set_id = :p_consolidation_set_id
                                AND ppa.earn_time_period_id = :p_time_period_id
                                AND ppa.assignment_set_id = NVL(:p_object_group_id, ppa.assignment_set_id)
                                AND ppra.run_type_id  = prtf.run_type_id
                                AND ppra.payroll_rel_action_id = prr.payroll_rel_action_id
                                AND prr.run_result_id = prrv.run_result_id
                                AND prr.status IN ('P', 'PA')
                                AND ppra.action_status = 'C'
                                AND ppra.retro_component_id IS NULL     
                                AND prr.element_type_id = pet.element_type_id
                                AND pet.element_type_id = pettl.element_type_id
                                AND pet.element_type_id = piv.element_type_id
                                AND prrv.input_value_id = piv.input_value_id
                                AND piv.input_value_id = pivtl.input_value_id
                                AND piv.user_display_flag = 'Y'
                                AND pettl.element_name = elem.element_name
                                AND UPPER(pivtl.name) IN (  'PAY VALUE'
                                                          , 'VALOR PAGO'
                                                          , 'NET PAY'
                                                          , 'EARNINGS CALCULATED'
                                                          , 'ISR WITHHELD'
                                                          , 'ISR SUBSIDY FOR EMPLOYMENT PAID'
                                                          , 'EMPLOYER SOCIAL SECURITY QUOTA'
                                                          )
                                AND TRUNC (SYSDATE) BETWEEN pet.effective_start_date AND pet.effective_end_date
                                AND TRUNC (SYSDATE) BETWEEN piv.effective_start_date AND piv.effective_end_date
                                AND pettl.language = SYS_CONTEXT ('USERENV', 'LANG')
                                AND pivtl.language = SYS_CONTEXT ('USERENV', 'LANG')
                        )
                        GROUP BY  
                                payroll_rel_action_id
                )
        )
    ),
    tks_payroll_actions_v As (
        Select  prg.assignment_id
              , ppra.payroll_relationship_id
              , ppra.payroll_rel_action_id
              , NVL( ppa.date_earned , ppa.effective_date ) effective_date 
              , ptp.start_date period_start_date 
              , pay.payroll_name
              , ptp.period_name
        From    pay_payroll_actions               ppa
              , pay_payroll_rel_actions           ppra
              , pay_rel_groups_dn                 prg
              , pay_run_types_f                   prtf
              , pay_all_payrolls_f                pay
              , pay_time_periods                  ptp
        Where   1 = 1
            And ppa.consolidation_set_id = :p_consolidation_set_id
            And ppa.payroll_id = :p_payroll_id
            And ppa.earn_time_period_id = :p_time_period_id
            And ppa.assignment_set_id = nvl(:p_object_group_id, ppa.assignment_set_id)
            And ppa.action_type in ( 'R' , 'Q' , 'B' )
            --+
            And ppra.payroll_action_id = ppa.payroll_action_id
            And ppra.action_status = 'C'
            And ppra.retro_component_id is null
            And ppra.chunk_number is not null 
            --+
            And prg.payroll_relationship_id = ppra.payroll_relationship_id
            And prg.group_type = 'A'
            And prtf.run_type_id = ppra.run_type_id
            --+
            And pay.payroll_id = ppa.payroll_id
            And ptp.time_period_id = ppa.earn_time_period_id
            --+
            And ppa.effective_date 
                Between prg.start_date 
                    And prg.end_date
            And ppa.effective_date
                Between pay.effective_start_date 
                    And pay.effective_end_date
            And ppa.effective_date 
                Between prtf.effective_start_date 
                    And prtf.effective_end_date
            And ppa.effective_date 
                Between ptp.start_date
                    And ptp.end_date
    ),
    tks_worker_details_v As (
        SELECT  tpa.payroll_rel_action_id
              , tpa.payroll_name nomina
              , REPLACE(UPPER ((ppn.last_name ||' '||ppn.previous_last_name||' '||ppn.first_name||' '||ppn.middle_names)),'  ',' ') AS nombre
              , pap.person_number no_de_empleado
              , TO_CHAR(
                 (SELECT psdf.seniority_date
                  FROM   per_seniority_dates_f  psdf, -- Seniority Date
                         per_seniority_dates_setup   psds
                  WHERE  psdf.person_id = pap.person_id
                  AND    psdf.seniority_field = 'ORA_ENT'
                  AND    psds.seniority_date_code = psdf.seniority_date_code
                  AND    psds.active_flag = 'Y'
                  AND    TRUNC(SYSDATE) BETWEEN psdf.effective_start_date AND psdf.effective_end_date
                  GROUP BY psdf.seniority_date --*010323
                 )
                 , 'DD/MM/YYYY') fecha_de_ingreso
              , case 
                when ppos.actual_termination_date is null then  
                    (   select to_char(TRUNC(to_date(peev.screen_entry_value,'YYYY-MM-DD HH24:MI:SS')),'dd/mm/yyyy')
                        From
                             pay_entry_usages           peu
                            ,pay_element_entries_f      peef
                            ,pay_element_types_vl       pet
                            ,pay_element_entry_values_f peev
                            ,pay_input_values_tl        piv
                            --
                        Where 1 = 1
                            And peu.payroll_relationship_id(+) = tpa.payroll_relationship_id
                            And peu.element_entry_id = peef.element_entry_id(+)
                            And peef.element_type_id = pet.element_type_id(+)
                            And pet.element_name = 'SETUP FINIQUITO'
                            And piv.name = 'Fha Baja'
                            --+
                            And peev.screen_entry_value is not null
                            And peev.element_entry_id = peef.element_entry_id
                            And peev.input_value_id = piv.input_value_id
                            And piv.language = userenv('LANG')
                            --+
                            And tpa.effective_date between peev.effective_start_date And peev.effective_end_date
                            And tpa.effective_date between peef.effective_start_date And peef.effective_end_date
                            And tpa.effective_date between peu.date_from And peu.date_to
                    ) 
                else 
                    TO_CHAR(ppos.actual_termination_date,'DD/MM/YYYY','NLS_DATE_LANGUAGE = AMERICAN') 
                end fecha_de_baja
              , TO_CHAR (hoi_unidad.org_information1) sucursal
              , CONVERT(pldft.location_name,'us7ascii','al32utf8') as nom_unidad
              , UPPER(CONVERT(pldft.location_name,'us7ascii','al32utf8')) as unidad
              , nvl(:p_documento,0) documento
                --+
              --, upper(xler.registered_name) empresa
              , upper(ple.name) empresa
        FROM  per_all_people_f                  pap
            , per_person_names_f                ppn
            , per_all_assignments_f             paa
            , per_periods_of_service            ppos
            --+
            , hr_organization_information_f     hoi_unidad
            --+
            , tks_payroll_actions_v             tpa  
            --+
            , hr_locations_all                  hla
            , per_location_details_f_tl         pldft
            , per_location_details_f            pldf
            , per_locations                     pl
            , hr_organization_units_f_tl        hou
            --+
            , per_legal_employers               ple
            , xle_entity_profiles               xlep
            , xle_registrations                 xler
        WHERE 1 = 1
            And ppn.person_id = pap.person_id
            And ppn.name_type = 'MX'
            And pap.person_id = NVL( :p_person_id , pap.person_id )
            And paa.person_id = pap.person_id
            And paa.assignment_type = 'E'
            And paa.effective_latest_change = 'Y'
            And paa.location_id = NVL( :p_location_id , paa.location_id )
            And ppos.person_id = paa.person_id
            And ppos.period_of_service_id = paa.period_of_service_id
            And ppos.legal_entity_id = paa.legal_entity_id
            --+
            And paa.organization_id = hoi_unidad.organization_id(+)
            And hoi_unidad.org_information_context(+) = 'PER_GL_COST_CENTER_INFO'
            And hoi_unidad.org_information7(+) = '1'
            --+
            And tpa.assignment_id = paa.assignment_id
            --+
            And paa.location_id = hla.location_id
            And pldft.location_details_id = pldf.location_details_id
            And pldft.language = 'E' --
            --+ ubicacion
            And pl.location_id = paa.location_id
            And pldf.location_id = pl.location_id 
            --+
            And hou.organization_id(+) = paa.business_unit_id 
            And hou.language(+) = SYS_CONTEXT('USERENV', 'LANG')
            --And ppa.date_earned BETWEEN prg.start_date AND prg.end_date
            And tpa.effective_date BETWEEN hou.effective_start_date(+) AND hou.effective_end_date(+)
            --+
            And ple.organization_id = paa.legal_entity_id
            And xlep.legal_entity_id = ple.legal_entity_id
            And xler.source_id = xlep.legal_entity_id
            And xler.source_table = 'XLE_ENTITY_PROFILES'
            --+
            And tpa.effective_date BETWEEN paa.effective_start_date AND paa.effective_end_date
            And tpa.effective_date BETWEEN pap.effective_start_date AND pap.effective_end_date
            And tpa.effective_date BETWEEN ppn.effective_start_date AND ppn.effective_end_date
            --+
            And tpa.effective_date BETWEEN hoi_unidad.effective_start_date AND hoi_unidad.effective_end_date
            And tpa.effective_date BETWEEN pldf.effective_start_date and pldf.effective_end_date
    )
---
SELECT  wdv.payroll_rel_action_id
      , wdv.nomina
      , wdv.nombre
      , wdv.no_de_empleado
      , wdv.fecha_de_ingreso
      , wdv.fecha_de_baja
      , wdv.sucursal
      , wdv.nom_unidad
      , wdv.unidad
      , wdv.documento
      , wdv.finiquito_no
      , wdv.empresa
      , tfh2.fa_suma_letra
      , tfh2.monto_atrabajador
      , tfh2.monto_patron
      , tfh2.monto_intereses
      , tfh2.monto_fa_suma
FROM (
        SELECT  payroll_rel_action_id
              , nomina
              , nombre
              , no_de_empleado
              , fecha_de_ingreso
              , fecha_de_baja
              , sucursal
              , nom_unidad
              , unidad
              , documento
              , empresa
              , case 
                when rownum = 1 then
                    TO_NUMBER(:p_folio_finiquito)
                else 
                    (TO_NUMBER(:p_folio_finiquito) + rownum)-1
                end finiquito_no
        FROM (
                Select * 
                From tks_worker_details_v
                Where 1 = 1
                Order By sucursal , nombre
                )
        ) wdv,
        totales_finiquito_h2 tfh2
        --
WHERE   wdv.payroll_rel_action_id = tfh2.payroll_rel_action_id
ORDER BY sucursal , nombre
