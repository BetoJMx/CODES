--QRYS CARTA RENUNCIA 140823
SELECT  UPPER (trim(ppn.last_name ||' '||ppn.previous_last_name||' '||ppn.first_name||' '||ppn.middle_names)) AS name,
        ppn.person_id
FROM    per_person_names_f          ppn,
        per_person_secured_list_v   papf --per_person_secured_list_v papf
WHERE   ppn.name_type = 'MX'
        AND ppn.person_id = papf.person_id
        --+
        AND sysdate BETWEEN ppn.EFFECTIVE_START_DATE and ppn.EFFECTIVE_END_DATE
        AND sysdate BETWEEN papf.EFFECTIVE_START_DATE and papf.EFFECTIVE_END_DATE
-----+
SELECT  papf.person_number AS name,
        papf.person_id
FROM    per_person_secured_list_v                papf
WHERE   sysdate BETWEEN papf.EFFECTIVE_START_DATE and papf.EFFECTIVE_END_DATE
order by 1

--------------------------------------+

select distinct papf.person_number AS name,
            papf.person_id
   from  per_all_people_f papf --per_person_secured_list_v papf
		   , per_assignment_secured_list_v      paaf
 where paaf.assignment_type = 'E'
    AND paaf.primary_flag = 'Y'
	and papf.person_id = paaf.person_id
	And sysdate BETWEEN papf.EFFECTIVE_START_DATE and papf.EFFECTIVE_END_DATE
	and sysdate BETWEEN paaf.EFFECTIVE_START_DATE and paaf.EFFECTIVE_END_DATE
order by 1
-----+
select distinct UPPER (trim(ppn.last_name ||' '||ppn.previous_last_name||' '||ppn.first_name||' '||ppn.middle_names)) AS name,
    ppn.person_id
   from      per_person_names_f ppn,
             per_all_people_f papf --per_person_secured_list_v papf
		   , per_assignment_secured_list_v      paaf
		   , hr_locations_all pl --per_location_secured_list_v pl
    --  ,hr_locations_all           hla
    , hr_all_positions_f hapf --per_position_secured_list_v           hapf
    , per_jobs pj
where ppn.name_type = 'MX'
    And paaf.assignment_type = 'E'
    And paaf.primary_flag = 'Y'
    And papf.person_id = ppn.person_id
    And ppn.person_id = paaf.person_id
    And paaf.location_id = pl.location_id
    --+
    And hapf.position_id = paaf.position_id
	And pj.job_id = paaf.job_id
	--+
    And sysdate BETWEEN ppn.EFFECTIVE_START_DATE and ppn.EFFECTIVE_END_DATE
    And sysdate BETWEEN papf.EFFECTIVE_START_DATE and papf.EFFECTIVE_END_DATE
    And sysdate BETWEEN paaf.EFFECTIVE_START_DATE and paaf.EFFECTIVE_END_DATE
    --+
	And sysdate between hapf.effective_start_date And hapf.effective_end_date
    And sysdate between pj.effective_start_date And pj.effective_end_date

-------------+

SELECT papf.person_id                                        AS person_id
    ,ppos.actual_termination_date
    ,papf.person_number                                      AS no_de_empleado
    ,(CASE
		WHEN  nvl(pa.action_type_code , 'X' ) = 'EMPL_TERMINATE'
            AND NVL( pa.action_code ,'X' ) != 'GLB_TRANSFER'		THEN 'N'
		ELSE 'Y'
		END 
	) as baja
--	,CONVERT (
--             REPLACE (
--                 REPLACE (
--                     REPLACE (
--                         REPLACE (TRIM (UPPER (ppnf.full_name)), '?', 'N'),
--                         'Ñ',
--                         'N'),
--                     ',',
--                     ''),
--                 'ñ',
--                 'n'),
--             'us7ascii',
--             'UTF8') AS nombre
    --+ahernandez.rosales{29Jul22}
    ,UPPER (trim(ppnf.last_name ||' '||ppnf.previous_last_name||' '||ppnf.first_name||' '||ppnf.middle_names)) nombre
    ,(case when :p_puesto_con_marca = 'N' then
        replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
            CONVERT (REPLACE( REPLACE (  TRIM (UPPER (pj.name)), 'Ñ', 'N'), 'ñ', 'n'), 'us7ascii', 'al32utf8'),
                ' TOKS'),' BEER'),' FF'),' FAROLITO'), ' SS'), ' CEDIS'),' COMISARIATO'),' BEER SGG'),' PANDA EXPRESS'),' PANDA')
        Else
            CONVERT (REPLACE( REPLACE (  TRIM (UPPER (pj.name)), 'Ñ', 'N'), 'ñ', 'n'), 'us7ascii', 'al32utf8')
     end
    ) puesto
    ,TO_CHAR( NVL( 
        (SELECT MIN( ppei.pei_information_date1 ) 
        FROM per_people_extra_info_f ppei 
        WHERE ppei.person_id = paaf.person_id
            And ppei.information_type = 'Cambio de Empleador Legal'
            And ppei.PEI_INFORMATION1 = 'Fecha de Inicio de Base Salarial'
            And TRUNC (:p_fecha_baja) 
                Between ppei.effective_start_date 
                    And ppei.effective_end_date
        ),
        (SELECT psdf.seniority_date
        FROM   per_seniority_dates_f  psdf,
               per_seniority_dates_setup   psds
        WHERE  psdf.person_id = paaf.person_id
            And psdf.seniority_field = 'ORA_ENT'
            And psds.seniority_date_code = psdf.seniority_date_code
            And psds.active_flag = 'Y'
            And TRUNC (:p_fecha_baja) 
                Between psdf.effective_start_date 
                    And psdf.effective_end_date
            And ROWNUM = 1 --+
        )
    ), 'DD/MM/YYYY') fecha_de_ingreso
    ,to_char(:p_fecha_baja,'DD/MM/YYYY','NLS_DATE_LANGUAGE = AMERICAN') fecha_de_baja
    ,to_char(:p_fecha_baja,'fm dd "de" month "de" yyyy','nls_date_language=spanish') fecha
    ,convert(pldft.location_name,'us7ascii','al32utf8') as nom_unidad
    ,to_char (ppos.notified_termination_date, 'DD/MM/YYYY') as emp_fecha_notificacion
    ,convert (upper (paypf.payroll_name), 'us7ascii', 'UTF8') as payroll_name
    ,convert ( upper ( hr_general.decode_lookup ( 
        'ORA_HRX_MX_SS_LEAVE_REASON', ppos.pds_information1 ) ), 'us7ascii', 'UTF8') as sub_motivo_baja
    ,convert (upper (xler.registered_name), 'us7ascii', 'UTF8') empresa
    ,nvl(DECODE(pl.region_2,'México','Estado de México',pl.region_2 ),pl.TOWN_OR_CITY) as ciudad
    ,pl.address_line_1
        || ( case when pl.address_line_2 is not null then 
            ' No. ' || pl.address_line_2
           else 'SN' end )
        || ( case when pl.address_line_3 is not null then ', ' || pl.address_line_3
                    else '' end)
        || ', ' || pl.loc_information14 
        || ', ' || pl.town_or_city 
        || ' CP. ' || pl.postal_code
        || ', ' || nvl( pl.region_3 , pl.region_2 ) domicilio
    --, NVL(NVL(cs.salary_amount, cs_al_periodo.salary_amount), cs_a_la_contratacion.salary_amount) salario_dia
    ,cs.salary_amount salario_dia
    ,(cs.salary_amount * 30)             as salario_mensual
    ,DECODE( .00000000001 * ( MOD( ABS( ( cs.salary_amount * 30 ) ),1000000000000)-MOD( ABS( ( cs.salary_amount * 30 ) ) ,100000000000 ) ),
        1,DECODE(SUBSTR(TO_CHAR(TRUNC((cs.salary_amount * 30),0)),-12,3),'100','CIEN ','CIENTO '),
        2,'DOSCIENTOS ',3,'TRESCIENTOS ',
        4,'CUATROCIENTOS ',5,'QUINIENTOS ',6,'SEISCIENTOS ',
        7,'SETECIENTOS ',8,'OCHOCIENTOS ',9,'NOVECIENTOS ',
        0,NULL,'ERROR') ||
        DECODE(.0000000001*(MOD(ABS((cs.salary_amount * 30)),100000000000)-MOD(ABS((cs.salary_amount * 30)),10000000000)),
        1,(DECODE(.000000001*(MOD(ABS((cs.salary_amount * 30)),10000000000)
        -MOD(ABS((cs.salary_amount * 30)),1000000000)),
        0,'DIEZ ',1,'ONCE ',2,'DOCE ',3,'TRECE ',
        4,'CATORCE ',5,'QUINCE ',6,'DIECISEIS ',
        7,'DIECISIETE ',8,'DIECIOCHO ',9,'DIECINUEVE ','ERROR')),
        2,(DECODE(.000000001*(MOD(ABS((cs.salary_amount * 30)),10000000000)
        -MOD(ABS((cs.salary_amount * 30)),1000000000)),
        0,'VEINTE ',1,'VEINTIUN ',2,'VEINTIDOS ',3,'VEINTITRES ',
        4,'VEINTICUATRO ',5,'VEINTICINCO ',6,'VEINTISEIS ',
        7,'VEINTISIETE ',8,'VEINTIOCHO ',9,'VEINTINUEVE ','ERROR')),
        3,'TREINTA ',4,'CUARENTA ',
        5,'CINCUENTA ',6,'SESENTA ',7,'SETENTA ',
        8,'OCHENTA ',9,'NOVENTA ',NULL) ||
        DECODE(.000000001*(MOD(ABS((cs.salary_amount * 30)),10000000000)-MOD(ABS((cs.salary_amount * 30)),1000000000))
        ,0,NULL,
        (DECODE(.0000000001*(MOD(ABS((cs.salary_amount * 30)),100000000000)-MOD(ABS((cs.salary_amount * 30)),10000000000)),
        0,NULL,1,NULL,2,NULL,'Y ')))||
        DECODE(.0000000001*(MOD(ABS((cs.salary_amount * 30)),100000000000)-MOD(ABS((cs.salary_amount * 30)),10000000000)),
        1,NULL,2,NULL,(DECODE(.000000001*(MOD(ABS((cs.salary_amount * 30)),10000000000)
        -MOD(ABS((cs.salary_amount * 30)),1000000000)),
        1,'UN ',2,'DOS ',3,'TRES ',4,'CUATRO ',5,'CINCO ',
        6,'SEIS ',7,'SIETE ',8,'OCHO ',9,'NUEVE ',
        0,NULL,'ERROR')))||
        DECODE(SIGN(ABS((cs.salary_amount * 30))-999.99),1,
        DECODE(.00000000001*(MOD(ABS((cs.salary_amount * 30)),1000000000000)
        -MOD(ABS((cs.salary_amount * 30)),100000000000)),0,
        DECODE (.0000000001*(MOD(ABS((cs.salary_amount * 30)),100000000000)
        -MOD(ABS((cs.salary_amount * 30)),10000000000)),0,
        DECODE(.000000001*(MOD(ABS((cs.salary_amount * 30)),10000000000)
        -MOD(ABS((cs.salary_amount * 30)),1000000000)),0, NULL, DECODE(SUBSTR(TO_CHAR(TRUNC((cs.salary_amount * 30),0)),-10,1),'1','BILLON ','BILLONES ')),
        'BILLONES '),
        'BILLONES '),  NULL) ||
        DECODE(.00000001*(MOD(ABS((cs.salary_amount * 30)),1000000000)-MOD(ABS((cs.salary_amount * 30)),100000000)),
        1,DECODE(SUBSTR(TO_CHAR(TRUNC((cs.salary_amount * 30),0)),-9,3),'100','CIEN ','CIENTO '),
        2,'DOSCIENTOS ',3,'TRESCIENTOS ',
        4,'CUATROCIENTOS ',5,'QUINIENTOS ',6,'SEISCIENTOS ',
        7,'SETECIENTOS ',8,'OCHOCIENTOS ',9,'NOVECIENTOS ',
        0,NULL,'ERROR') ||
        DECODE(.0000001*(MOD(ABS((cs.salary_amount * 30)),100000000)-MOD(ABS((cs.salary_amount * 30)),10000000)),
        1,(DECODE(.000001*(MOD(ABS((cs.salary_amount * 30)),10000000)
        -MOD(ABS((cs.salary_amount * 30)),1000000)),
        0,'DIEZ ',1,'ONCE ',2,'DOCE ',3,'TRECE ',
        4,'CATORCE ',5,'QUINCE ',6,'DIECISEIS ',
        7,'DIECISIETE ',8,'DIECIOCHO ',9,'DIECINUEVE ','ERROR')),
        2,(DECODE(.000001*(MOD(ABS((cs.salary_amount * 30)),10000000)
        -MOD(ABS((cs.salary_amount * 30)),1000000)),
        0,'VEINTE ',1,'VEINTIUN ',2,'VENTIDOS ',3,'VEINTITRES ',
        4,'VEINTICUATRO ',5,'VEINTICINCO ',6,'VEINTISEIS ',
        7,'VEINTISIETE ',8,'VEINTIOCHO ',9,'VEINTINUEVE ','ERROR')),
        3,'TREINTA ',4,'CUARENTA ',
        5,'CINCUENTA ',6,'SESENTA ',7,'SETENTA ',
        8,'OCHENTA ',9,'NOVENTA ',NULL) ||
        DECODE(.000001*(MOD(ABS((cs.salary_amount * 30)),10000000)-MOD(ABS((cs.salary_amount * 30)),1000000))
        ,0,NULL,
        (DECODE(.0000001*(MOD(ABS((cs.salary_amount * 30)),100000000)-MOD(ABS((cs.salary_amount * 30)),10000000)),
        0,NULL,1,NULL,2,NULL,'Y ')))||
        DECODE(.0000001*(MOD(ABS((cs.salary_amount * 30)),100000000)-MOD(ABS((cs.salary_amount * 30)),10000000)),
        1,NULL,2,NULL,(DECODE(.000001*(MOD(ABS((cs.salary_amount * 30)),10000000)
        -MOD(ABS((cs.salary_amount * 30)),1000000)),
        1,'UN ',2,'DOS ',3,'TRES ',4,'CUATRO ',5,'CINCO ',
        6,'SEIS ',7,'SIETE ',8,'OCHO ',9,'NUEVE ',
        0,NULL,'ERROR')))||
        DECODE(SIGN(ABS((cs.salary_amount * 30))-999.99),1,
        DECODE(.00000001*(MOD(ABS((cs.salary_amount * 30)),1000000000)
        -MOD(ABS((cs.salary_amount * 30)),100000000)),0,
        DECODE (.0000001*(MOD(ABS((cs.salary_amount * 30)),100000000)
        -MOD(ABS((cs.salary_amount * 30)),10000000)),0,
        DECODE(.000001*(MOD(ABS((cs.salary_amount * 30)),10000000)
        -MOD(ABS((cs.salary_amount * 30)),1000000)),0, NULL, DECODE(SUBSTR(TO_CHAR(TRUNC((cs.salary_amount * 30),0)),-7,1),
                                                  '1','MILLON ','MILLONES ')),
        'MILLONES '),
        'MILLONES '),  NULL) ||
        DECODE(.00001*(MOD(ABS((cs.salary_amount * 30)),1000000)-MOD(ABS((cs.salary_amount * 30)),100000)),
        1,DECODE(SUBSTR(TO_CHAR(TRUNC((cs.salary_amount * 30),0)),-6,3),'100','CIEN ','CIENTO '),
        2,'DOSCIENTOS ',3,'TRESCIENTOS ',
        4,'CUATROCIENTOS ',5,'QUINIENTOS ',6,'SEISCIENTOS ',
        7,'SETECIENTOS ',8,'OCHOCIENTOS ',9,'NOVECIENTOS ',
        0,NULL,'ERROR') ||
        DECODE(.0001*(MOD(ABS((cs.salary_amount * 30)),100000)-MOD(ABS((cs.salary_amount * 30)),10000)),
        1,(DECODE(.001*(MOD(ABS((cs.salary_amount * 30)),10000)-MOD(ABS((cs.salary_amount * 30)),1000)),
        0,'DIEZ ',1,'ONCE ',2,'DOCE ',3,'TRECE ',
        4,'CATORCE ',5,'QUINCE ',6,'DIECISEIS ',
        7,'DIECISIETE ',8,'DIECIOCHO ',9,'DIECINUEVE ','ERROR')),
        2,(DECODE(.001*(MOD(ABS((cs.salary_amount * 30)),10000)
        -MOD(ABS((cs.salary_amount * 30)),1000)),
        0,'VEINTE ',1,'VEINTIUN ',2,'VEINTIDOS ',3,'VEINTITRES ',
        4,'VEINTICUATRO ',5,'VEINTICINCO ',6,'VEINTISEIS ',
        7,'VEINTISIETE ',8,'VEINTIOCHO ',9,'VEINTINUEVE ','ERROR')),
        3,'TREINTA ',4,'CUARENTA ',
        5,'CINCUENTA ',6,'SESENTA ',7,'SETENTA ',
        8,'OCHENTA ',9,'NOVENTA ',NULL) ||
        DECODE(.001*(MOD(ABS((cs.salary_amount * 30)),10000)-MOD(ABS((cs.salary_amount * 30)),1000))
        ,0,NULL,
        (DECODE(.0001*(MOD(ABS((cs.salary_amount * 30)),100000)-MOD(ABS((cs.salary_amount * 30)),10000)),
        0,NULL,1,NULL,2,NULL,'Y ')))||
        DECODE(.0001*(MOD(ABS((cs.salary_amount * 30)),100000)-MOD(ABS((cs.salary_amount * 30)),10000)),
        1,NULL,2,NULL,(DECODE(.001*(MOD(ABS((cs.salary_amount * 30)),10000)-MOD(ABS((cs.salary_amount * 30)),1000)),
        1,'UN ',2,'DOS ',3,'TRES ',4,'CUATRO ',5,'CINCO ',
        6,'SEIS ',7,'SIETE ',8,'OCHO ',9,'NUEVE ',
        0,NULL,'ERROR')))||
        DECODE(SIGN(ABS((cs.salary_amount * 30))-999.99),1,
        DECODE(.00001*(MOD(ABS((cs.salary_amount * 30)),1000000)-MOD(ABS((cs.salary_amount * 30)),100000)),0,
        DECODE (.0001*(MOD(ABS((cs.salary_amount * 30)),100000)-MOD(ABS((cs.salary_amount * 30)),10000)),0,
        DECODE(.001*(MOD(ABS((cs.salary_amount * 30)),10000)-MOD(ABS((cs.salary_amount * 30)),1000)),0,
        NULL, 'MIL '),
        'MIL '),
        'MIL '),  NULL) ||
        DECODE(.01*(MOD(ABS((cs.salary_amount * 30)),1000)-MOD(ABS((cs.salary_amount * 30)),100)),
        1,DECODE(SUBSTR(TO_CHAR(TRUNC((cs.salary_amount * 30),0)),-3,3),'100','CIEN ','CIENTO '),
        2,'DOSCIENTOS ',3,'TRESCIENTOS ',
        4,'CUATROCIENTOS ',5,'QUINIENTOS ',6,'SEISCIENTOS ',
        7,'SETECIENTOS ',8,'OCHOCIENTOS ',9,'NOVECIENTOS ',
        NULL) ||
        DECODE(.1*(MOD(ABS((cs.salary_amount * 30)),100)-MOD(ABS((cs.salary_amount * 30)),10)),
        1,(DECODE(TRUNC(MOD(ABS((cs.salary_amount * 30)),10)),
        0,'DIEZ ',1,'ONCE ',2,'DOCE ',3,'TRECE ',
        4,'CATORCE ',5,'QUINCE ',6,'DIECISEIS ',
        7,'DIECISIETE ',8,'DIECIOCHO ',9,'DIECINUEVE ','ERROR')),
        2,(DECODE(TRUNC(MOD(ABS((cs.salary_amount * 30)),10)),
        0,'VEINTE ',1,'VEINTIUN ',2,'VEINTIDOS ',3,'VEINTITRES ',
        4,'VEINTICUATRO ',5,'VEINTICINCO ',6,'VEINTISEIS ',
        7,'VEINTISIETE ',8,'VEINTIOCHO ',9,'VEINTINUEVE ','ERROR')),
        2,'VEINTE ',3,'TREINTA ',4,'CUARENTA ',
        5,'CINCUENTA ',6,'SESENTA ',7,'SETENTA ',
        8,'OCHENTA ',9,'NOVENTA ',NULL) ||
        DECODE(TRUNC(MOD(ABS((cs.salary_amount * 30)),10))
        ,0,NULL,
        (DECODE(.1*(MOD(ABS((cs.salary_amount * 30)),100)-MOD(ABS((cs.salary_amount * 30)),10)),
        0,NULL,1,NULL,2,NULL,'Y ')))||
        DECODE(.1*(MOD(ABS((cs.salary_amount * 30)),100)-MOD(ABS((cs.salary_amount * 30)),10)),
        1,NULL,2,NULL,(DECODE(TRUNC(MOD(ABS((cs.salary_amount * 30)),10)),
        1,'UN ',2,'DOS ',3,'TRES ',
        4,'CUATRO ',5,'CINCO ',6,'SEIS ',
        7,'SIETE ',8,'OCHO ',9,'NUEVE ',
        0,NULL,'ERROR'))) ||
        DECODE (MOD(TRUNC((cs.salary_amount * 30),0),1000000),0,'DE ',NULL)
        || 'PESOS '||
        DECODE(100*(ABS((cs.salary_amount * 30))-TRUNC(ABS((cs.salary_amount * 30)))),
        0,'00',100*(ABS((cs.salary_amount * 30))-TRUNC(ABS((cs.salary_amount * 30)))))
        ||'/100'
        ||' M.N.' salario_mensual_letra
    ,CASE WHEN SUBSTR(xler.registration_number,1,3) = SUBSTR(pldft.location_name,1,3) THEN 
        UPPER(CONVERT(SUBSTR(pldft.location_name,5),'us7ascii','al32utf8'))         
     ELSE 
        UPPER(CONVERT(pldft.location_name,'us7ascii','al32utf8'))
    END unidad
    FROM per_assignment_secured_list_v paaf --per_all_assignments_f
        ,per_periods_of_service     ppos
        ,per_jobs_f_tl              pj
        ,per_person_secured_list_v  papf --per_all_people_f papf
        ,per_person_names_f         ppnf
        ,per_people_legislative_f   pplf
        ,per_national_identifiers   pnii
        ,per_national_identifiers   pnic
        ,per_national_identifiers   pnir
        --+
        ,pay_pay_relationships_dn   pprd
        ,pay_all_payrolls_f         paypf --pay_payroll_secured_list_v  paypf,
        ,pay_payroll_terms          ppt
        ,pay_assigned_payrolls_dn   paypd
        ,pay_rel_groups_dn          prgdn
        --+
        ,hr_organization_information hoi
        --+
        ,hr_locations_all           pl    -- per_location_secured_list_v    pl 
        ,per_location_details_f     pldf
        ,per_location_details_f_tl  pldft
         --+
        ,per_action_occurrences     pao
        ,per_actions_vl             pa
        ,per_action_reasons_vl      par
        ,per_legal_employers        ple
        ,xle_entity_profiles        xlep
        ,xle_registrations          xler
        --+
        --,hr_locations_all           hla
        --+
        ,cmp_salary                cs
        --,cmp_salary                cs_al_periodo
        --,cmp_salary                cs_a_la_contratacion
WHERE 1 = 1
    And papf.person_id = paaf.person_id
    And ppnf.person_id = papf.person_id
    And ppnf.name_type = 'MX'
    And paaf.assignment_type = 'E'
    And paaf.primary_flag = 'Y'
    --+
    And paaf.assignment_id = cs.assignment_id(+)
    --AND papf.person_number = '166970'
    And papf.person_id = nvl( :p_person_id , papf.person_id )
    And papf.person_id = nvl( :p_person_idd , papf.person_id )
    --+
    And pplf.person_id = papf.person_id
    And pplf.legislation_code = 'MX'
    --+
    And pnir.person_id(+) = papf.person_id
    And pnir.national_identifier_type(+) = 'RFC'
    And pnii.person_id(+) = papf.person_id
    And pnii.national_identifier_type(+) = 'IMSS'
    And pnic.person_id(+) = papf.person_id
    And pnic.national_identifier_type(+) = 'CURP'
    --+
    And pj.job_id = paaf.job_id
    And pj.language = sys_context ('USERENV', 'LANG')
    --+
    And ppos.person_id = paaf.person_id
    And ppos.period_of_service_id = paaf.period_of_service_id
    And ppos.legal_entity_id = paaf.legal_entity_id
    --+
    And pprd.person_id(+) = paaf.person_id
    And prgdn.assignment_id = paaf.assignment_id
    And ppt.payroll_relationship_id(+) = pprd.payroll_relationship_id
    And ppt.hr_term_id = prgdn.term_id
    And paypd.payroll_term_id(+) = ppt.payroll_term_id
    And paypf.payroll_id(+) = paypd.payroll_id
    And paypf.payroll_id is not null
    --         AND pap.payroll_id = paypf.payroll_id
    --+
    And hoi.organization_id(+) = paaf.organization_id
    And hoi.org_information_context(+) = 'PER_GL_COST_CENTER_INFO'
    --+
    And pl.location_id = paaf.location_id
    And pldf.location_id = pl.location_id
    And pldft.location_details_id = pldf.location_details_id
    And pldft.language = sys_context ('USERENV', 'LANG')
    --+
    And pao.action_occurrence_id = ppos.action_occurrence_id
    And pa.action_id = pao.action_id
    And par.action_reason_id(+) = pao.action_reason_id

    And paaf.assignment_type = 'E'
    And paaf.primary_flag = 'Y'
    And paaf.assignment_status_type = 'ACTIVE'

    -- AND ppos.actual_termination_date IS NOT NULL
    --+
    And paaf.legal_entity_id = ple.organization_id
    And ple.legal_entity_id = xlep.legal_entity_id
    And xlep.legal_entity_id = xler.source_id
    And xler.source_table = 'XLE_ENTITY_PROFILES'
    --+
    And TRUNC (:p_fecha_baja) 
        Between paaf.effective_start_date
            And paaf.effective_end_date
    And TRUNC (:p_fecha_baja) 
        Between pj.effective_start_date
            And pj.effective_end_date
    And TRUNC (:p_fecha_baja) 
        Between papf.effective_start_date
            And papf.effective_end_date
    And TRUNC (:p_fecha_baja) 
        Between ppnf.effective_start_date
            And ppnf.effective_end_date
    And trunc (:p_fecha_baja) 
        between pplf.effective_start_date
            And pplf.effective_end_date
    And TRUNC (:p_fecha_baja) 
        Between pldf.effective_start_date
            And pldf.effective_end_date
    And TRUNC (:p_fecha_baja) 
        Between pldft.effective_start_date
            And pldft.effective_end_date
    And trunc (:p_fecha_baja)
        Between trunc(cs.date_from(+)) 
            And trunc(cs.date_to(+))                                              
ORDER BY ppos.actual_termination_date ASC
