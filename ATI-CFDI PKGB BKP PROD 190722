--ATI/CFDI PKGB BKP PROD 190722
create or replace PACKAGE BODY     xxgrg_pay_cfdi_v2_file_pkg AS     
       
	PROCEDURE limpiar(p_id_exec NUMBER) as     
	BEGIN     
		--     
	 dbms_output.put_line('borrar');     
		/*     
		DELETE     
		FROM      pay.xxtoks_pay_acumulados_org     
		WHERE     1 = 1     
		AND       id_exec = p_id_exec;     
		--     
		--     
		DELETE     
		FROM      pay.xxtoks_pay_acumulados_report_data     
		WHERE     1 = 1     
		AND       id_exec = p_id_exec;     
		--     
		--     
		DELETE     
		FROM      pay.xxtoks_pay_acumulados_element_source     
		WHERE     1 = 1     
		AND       id_exec = p_id_exec;     
		--     
		--     
		     
		DELETE     
		FROM      pay.xxtoks_pay_acumulados_tracing     
		WHERE     1 = 1     
		AND       id_exec = p_id_exec;     
		--     
		DELETE     
		FROM      pay.xxtoks_pay_acumulados_new_error_tracing     
		WHERE     1 = 1     
		AND       id_exec = p_id_exec;     
		*/     
		--     
	END limpiar;     
	--     
	PROCEDURE visual_log(p_message IN VARCHAR2)      
	IS     
	BEGIN     
		--     
		dbms_output.put_line('Message:'||p_message);     
		--     
	EXCEPTION     
	WHEN OTHERS THEN     
		RETURN;     
	END visual_log;     
	--     
	PROCEDURE visual_output(p_message IN VARCHAR2)      
	IS     
	BEGIN     
		--     
		dbms_output.put_line('Message:'||p_message);     
		--     
	EXCEPTION     
	WHEN OTHERS THEN     
		RETURN;     
	END visual_output;     
	--     
	FUNCTION from_base64(  p_clob   IN CLOB)      
	RETURN CLOB IS     
		--     
		/*     
		l_length integer := dbms_lob.getLength(p_clob);     
		l_offset integer := 1;     
		l_amt binary_integer := 800;     
		l_buffer varchar2(32000);     
		--     
		l_result CLOB := empty_clob();     
		--     
		BEGIN     
			--     
			WHILE l_offset <= l_length LOOP     
				--     
				l_buffer := REPLACE(REPLACE(dbms_lob.substr(p_clob, l_amt, l_offset), CHR(10), NULL), CHR(13), NULL);     
				l_offset := l_offset + l_amt;     
				--     
				WHILE l_offset <= l_length AND MOD(dbms_lob.getLength(l_buffer), 4) > 0 LOOP     
					--     
					l_buffer := l_buffer || REPLACE(REPLACE(dbms_lob.SUBSTR(p_clob, 1, l_offset), CHR(10), NULL), CHR(13), NULL);     
					l_offset := l_offset + 1;     
					--     
				END LOOP;     
				--     
				l_result := l_result || utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw(l_buffer)));     
				--     
			END LOOP;     
			--     
			RETURN l_result;     
			--     
		*/     
		l_blob          BLOB;     
		l_raw           RAW(32767);     
		l_amt           NUMBER := 7700;     
		l_offset        NUMBER := 1;     
		l_temp          VARCHAR2(32767);     
		--     
		l_result        CLOB;     
		--     
		l_dest_offset   PLS_INTEGER := 1;     
		l_src_offset    PLS_INTEGER := 1;     
		l_lang_context  PLS_INTEGER := DBMS_LOB.default_lang_ctx;     
		l_warning       PLS_INTEGER;     
	BEGIN     
		--     
		BEGIN     
			--     
			dbms_lob.createtemporary(l_blob, FALSE, dbms_lob.call);     
			--     
			LOOP     
				--     
				dbms_lob.read(p_clob, l_amt, l_offset, l_temp);     
				l_offset := l_offset + l_amt;     
				l_raw := utl_encode.base64_decode(utl_raw.cast_to_raw(l_temp));     
				dbms_lob.append(l_blob, to_blob(l_raw));     
				--     
			END LOOP;     
			--     
		EXCEPTION     
		WHEN OTHERS THEN     
			NULL;     
		END;     
		--     
		dbms_lob.createtemporary(  lob_loc  => l_result     
								 , cache    => TRUE     
								);     
		--     
		dbms_lob.converttoclob(  dest_lob       => l_result     
							   , src_blob       => l_blob     
							   , amount         => dbms_lob.lobmaxsize     
							   , dest_offset    => l_dest_offset     
							   , src_offset     => l_src_offset     
							   ,  blob_csid     => dbms_lob.default_csid     
							   , lang_context   => l_lang_context     
							   , warning        => l_warning     
							  );     
		--     
		RETURN l_result;     
		--     
	END from_base64;     
	--     
	PROCEDURE get_organizations(  p_payroll_id              IN VARCHAR2     
								, p_tipo_ejec_nomina        IN VARCHAR2     
								, p_period_name             IN VARCHAR2     
								, p_consolidation_set_id    IN VARCHAR2     
								, p_assignment_set_id       IN VARCHAR2     
								, p_tipo_nomina             IN VARCHAR2     
								, p_assig_set_esp_id        IN VARCHAR2     
								, p_fecha_liquidacion       IN VARCHAR2     
								, p_fecha_inicial           IN VARCHAR2     
								, p_fecha_final             IN VARCHAR2     
								, p_txt_cheque              IN VARCHAR2     
								, p_balance_adj_flag        IN VARCHAR2     
								, p_process_id              IN NUMBER     
								, p_user_token              IN VARCHAR2     
							   ) IS     
		--     
		v_user_name                VARCHAR2 (100);     
		v_password                 VARCHAR2 (100);     
		--     
		v_ws_url                   VARCHAR2 (500);     
		v_ws_action                VARCHAR2 (500) := 'http://xmlns.oracle.com/oxp/service/PublicReportService/ExternalReportWSSService/runReportRequest'; --Este es el action que va a ejecutar     
		--     
		v_ws_envelope              CLOB;     
		v_ws_response_clob         CLOB;     
		--     
		v_ws_resp_xml              XMLTYPE;     
		v_ws_resp_xml2             XMLTYPE;     
		--     
		v_cdata                    CLOB;     
		v_clob                     CLOB;     
		--     
		v_error                     VARCHAR2(500);     
		--     
	BEGIN     
		/*		     
		--     
		--Obtenemos credenciales     
		pay.xxtoks_pay_url_wsdl_pkg.get_data(  v_ws_url     
											 , v_user_name     
											 , v_password     
											);     
		*/												     
		--     
		v_ws_envelope :=     
						'<soap:Envelope xmlns:pub="http://xmlns.oracle.com/oxp/service/PublicReportService" xmlns:soap="http://www.w3.org/2003/05/soap-envelope">     
								<soap:Body>     
								<pub:runReport>     
									<pub:reportRequest>     
										<pub:parameterNameValues>     
										<pub:item>     
										<pub:name>p_payroll_id</pub:name>     
										<pub:values>     
											<pub:item>'||p_payroll_id||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_tipo_ejec_nomina</pub:name>     
										<pub:values>     
											<pub:item>'||p_tipo_ejec_nomina||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_period_name</pub:name>     
										<pub:values>     
											<pub:item>'||p_period_name||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_consolidation_set_id</pub:name>     
										<pub:values>     
											<pub:item>'||p_consolidation_set_id||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_assignment_set_id</pub:name>     
										<pub:values>     
											<pub:item>'||p_assignment_set_id||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_tipo_nomina</pub:name>     
										<pub:values>     
											<pub:item>'||p_tipo_nomina||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_assig_set_esp_id</pub:name>     
										<pub:values>     
											<pub:item>'||p_assig_set_esp_id||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_fecha_liquidacion</pub:name>     
										<pub:values>     
											<pub:item>'||p_fecha_liquidacion||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_fecha_inicial</pub:name>     
										<pub:values>     
											<pub:item>'||p_fecha_inicial||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_fecha_final</pub:name>     
										<pub:values>     
											<pub:item>'||p_fecha_final||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_txt_cheque</pub:name>     
										<pub:values>     
											<pub:item>'||p_txt_cheque||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_balance_adj_flag</pub:name>     
										<pub:values>     
											<pub:item>'||p_balance_adj_flag||'</pub:item>     
										</pub:values>     
										</pub:item>     
										</pub:parameterNameValues>     
										<pub:attributeFormat>xml</pub:attributeFormat>     
										<pub:reportAbsolutePath>/Reportes Custom/PAY/ATI/ATI_UNIDADES_TEMPLATE.xdo</pub:reportAbsolutePath>     
										<pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>     
									</pub:reportRequest>     
								</pub:runReport>     
							</soap:Body>     
						</soap:Envelope>';     
		--     
		/*			     
		apex_web_service.g_request_headers (1).name := 'SOAPAction';     
		apex_web_service.g_request_headers (1).value := v_ws_action;     
		apex_web_service.g_request_headers (2).name := 'Content-Type';     
		apex_web_service.g_request_headers (2).value := 'application/soap+xml; charset=UTF8';     
		--     
		v_ws_response_clob := apex_web_service.make_rest_request(  p_url                => v_ws_url     
																 , p_http_method        => 'POST'     
																 , p_body               => v_ws_envelope     
																 , p_username           => v_user_name     
																 , p_password           => v_password     
																 , p_transfer_timeout   => 1000     
																);     
		--     
		v_ws_resp_xml := xmltype.createxml(v_ws_response_clob);     
		--     
		SELECT    (cdata_section)     
		INTO      v_cdata     
		FROM      xmltable(     
							 xmlnamespaces(  'http://www.w3.org/2003/05/soap-envelope' AS "env"     
										   , 'http://xmlns.oracle.com/oxp/service/PublicReportService' AS "ns2"     
										  )     
						   , '/env:Envelope/env:Body/ns2:runReportResponse/ns2:runReportReturn' PASSING v_ws_resp_xml COLUMNS cdata_section CLOB PATH 'ns2:reportBytes'     
						  ) dat;     
		--     
		v_clob := from_base64(v_cdata);     
		*/                 
		--     
		--------------------TOKEN---------------------     
		----------------------------------------------     
		dbms_output.put_line('Paso 1:');    
		GRG_COMMON_CONNECTIONS_ATI_PKG.get_otbi_report( --04.Ene.21     
--        GRG_COMMON_CONNECTIONS.get_otbi_report(    
            l_ws_envelope => v_ws_envelope,     
            l_user_token  => p_user_token,     
            x_ws_response => v_clob      
        );     
		---------------------------------------------     
		----------------------------------------------    
		dbms_output.put_line('Paso 2:');			     
		v_ws_resp_xml2 := xmltype.createxml(v_clob);     
		--     
		FOR v_organization IN ( SELECT         
								 xml_data.organization_id     
								,CONVERT(xml_data.organization_name,'us7ascii','al32utf8') organization_name     
								,xml_data.numero_empleados       
								FROM      XMLTABLE (     
													 '/DATA_DS/G_1' PASSING xmltype.createxml(v_clob)     
													 COLUMNS     
													 ORGANIZATION_ID VARCHAR2(250) PATH 'ORGANIZATION_ID',     
													 ORGANIZATION_NAME VARCHAR2(250) PATH 'ORGANIZATION_NAME',     
													 NUMERO_EMPLEADOS VARCHAR2(250) PATH 'NUMERO_EMPLEADOS'     
												   ) xml_data     
							  ) LOOP     
			--     
			BEGIN     
				--     
				INSERT INTO pay.xxtoks_pay_ati_organization (  nomina     
															 , tipo_ejec_nomina     
															 , periodo     
															 , juego_consolidacion     
															 , juego_asignacion     
															 , tipo_nomina     
															 , juego_asignacion_esp     
															 , fecha_liquidacion     
															 , fecha_inicial     
															 , fecha_final     
															 , texto_cheque     
															 , tipo_acumulado     
															 , process_id     
															 , organization_id     
															 , organization_name     
															 , numero_empleados     
															 , created_by     
															 , creation_date     
															 , last_updated_by     
															 , last_update_date     
															 , token    
															 )VALUES(  p_payroll_id     
																	 , p_tipo_ejec_nomina     
																	 , p_period_name     
																	 , p_consolidation_set_id     
																	 , p_assignment_set_id     
																	 , p_tipo_nomina     
																	 , p_assig_set_esp_id     
																	 , p_fecha_liquidacion     
																	 , p_fecha_inicial     
																	 , p_fecha_final     
																	 , p_txt_cheque     
																	 , p_balance_adj_flag     
																	 , p_process_id     
																	 , v_organization.organization_id     
																	 , v_organization.organization_name     
																	 , v_organization.numero_empleados     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	 , p_user_token    
																	);     
				--     
				--COMMIT;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  p_process_id     
																 , 'Ocurri? un error al guardar la informaci?n de las organizaciones:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				COMMIT;     
				--     
			END;     
			--     
		END LOOP;     
		--     
	EXCEPTION     
	WHEN OTHERS THEN     
		--     
		v_error := SQLERRM;     
		--     
		INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
												 , error     
												 , fecha     
												 , created_by     
												 , creation_date     
												 , last_updated_by     
												 , last_update_date     
												 , mensaje    
												) VALUES(  p_process_id     
														 , 'Ocurri? un error al obtener la informaci?n de las organizaciones:'||v_error     
														 , SYSDATE - 6/24     
														 , '-1'     
														 , SYSDATE - 6/24     
														 , '-1'     
														 , SYSDATE - 6/24     
														 , v_ws_envelope    
														);     
		--     
		COMMIT;     
		--     
	END get_organizations;     
		     
	--     
	PROCEDURE get_result_values(  p_start_id    NUMBER     
								, p_end_id      NUMBER     
							   ) IS     
		--     
		CURSOR c_organizations IS     
			SELECT    nomina     
					, tipo_ejec_nomina     
					, periodo     
					, juego_consolidacion     
					, juego_asignacion     
					, tipo_nomina     
					, juego_asignacion_esp     
					, fecha_liquidacion     
					, fecha_inicial     
					, fecha_final     
					, texto_cheque     
					, tipo_acumulado     
					, process_id     
					, organization_id     
					, organization_name     
					, numero_empleados     
					, token    
			FROM      xxtoks_pay_ati_organization     
			WHERE     1 = 1     
			AND       id BETWEEN p_start_id AND p_end_id     
			AND       process_id = (     
									SELECT    process_id     
									FROM      xxtoks_pay_ati_organization     
									WHERE     id = p_start_id     
								   );     
			     
		--     
		l_user_name         VARCHAR2 (100);     
		l_password          VARCHAR2 (100);     
		l_ws_url            VARCHAR2 (500);     
		l_ws_action         VARCHAR2 (500) := 'http://xmlns.oracle.com/oxp/service/PublicReportService/ExternalReportWSSService/runReportRequest';     
		--     
		l_ws_envelope       CLOB;     
		--     
		l_ws_response_clob  CLOB;     
		--     
		v_cdata             CLOB;     
		v_contenido         CLOB;     
		--     
		l_ws_resp_xml       XMLTYPE;     
		l_ws_resp_xml2      XMLTYPE;     
		--     
		--     
		v_val               PLS_INTEGER;     
		v_lines_arr         apex_t_varchar2;     
		v_content_arr       apex_t_varchar2;     
		p_errormsg          VARCHAR2 (512 CHAR);     
		v_inicio            VARCHAR2(200);     
		--     
		v_error             VARCHAR2(500);     
		--     
	BEGIN     
		--     
		/*             
		apex_web_service.g_request_headers(1).name := 'SOAPAction';     
		apex_web_service.g_request_headers(1).value := l_ws_action;     
		apex_web_service.g_request_headers(2).name := 'Content-Type';     
		apex_web_service.g_request_headers(2).value := 'application/soap+xml; charset=UTF8';     
		--     
		pay.xxtoks_pay_url_wsdl_pkg.get_data(  l_ws_url     
											 , l_user_name     
											 , l_password     
											);     
		*/												     
		--     
		FOR v_organization IN c_organizations LOOP     
		     
			--     
			--v_inicio := TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS');     
			--INSERT INTO xxtoks_pay_acumulados_tracing(contenido, f_inicio, f_fin, ins_type) VALUES(NULL, v_inicio, TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'), 'ORG_ID: '||v_organization.organization_id||' 1. INICIO');     
			--COMMIT;     
			--     
			l_ws_envelope :=     
							'<soap:Envelope xmlns:pub="http://xmlns.oracle.com/oxp/service/PublicReportService" xmlns:soap="http://www.w3.org/2003/05/soap-envelope">     
								<soap:Body>     
								<pub:runReport>     
									<pub:reportRequest>     
										<pub:parameterNameValues>     
										<pub:item>     
										<pub:name>p_payroll_id</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.nomina||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_tipo_ejec_nomina</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.tipo_ejec_nomina||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_period_name</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.periodo||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_consolidation_set_id</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.juego_consolidacion||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_assignment_set_id</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.juego_asignacion||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_tipo_nomina</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.tipo_nomina||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_assig_set_esp_id</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.juego_asignacion_esp||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_fecha_liquidacion</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.fecha_liquidacion||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_fecha_inicial</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.fecha_inicial||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_fecha_final</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.fecha_final||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_txt_cheque</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.texto_cheque||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_balance_adj_flag</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.tipo_acumulado||'</pub:item>     
										</pub:values>     
										</pub:item>     
										<pub:item>     
										<pub:name>p_organization_id</pub:name>     
										<pub:values>     
											<pub:item>'||v_organization.organization_id||'</pub:item>     
										</pub:values>     
										</pub:item>     
										</pub:parameterNameValues>     
										<pub:attributeFormat>xml</pub:attributeFormat>     
										<pub:reportAbsolutePath>/Reportes Custom/PAY/ATI/ATI_TEMPLATE.xdo</pub:reportAbsolutePath>     
										<pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>     
									</pub:reportRequest>     
								</pub:runReport>     
							</soap:Body>     
						</soap:Envelope>';     
			--     
			--v_inicio := TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS');     
			--INSERT INTO xxtoks_pay_acumulados_tracing(contenido, f_inicio, f_fin, ins_type) VALUES(l_ws_envelope, v_inicio, TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'), 'ORG_ID: '||v_organization.organization_id||' 2. ANTES PETICION');     
			--COMMIT;     
			--     
			--------------------TOKEN---------------------     
			----------------------------------------------     
			GRG_COMMON_CONNECTIONS_ATI_PKG.get_otbi_report( --04.Ene.21    
--			GRG_COMMON_CONNECTIONS.get_otbi_report(     
                l_ws_envelope => l_ws_envelope,     
                l_user_token  => v_organization.token,     
                x_ws_response => v_contenido      
            );     
			---------------------------------------------     
			----------------------------------------------     
			/*				     
			     
			BEGIN     
				--     
				l_ws_response_clob := apex_web_service.make_rest_request (  p_url               => l_ws_url     
																		  , p_http_method       => 'POST'     
																		  , p_body              => l_ws_envelope     
																		  , p_username          => l_user_name     
																		  , p_password          => l_password     
																		  , p_transfer_timeout  => 1000     
																		 );     
				--     
			EXCEPTION     
				WHEN OTHERS THEN     
					--     
					v_error := SQLERRM;     
					--     
					INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
															 , error     
															 , fecha     
															 , created_by     
															 , creation_date     
															 , last_updated_by     
															 , last_update_date     
															) VALUES(  v_organization.process_id     
																	 , 'Error al realizar la petici?n de los resultados. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	);     
					--     
					COMMIT;     
					--     
					RETURN;     
					--     
			END;     
			--     
			--v_inicio := TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS');     
			--INSERT INTO xxtoks_pay_acumulados_tracing(contenido, f_inicio, f_fin, ins_type) VALUES(l_ws_response_clob, v_inicio, TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'), 'ORG_ID: '||v_organization.organization_id||' 3. ANTES CREATEXML');     
			--COMMIT;     
			--     
			BEGIN     
				--     
				l_ws_resp_xml := xmltype.createxml(l_ws_response_clob);     
				--     
			EXCEPTION     
				WHEN OTHERS THEN     
					--     
					v_error := SQLERRM;     
					--     
					INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
															 , error     
															 , fecha     
															 , created_by     
															 , creation_date     
															 , last_updated_by     
															 , last_update_date     
															) VALUES(  v_organization.process_id     
																	 , 'Error al crear el XML. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	);     
					--     
					COMMIT;     
					--     
					RETURN;     
					--     
			END;     
			--     
			--v_inicio := TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS');     
			--INSERT INTO xxtoks_pay_acumulados_tracing(contenido, f_inicio, f_fin, ins_type) VALUES(NULL, v_inicio, TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'), 'ORG_ID: '||v_organization.organization_id||' 4. ANTES XMLTABLE');     
			--COMMIT;     
			--     
			BEGIN     
				--     
				SELECT    (cdata_section)     
				INTO      v_cdata     
				FROM      xmltable(     
									 xmlnamespaces(  'http://www.w3.org/2003/05/soap-envelope' AS "env"     
												   , 'http://xmlns.oracle.com/oxp/service/PublicReportService' AS "ns2"     
												  )     
								   , '/env:Envelope/env:Body/ns2:runReportResponse/ns2:runReportReturn' PASSING l_ws_resp_xml COLUMNS cdata_section CLOB PATH 'ns2:reportBytes'     
								  ) dat;     
			EXCEPTION     
				WHEN OTHERS THEN     
					--     
					v_error := SQLERRM;     
					--     
					INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
															 , error     
															 , fecha     
															 , created_by     
															 , creation_date     
															 , last_updated_by     
															 , last_update_date     
															) VALUES(  v_organization.process_id     
																	 , 'Error al crear la tabla XML. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	);     
					--     
					COMMIT;     
					--     
					RETURN;     
					--     
			END;     
			--     
			--     
			--v_inicio := TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS');     
			--INSERT INTO xxtoks_pay_acumulados_tracing(contenido, f_inicio, f_fin, ins_type) VALUES(NULL, v_inicio, TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'), 'ORG_ID: '||v_organization.organization_id||' 5. ANTES BASE64');     
			--COMMIT;     
			--     
			BEGIN     
				--     
				v_contenido := from_base64(v_cdata);     
				--     
			EXCEPTION     
				WHEN OTHERS THEN     
					--     
					v_error := SQLERRM;     
					--     
					INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
															 , error     
															 , fecha     
															 , created_by     
															 , creation_date     
															 , last_updated_by     
															 , last_update_date     
															 , mensaje     
															) VALUES(  v_organization.process_id     
																	 , 'Error al convertir a base64. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	 , v_cdata     
																	);     
					--     
					COMMIT;     
					--     
					RETURN;     
					--     
			END;     
			--     
			--     
			--v_inicio := TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS');     
			--INSERT INTO xxtoks_pay_acumulados_tracing(contenido, f_inicio, f_fin, ins_type) VALUES(NULL, v_inicio, TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'), 'ORG_ID: '||v_organization.organization_id||' 6. ANTES CREATEXML2');     
			--COMMIT;     
			--     
			*/				     
			BEGIN     
				--     
				l_ws_resp_xml2 := xmltype.createxml(v_contenido);     
				--     
			EXCEPTION     
				WHEN OTHERS THEN     
					--     
					v_error := SQLERRM;     
					--     
					INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
															 , error     
															 , fecha     
															 , created_by     
															 , creation_date     
															 , last_updated_by     
															 , last_update_date     
															) VALUES(  v_organization.process_id     
																	 , 'Error al crear el XML2. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	 , '-1'     
																	 , SYSDATE - 6/24     
																	);     
					COMMIT;     
					--     
					RETURN;     
					--     
			END;     
	     
			--     
			--     
			--v_inicio := TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS');     
			--INSERT INTO xxtoks_pay_acumulados_tracing(contenido, f_inicio, f_fin, ins_type) VALUES(NULL, v_inicio, TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'), 'ORG_ID: '||v_organization.organization_id||' 7. ANTES FOR G1');     
			--COMMIT;     
			--     
			BEGIN     
			--     
				FOR header IN (      
								SELECT    *      
								FROM      XMLTABLE (  '/DATA_DS/G_1' PASSING xmltype.createxml(v_contenido) COLUMNS     
													  FECHALIQUIDACION VARCHAR2(250) PATH 'FECHALIQUIDACION'     
													, ANIO VARCHAR2(250) PATH 'ANIO'     
													, MES VARCHAR2(250) PATH 'MES'     
													, NUMRECIBOMES VARCHAR2(250) PATH 'NUMRECIBOMES'     
													, PERIODO VARCHAR2(250) PATH 'PERIODO'     
													, FECHAINICIALPAGO VARCHAR2(250) PATH 'FECHAINICIALPAGO'     
													, FECHAFINALPAGO VARCHAR2(250) PATH 'FECHAFINALPAGO'     
													, SUELDODIARIO VARCHAR2(250) PATH 'SUELDODIARIO'     
													, FECHA VARCHAR2(250) PATH 'FECHA'     
													, METODODEPAGO VARCHAR2(250) PATH 'METODODEPAGO'     
													, LUGAREXPEDICION VARCHAR2(250) PATH 'LUGAREXPEDICION'     
													, TIPONOMINA VARCHAR2(250) PATH 'TIPONOMINA'     
													, BANCO VARCHAR2(250) PATH 'BANCO'     
													, NOMINA VARCHAR2(250) PATH 'NOMINA'     
													, TIPO VARCHAR2(250) PATH 'TIPO'     
													, NUMCUENTA VARCHAR2(250) PATH 'NUMCUENTA'     
													, CLABE VARCHAR2(250) PATH 'CLABE'     
													, FECHAINICIORELLABORAL VARCHAR2(250) PATH 'FECHAINICIORELLABORAL'     
													, ANTIGUEDADPORSEMANA VARCHAR2(250) PATH 'ANTIGUEDADPORSEMANA'     
													, TIPOPAGO VARCHAR2(250) PATH 'TIPOPAGO'     
													, NUMQUINCENA VARCHAR2(250) PATH 'NUMQUINCENA'     
													, NUMEROSUCURSAL VARCHAR2(250) PATH 'NUMEROSUCURSAL'     
													, TIPOSEGMENTONOMINA VARCHAR2(250) PATH 'TIPOSEGMENTONOMINA'     
													, RFC_EMPRESA VARCHAR2(250) PATH 'RFC_EMPRESA'     
													, NOMBRE_EMPRESA VARCHAR2(250) PATH 'NOMBRE_EMPRESA'     
													, REGISTROPATRONAL VARCHAR2(250) PATH 'REGISTROPATRONAL'     
													, REGIMENFISCAL VARCHAR2(250) PATH 'REGIMENFISCAL'     
													, CALLE_EMPRESA VARCHAR2(250) PATH 'CALLE_EMPRESA'     
													, NOEXTERIOR_EMPRESA VARCHAR2(250) PATH 'NOEXTERIOR_EMPRESA'     
													, NOINTERIOR_EMPRESA VARCHAR2(250) PATH 'NOINTERIOR_EMPRESA'     
													, COLONIA_EMPRESA VARCHAR2(250) PATH 'COLONIA_EMPRESA'     
													, LOCALIDAD_EMPRESA VARCHAR2(250) PATH 'LOCALIDAD_EMPRESA'     
													, MUNICIPIO_EMPRESA VARCHAR2(250) PATH 'MUNICIPIO_EMPRESA'     
													, ESTADO_EMPRESA VARCHAR2(250) PATH 'ESTADO_EMPRESA'     
													, PAIS_EMPRESA VARCHAR2(250) PATH 'PAIS_EMPRESA'     
													, CODIGOPOSTAL_EMPRESA VARCHAR2(250) PATH 'CODIGOPOSTAL_EMPRESA'     
													, NOMBRE VARCHAR2(250) PATH 'NOMBRE'     
													, RFC VARCHAR2(250) PATH 'RFC'     
													, IMSS VARCHAR2(250) PATH 'IMSS'     
													, CURP VARCHAR2(250) PATH 'CURP'     
													, CORREO VARCHAR2(250) PATH 'CORREO'     
													, TIPOREGIMEN VARCHAR2(250) PATH 'TIPOREGIMEN'     
													, TIPOCONTRATO VARCHAR2(250) PATH 'TIPOCONTRATO'     
													, SINDICALIZADO VARCHAR2(250) PATH 'SINDICALIZADO'     
													, RIESGOPUESTO VARCHAR2(250) PATH 'RIESGOPUESTO'     
													, PERIODICIDADPAGO VARCHAR2(250) PATH 'PERIODICIDADPAGO'     
													, CLAVEENTFED VARCHAR2(250) PATH 'CLAVEENTFED'     
													, NUMERO VARCHAR2(250) PATH 'NUMERO'     
													, JEFEDIRECTO VARCHAR2(250) PATH 'JEFEDIRECTO'     
													, CORREOJEFE VARCHAR2(250) PATH 'CORREOJEFE'     
													, NUMANIOSSERVICIO VARCHAR2(250) PATH 'NUMANIOSSERVICIO'     
													, ULTIMOSUELDOMENSORD_PERIODO VARCHAR2(250) PATH 'ULTIMOSUELDOMENSORD_PERIODO'     
													, ULTIMOSUELDOMENSORD_CONTR VARCHAR2(250) PATH 'ULTIMOSUELDOMENSORD_CONTR'     
													, PUESTO VARCHAR2(250) PATH 'PUESTO'     
													, PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'    
													, PAYROLL_RELATIONSHIP_ID NUMBER PATH 'PAYROLL_RELATIONSHIP_ID'    
												   ) xml_data     
							   ) LOOP     
					--     
					BEGIN     
						--    
						INSERT INTO xxtoks_pay_ati_header(  fechaliquidacion     
														  , anio     
														  , mes     
														  , numrecibomes     
														  , periodo     
														  , fechainicialpago     
														  , fechafinalpago     
														  , sueldodiario     
														  , fecha     
														  , metododepago     
														  , lugarexpedicion     
														  , tiponomina     
														  , banco     
														  , nomina     
														  , tipo     
														  , numcuenta     
														  , clabe     
														  , fechainiciorellaboral     
														  , antiguedadporsemana     
														  , tipopago     
														  , numquincena     
														  , numerosucursal     
														  , tiposegmentonomina     
														  , rfc_empresa     
														  , nombre_empresa     
														  , registropatronal     
														  , regimenfiscal     
														  , calle_empresa     
														  , noexterior_empresa     
														  , nointerior_empresa     
														  , colonia_empresa     
														  , localidad_empresa     
														  , municipio_empresa     
														  , estado_empresa     
														  , pais_empresa     
														  , codigopostal_empresa     
														  , nombre     
														  , rfc     
														  , imss     
														  , curp     
														  , correo     
														  , tiporegimen     
														  , tipocontrato     
														  , sindicalizado     
														  , riesgopuesto     
														  , periodicidadpago     
														  , claveentfed     
														  , numero     
														  , jefedirecto     
														  , correojefe     
														  , numaniosservicio     
														  , ultimosueldomensord_periodo     
														  , ultimosueldomensord_contr     
														  , puesto     
														  , payroll_rel_action_id    
														  , payroll_relationship_id    
														  , process_id     
														  , created_by     
														  , creation_date     
														  , last_updated_by     
														  , last_update_date) VALUES(  header.fechaliquidacion     
																					 , header.anio     
																					 , header.mes     
																					 , header.numrecibomes     
																					 , header.periodo     
																					 , header.fechainicialpago     
																					 , header.fechafinalpago     
																					 , header.sueldodiario     
																					 , header.fecha     
																					 , header.metododepago     
																					 , header.lugarexpedicion     
																					 , header.tiponomina     
																					 , header.banco     
																					 , header.nomina     
																					 , header.tipo     
																					 , header.numcuenta     
																					 , header.clabe     
																					 , header.fechainiciorellaboral     
																					 , header.antiguedadporsemana     
																					 , header.tipopago     
																					 , header.numquincena     
																					 , header.numerosucursal     
																					 , header.tiposegmentonomina     
																					 , header.rfc_empresa     
																					 , header.nombre_empresa     
																					 , header.registropatronal     
																					 , header.regimenfiscal     
																					 , header.calle_empresa     
																					 , header.noexterior_empresa     
																					 , header.nointerior_empresa     
																					 , header.colonia_empresa     
																					 , header.localidad_empresa     
																					 , header.municipio_empresa     
																					 , header.estado_empresa     
																					 , header.pais_empresa     
																					 , header.codigopostal_empresa     
																					 , REPLACE(header.nombre, '&&&', 'Ñ')    
																					 , header.rfc     
																					 , header.imss     
																					 , header.curp     
																					 , header.correo     
																					 , header.tiporegimen     
																					 , header.tipocontrato     
																					 , header.sindicalizado     
																					 , header.riesgopuesto     
																					 , header.periodicidadpago     
																					 , header.claveentfed     
																					 , header.numero     
																					 , header.jefedirecto     
																					 , header.correojefe     
																					 , header.numaniosservicio     
																					 , header.ultimosueldomensord_periodo     
																					 , header.ultimosueldomensord_contr     
																					 , header.puesto     
																					 , header.payroll_rel_action_id    
																				     , header.payroll_relationship_id    
																					 , v_organization.process_id     
																					 , '-1'     
																					 , SYSDATE - 6/24     
																					 , '-1'     
																					 , SYSDATE - 6/24    
																				   );     
						--     
						COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar al empleado. payroll_rel_action_id:'||header.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						--COMMIT;     
     
					END;     
					--       
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G1. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				--COMMIT;    
			END;     
			--     
			--     
			--v_inicio := TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS');     
			--INSERT INTO xxtoks_pay_acumulados_tracing(contenido, f_inicio, f_fin, ins_type) VALUES(NULL, v_inicio, TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'), 'ORG_ID: '||v_organization.organization_id||' 8. ANTES FOR G2');     
			--COMMIT;     
			--     
			--PERCEPCIONES     
			BEGIN     
			--     
				FOR per IN (     
							SELECT    *      
							FROM      XMLTABLE (  '/DATA_DS/G_1/G_2' PASSING xmltype.createxml(v_contenido) COLUMNS     
												  TIPOPERCEPCION VARCHAR2(250) PATH 'TIPOPERCEPCION'     
												, CLAVE VARCHAR2(250) PATH 'CLAVE'     
												, DESCRIPCION VARCHAR2(250) PATH 'DESCRIPCION'     
												, IMPORTEEXENTO NUMBER PATH 'IMPORTEEXENTO'     
												, IMPORTEGRAVADO NUMBER PATH 'IMPORTEGRAVADO'     
												, IMPORTE NUMBER PATH 'IMPORTE'     
												, CANTIDAD NUMBER PATH 'CANTIDAD'    
												, PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
											   ) xml_data     
						   ) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO  xxtoks_pay_ati_lines_per(  tipopercepcion     
															  , clave     
															  , descripcion     
															  , importeexento     
															  , importegravado     
															  , importe     
															  , cantidad    
															  , payroll_rel_action_id     
															  , process_id     
															  , created_by     
															  , creation_date     
															  , last_updated_by     
															  , last_update_date     
															 ) VALUES (  per.tipopercepcion     
																	   , per.clave     
																	   , per.descripcion     
																	   , per.importeexento     
																	   , per.importegravado     
																	   , per.importe     
																	   , per.cantidad    
																	   , per.payroll_rel_action_id     
																	   , v_organization.process_id     
																	   , '-1'     
																	   , SYSDATE - 6/24     
																	   , '-1'     
																	   , SYSDATE - 6/24     
																	  );     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle de las percepciones. payroll_rel_action_id:'||per.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						--COMMIT;     
					     
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G2. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				--COMMIT;     
     
			END;     
			--     
			--DEDUCCIONES     
			BEGIN     
			--     
				FOR ded IN (     
							SELECT    *      
							FROM      XMLTABLE (  '/DATA_DS/G_1/G_3' PASSING xmltype.createxml(v_contenido) COLUMNS     
												  TIPODEDUCCION VARCHAR2(250) PATH 'TIPODEDUCCION'     
												, CLAVE VARCHAR2(250) PATH 'CLAVE'     
												, DESCRIPCION VARCHAR2(250) PATH 'DESCRIPCION'     
												, IMPORTEEXENTO NUMBER PATH 'IMPORTEEXENTO'     
												, IMPORTEGRAVADO NUMBER PATH 'IMPORTEGRAVADO'     
												, IMPORTE NUMBER PATH 'IMPORTE'    
                                                , CANTIDAD NUMBER PATH 'CANTIDAD'												    
												, PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
											   ) xml_data     
						   ) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO  xxtoks_pay_ati_lines_ded(  tipodeduccion     
															  , clave     
															  , descripcion     
															  , importeexento     
															  , importegravado     
															  , importe     
															  , cantidad    
															  , payroll_rel_action_id     
															  , process_id     
															  , created_by     
															  , creation_date     
															  , last_updated_by     
															  , last_update_date     
															 ) VALUES (  ded.tipodeduccion     
																	   , ded.clave     
																	   , ded.descripcion     
																	   , ded.importeexento     
																	   , ded.importegravado     
																	   , ded.importe    
																	   , ded.cantidad    
																	   , ded.payroll_rel_action_id     
																	   , v_organization.process_id     
																	   , '-1'     
																	   , SYSDATE - 6/24     
																	   , '-1'     
																	   , SYSDATE - 6/24     
																	  );     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle de las deducciones. payroll_rel_action_id:'||ded.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						--COMMIT;     
		        
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G3. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				--COMMIT;     
     
			END;     
			--     
			--     
			--HORAS EXTRA     
			BEGIN     
			--     
				FOR hextra IN ( SELECT    *      
								FROM      XMLTABLE (  '/DATA_DS/G_1/G_4' PASSING xmltype.createxml(v_contenido) COLUMNS     
													   DIAS NUMBER PATH 'DIAS'     
													 , TIPOHORAS VARCHAR2(250) PATH 'TIPOHORAS'     
													 , HORASEXTRA NUMBER PATH 'HORASEXTRA'     
													 , IMPORTE NUMBER PATH 'IMPORTE'     
													 , BASE_ELEMENT_NAME VARCHAR2(250) PATH 'BASE_ELEMENT_NAME'     
													 , HORA_EXTRA_REAL VARCHAR2(250) PATH 'HORA_EXTRA_REAL'     
													 , PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
												   ) xml_data     
							   ) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO xxtoks_pay_ati_lines_hextra(  dias     
																, tipohoras     
																, horasextra     
																, importe     
																, base_element_name     
																, hora_extra_real     
																, payroll_rel_action_id      
																, process_id     
																, created_by       
																, creation_date     
																, last_updated_by     
																, last_update_date     
															   ) VALUES (  hextra.dias     
																		 , hextra.tipohoras     
																		 , hextra.horasextra     
																		 , hextra.importe     
																		 , hextra.base_element_name     
																		 , hextra.hora_extra_real     
																		 , hextra.payroll_rel_action_id     
																		 , v_organization.process_id     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle de las horas extra. payroll_rel_action_id:'||hextra.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						--COMMIT;     
     
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G4. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				--COMMIT;     
     
			END;     
			--     
			--     
			--INCAPACIDADES     
			BEGIN     
			--     
				FOR inc IN (SELECT    *      
							FROM      XMLTABLE (  '/DATA_DS/G_1/G_5' PASSING xmltype.createxml(v_contenido) COLUMNS     
												  DIAS NUMBER PATH 'DIAS'     
												, TIPOINCAPACIDAD VARCHAR2(250) PATH 'TIPOINCAPACIDAD'     
												, IMPORTEMONETARIO NUMBER PATH 'IMPORTEMONETARIO'     
												, DESCUENTO NUMBER PATH 'DESCUENTO'     
												, PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
											   ) xml_data     
						   ) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO xxtoks_pay_ati_lines_inc(  dias     
															 , tipoincapacidad     
															 , importemonetario     
															 , descuento     
															 , payroll_rel_action_id     
															 , process_id     
															 , created_by     
															 , creation_date     
															 , last_updated_by     
															 , last_update_date     
															) VALUES (  inc.dias     
																	  , inc.tipoincapacidad     
																	  , inc.importemonetario     
																	  , inc.descuento     
																	  , inc.payroll_rel_action_id     
																	  , v_organization.process_id     
																	  , '-1'     
																	  , SYSDATE - 6/24     
																	  , '-1'     
																	  , SYSDATE - 6/24     
																	 );     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle de las incapacidades. payroll_rel_action_id:'||inc.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						--COMMIT;     
     
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G5. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				--COMMIT;     
			END;     
			--     
			--     
			--OTROS PAGOS     
			BEGIN     
			--     
				FOR opag IN (   SELECT    *      
								FROM      XMLTABLE (  '/DATA_DS/G_1/G_6' PASSING xmltype.createxml(v_contenido) COLUMNS     
													  TIPOOTROPAGO VARCHAR2(250) PATH 'TIPOOTROPAGO'     
													, CLAVE VARCHAR2(250) PATH 'CLAVE'     
													, CONCEPTO VARCHAR2(250) PATH 'CONCEPTO'     
													, IMPORTE NUMBER PATH 'IMPORTE'     
													, SUBSIDIOCAUSADO NUMBER PATH 'SUBSIDIOCAUSADO'     
													, SALDOAFAVOR NUMBER PATH 'SALDOAFAVOR'     
													, ANIO NUMBER PATH 'ANIO'     
													, REMANENTESALDOAFAVOR NUMBER PATH 'REMANENTESALDOAFAVOR'     
													, IMPORTEAJUSTE NUMBER PATH 'IMPORTEAJUSTE'     
													, PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
												   ) xml_data     
							) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO xxtoks_pay_ati_lines_otrspagos(  tipootropago     
																   , clave     
																   , concepto     
																   , importe     
																   , subsidiocausado     
																   , saldoafavor     
																   , anio     
																   , remanentesaldoafavor     
																   , importeajuste     
																   , payroll_rel_action_id     
																   , process_id     
																   , created_by     
																   , creation_date     
																   , last_updated_by     
																   , last_update_date     
																   ) VALUES (  opag.tipootropago     
																			 , opag.clave     
																			 , opag.concepto     
																			 , opag.importe     
																			 , opag.subsidiocausado     
																			 , opag.saldoafavor     
																			 , opag.anio     
																			 , opag.remanentesaldoafavor     
																			 , opag.importeajuste     
																			 , opag.payroll_rel_action_id     
																			 , v_organization.process_id     
																			 , '-1'     
																			 , SYSDATE - 6/24     
																			 , '-1'     
																			 , SYSDATE - 6/24     
																			);     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle de los otros pagos. payroll_rel_action_id:'||opag.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						--COMMIT;     
     
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G6. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				--COMMIT;     
     
			END;     
			--     
			--     
			--DIAS TRABAJADOS     
			BEGIN     
			--     
				FOR diastrab IN (   SELECT    *      
									FROM      XMLTABLE (  '/DATA_DS/G_1/G_7' PASSING xmltype.createxml(v_contenido) COLUMNS     
														  DIASTRABAJADOS VARCHAR2(250) PATH 'DIASTRABAJADOS'     
														, PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
													   ) xml_data     
								) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO xxtoks_pay_ati_lines_diastrab(  diastrabajados     
																  , payroll_rel_action_id     
																  , process_id     
																  , created_by     
																  , creation_date     
																  , last_updated_by     
																  , last_update_date     
																  ) VALUES (  diastrab.diastrabajados     
																			, diastrab.payroll_rel_action_id     
																			, v_organization.process_id     
																			, '-1'     
																			, SYSDATE - 6/24     
																			, '-1'     
																			, SYSDATE - 6/24     
																		   );     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle de los d?as trabajados. payroll_rel_action_id:'||diastrab.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						--COMMIT;     
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G7. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
                  
				--     
				--COMMIT;     
			END;     
			--     
			--     
			--SDI     
			BEGIN     
			--     
				FOR sdi IN (   SELECT    *      
							   FROM      XMLTABLE (  '/DATA_DS/G_1/G_8' PASSING xmltype.createxml(v_contenido) COLUMNS     
													 SDI VARCHAR2(250) PATH 'SDI'     
												   , PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
												  ) xml_data     
						   ) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO xxtoks_pay_ati_lines_sdi(  sdi     
															 , payroll_rel_action_id     
															 , process_id     
															 , created_by     
															 , creation_date     
															 , last_updated_by     
															 , last_update_date     
															 ) VALUES (  sdi.sdi     
																	   , sdi.payroll_rel_action_id     
																	   , v_organization.process_id     
																	   , '-1'     
																	   , SYSDATE - 6/24     
																	   , '-1'     
																	   , SYSDATE - 6/24     
																	  );     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle del SDI. payroll_rel_action_id:'||sdi.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						--COMMIT;     
						--     
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G8. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				--COMMIT;     
     
			END;     
			--     
			--     
			--     
			--AUSENTISMOS     
			BEGIN     
			--     
				FOR ausentismo IN ( SELECT    *      
									FROM      XMLTABLE (  '/DATA_DS/G_1/G_9' PASSING xmltype.createxml(v_contenido) COLUMNS     
														 AUSENTISMO VARCHAR2(250) PATH 'AUSENTISMO'     
													   , PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
													  ) xml_data     
								   ) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO xxtoks_pay_ati_lines_ausentism(  ausentismo     
																	, payroll_rel_action_id     
																	, process_id     
																	, created_by     
																	, creation_date     
																	, last_updated_by     
																	, last_update_date     
																	) VALUES (  ausentismo.ausentismo     
																			  , ausentismo.payroll_rel_action_id     
																			  , v_organization.process_id     
																			  , '-1'     
																			  , SYSDATE - 6/24     
																			  , '-1'     
																			  , SYSDATE - 6/24     
																			 );     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle del AUSENTISMO. payroll_rel_action_id:'||ausentismo.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--COMMIT;     
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G9. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				--COMMIT;     
			END;     
			--     
			--     
			--SEPARACION E INDEMNIZACION     
			BEGIN     
			--     
				FOR separacion IN ( SELECT    *      
									FROM      XMLTABLE (  '/DATA_DS/G_1/G_10' PASSING xmltype.createxml(v_contenido) COLUMNS     
														 TOTALPAGADO VARCHAR2(250) PATH 'TOTALPAGADO'     
													   , PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
													  ) xml_data     
								  ) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO xxtoks_pay_ati_lines_separacio(  totalpagado     
																	, payroll_rel_action_id     
																	, process_id     
																	, created_by     
																	, creation_date     
																	, last_updated_by     
																	, last_update_date     
																	) VALUES (  separacion.totalpagado     
																			  , separacion.payroll_rel_action_id     
																			  , v_organization.process_id     
																			  , '-1'     
																			  , SYSDATE - 6/24     
																			  , '-1'     
																			  , SYSDATE - 6/24     
																			 );     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle de la SEPARACION E INDEMNIZACION. payroll_rel_action_id:'||separacion.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						--COMMIT;     
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G10. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				--COMMIT;     
     
			END;     
			--     
			--IMPUESTOS RETENIDOS     
			BEGIN     
			--     
				FOR impuestos IN ( SELECT    *      
								   FROM      XMLTABLE (  '/DATA_DS/G_1/G_11' PASSING xmltype.createxml(v_contenido) COLUMNS     
														IMPUESTOSRETENIDOS VARCHAR2(250) PATH 'IMPUESTOSRETENIDOS'     
													  , PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
                                                      , ELEMENT_NAME_REPORTE VARCHAR2(250) PATH 'ELEMENT_NAME_REPORTE'     
													 ) xml_data     
								 ) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO xxtoks_pay_ati_lines_impuestos(  impuestosretenidos     
																   , payroll_rel_action_id     
																   , process_id     
																   , created_by     
																   , creation_date     
																   , last_updated_by     
																   , last_update_date    
                                                                   , element_name_reporte    
																   ) VALUES (  impuestos.impuestosretenidos     
																			 , impuestos.payroll_rel_action_id     
																			 , v_organization.process_id     
																			 , '-1'     
																			 , SYSDATE - 6/24     
																			 , '-1'     
																			 , SYSDATE - 6/24     
                                                                             , impuestos.element_name_reporte     
																			);     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle de los IMPUESTOS RETENIDOS. payroll_rel_action_id:'||impuestos.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						--COMMIT;     
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G11. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				COMMIT;     
			END;     
			--     
			--ACUMULADOS     
			BEGIN     
			--     
				FOR acumulados IN ( SELECT    *      
									FROM      XMLTABLE (  '/DATA_DS/G_1/G_12' PASSING xmltype.createxml(v_contenido) COLUMNS     
														  ISRRETENIDOACUMULADO VARCHAR2(250) PATH 'ISRRETENIDOACUMULADO'     
														, PERCEPCIONGRAVABLEACUMULADA VARCHAR2(250) PATH 'PERCEPCIONGRAVABLEACUMULADA'     
														, FONDODEAHORRODEPOSITADO VARCHAR2(250) PATH 'FONDODEAHORRODEPOSITADO'     
														, PAYROLL_RELATIONSHIP_ID NUMBER PATH 'PAYROLL_RELATIONSHIP_ID'     
														, PAYROLL_REL_ACTION_ID NUMBER PATH 'PAYROLL_REL_ACTION_ID'     
													   ) xml_data     
								  ) LOOP     
					--     
					BEGIN     
						--     
						INSERT INTO xxtoks_pay_ati_lines_acumulado(  isrretenidoacumulado     
																   , percepciongravableacumulada     
																   , fondodeahorrodepositado    
																   , payroll_relationship_id    
																   , payroll_rel_action_id     
																   , process_id     
																   , created_by     
																   , creation_date     
																   , last_updated_by     
																   , last_update_date     
																   ) VALUES (  acumulados.isrretenidoacumulado     
																			 , acumulados.percepciongravableacumulada     
																			 , acumulados.fondodeahorrodepositado     
																			 , acumulados.payroll_relationship_id    
																			 , acumulados.payroll_rel_action_id     
																			 , v_organization.process_id     
																			 , '-1'     
																			 , SYSDATE - 6/24     
																			 , '-1'     
																			 , SYSDATE - 6/24     
																			);     
						--COMMIT;     
						--     
					EXCEPTION     
					WHEN OTHERS THEN     
						--     
						v_error := SQLERRM;     
						--     
						INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
																 , error     
																 , fecha     
																 , created_by     
																 , creation_date     
																 , last_updated_by     
																 , last_update_date     
																) VALUES(  v_organization.process_id     
																		 , 'Error al guardar el detalle de los SALDOS ACUMULADOS. payroll_rel_action_id:'||acumulados.payroll_rel_action_id||' ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		 , '-1'     
																		 , SYSDATE - 6/24     
																		);     
						--     
						COMMIT;     
     
					END;     
					--     
				END LOOP;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_organization.process_id     
																 , 'Error al leer el G12. ORG_ID:'||v_organization.organization_id||'. ERROR:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--     
				--COMMIT;     
     
			END;     
			--     
		END LOOP;    
		--     
	EXCEPTION     
	WHEN OTHERS THEN     
		--     
		v_error := SQLERRM;     
		--     
		INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
												 , error     
												 , fecha     
												 , created_by     
												 , creation_date     
												 , last_updated_by     
												 , last_update_date     
												) VALUES(  NULL     
														 , 'Error al obtener el detalle de los resultados. ERROR:'||v_error     
														 , SYSDATE - 6/24     
														 , '-1'     
														 , SYSDATE - 6/24     
														 , '-1'     
														 , SYSDATE - 6/24     
														);     
		--     
		--COMMIT;     
	END get_result_values;     
	--     
	PROCEDURE generar_procesos_paralelo( p_process_id  NUMBER)      
	IS     
		--     
		v_task_name         VARCHAR2(240);     
		v_plsql_block       VARCHAR2(32767);     
		--     
		v_sql_stmt_filtro   VARCHAR2(32767);     
		v_sql_stmt          VARCHAR2(32767);     
		--     
		v_intentos          NUMBER := 0;     
		--     
		v_error             VARCHAR2(500);     
	BEGIN     
		--     
		v_task_name := dbms_parallel_execute.generate_task_name( prefix   => 'GRGATI$_');     
		--     
		dbms_parallel_execute.create_task(task_name   => v_task_name);     
		--     
		v_sql_stmt_filtro := '  SELECT    MIN(id) start_id     
										, MAX(id) end_id     
								FROM      (     
											SELECT    id     
													, NTILE(14) OVER( ORDER BY id asc ) grupo      
											FROM      xxtoks_pay_ati_organization     
											WHERE     1 = 1     
											AND       process_id = '||p_process_id||'     
										  )     
								GROUP BY  grupo     
							 ';     
		--     
		dbms_parallel_execute.create_chunks_by_sql(  task_name  => v_task_name     
												   , sql_stmt   => v_sql_stmt_filtro     
												   , by_rowid   => FALSE     
												  );     
		--     
		/*     
		v_sql_stmt := q'[     
						BEGIN      
						   pay.xxgrg_pay_cfdi_v2_file_pkg.get_result_values(  :start_id , :end_id);     
						END;     
					   ]';     
		*/     
		--     
		v_sql_stmt := q'[     
						BEGIN      
						   pay.xxgrg_pay_cfdi_v2_file_pkg.get_result_values(  :start_id , :end_id );     
						END;     
					   ]';     
		--						        
		dbms_parallel_execute.run_task(  task_name      => v_task_name     
									   , sql_stmt       => v_sql_stmt     
									   , language_flag  => DBMS_SQL.native     
									   , parallel_level => 14     
									  );     
		--     
		LOOP     
			--     
			EXIT WHEN     
				--     
				dbms_parallel_execute.task_status(v_task_name) = dbms_parallel_execute.finished OR v_intentos > 120;     
				--     
				v_intentos := v_intentos + 1;     
				dbms_lock.sleep(10);     
				--     
		END LOOP;     
		--     
		dbms_parallel_execute.drop_task(v_task_name);     
			--     
	EXCEPTION      
	WHEN OTHERS THEN     
		v_error := SQLERRM;     
		INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
													 , error     
													 , fecha     
													 , created_by     
													 , creation_date     
													 , last_updated_by     
													 , last_update_date     
													) VALUES(  NULL     
															 , 'Error al ejecutar procesos en paralelo: '||v_error     
															 , SYSDATE - 6/24     
															 , '-1'     
															 , SYSDATE - 6/24     
															 , '-1'     
															 , SYSDATE - 6/24     
															);	       
	END generar_procesos_paralelo;     
	--     
	--     
	PROCEDURE ac_data(  p_contenido     IN CLOB     
					  , p_process_id    IN NUMBER     
					 )      
	AS     
		--     
		v_ac_id NUMBER;     
		v_error VARCHAR2(500);     
		--     
	BEGIN     
		--     
		INSERT INTO xxgrg_pay_cfdi_v2_clob_data(  contenido     
												, id     
											   ) VALUES(  p_contenido     
														, p_process_id     
													   );     
     
		--COMMIT;     
		     
	EXCEPTION     
	WHEN OTHERS THEN     
		--     
		v_error := SQLERRM;     
		--     
		INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
												 , error     
												 , fecha     
												 , created_by     
												 , creation_date     
												 , last_updated_by     
												 , last_update_date     
												 , mensaje     
												 ) VALUES(  p_process_id     
														  , 'Ocurri? un error al construir el ATI:'||v_error||'. xxgrg_pay_cfdi_v2_clob_data'     
														  , SYSDATE - 6/24     
														  , '-1'     
														  , SYSDATE - 6/24     
														  , '-1'     
														  , SYSDATE - 6/24     
														  , 'ERROR AL GENERAR EL ARCHIVO TXT'     
														 );     
														      
		UPDATE xxgrg_recibo_cfdi_v2_process     
		SET status = 'ERROR'     
		,fecha_fin = SYSDATE - 6/24     
		WHERE process_id = p_process_id;     
	END ac_data;     
	--     
	--     
	PROCEDURE ac_clob(  p_process_id    IN NUMBER     
					  , p_tipo_nomina   IN VARCHAR2     
					  , p_leyenda       IN VARCHAR2     
					  , p_si_no         IN VARCHAR2     
					  , p_payroll_id    IN NUMBER    
					  , p_metodo_pago   IN VARCHAR2    
					 ) IS     
		--     
		CURSOR c_header(  p_process_id  NUMBER     
                        , p_tipo_nomina VARCHAR2    
					   ) IS     
			SELECT    *     
			FROM      (     
						SELECT    rownum numerorecibo     
								, header.*     
						FROM      (     
									SELECT    fechaliquidacion     
											, anio     
											, mes     
											, numrecibomes    
											, periodo     
											, fechainicialpago     
											, fechafinalpago     
											, sueldodiario     
											, fecha      
											, metododepago     
											, lugarexpedicion     
											, tiponomina     
											, banco     
											, nomina     
											, tipo     
											, numcuenta     
											, clabe     
											, fechainiciorellaboral     
											, antiguedadporsemana     
											, tipopago     
											, numquincena     
											, numerosucursal     
											, tiposegmentonomina     
											, rfc_empresa     
											, nombre_empresa     
											, registropatronal     
											, regimenfiscal     
											, calle_empresa     
											, noexterior_empresa     
											, nointerior_empresa     
											, colonia_empresa     
											, localidad_empresa     
											, municipio_empresa     
											, estado_empresa     
											, pais_empresa     
											, codigopostal_empresa     
											, nombre     
											, rfc     
											, imss     
											, curp     
											, correo     
											, tiporegimen     
											, tipocontrato     
											, sindicalizado     
											, riesgopuesto     
											, periodicidadpago     
											, claveentfed     
											, numero     
											, jefedirecto ausentismos    
											, correojefe incapacidades    
											, numaniosservicio     
											, ultimosueldomensord_periodo     
											, ultimosueldomensord_contr     
											, payroll_rel_action_id    
											, payroll_relationship_id    
									FROM      xxtoks_pay_ati_header     
									WHERE     1 = 1     
									AND       process_id = p_process_id     
									ORDER BY  numero     
								  ) header     
						WHERE     1 = 1     
					  )     
			WHERE     1 = 1     
			ORDER BY  numerorecibo;     
		--     
		--     
		CURSOR c_percepciones(  p_payroll_rel_action_id NUMBER     
							  , p_process_id            NUMBER     
                              , p_tipo_nomina           VARCHAR2    
							 ) IS     
			SELECT    xpalp.tipopercepcion     
					, xpalp.clave     
					, xpalp.descripcion     
					, xpalp.importeexento     
					, xpalp.importegravado     
					, xpalp.importe     
			FROM      xxtoks_pay_ati_lines_per xpalp    
			WHERE     1 = 1     
			AND       xpalp.payroll_rel_action_id = p_payroll_rel_action_id     
			AND       xpalp.process_id = p_process_id    
            AND       (     p_tipo_nomina <> 'FINIQUITO'    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'SUELDOS'    
                                AND NOT EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpalp.clave    
                                              )    
                               )    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'INDEMNIZACION'    
                                AND EXISTS(    
                                            SELECT    1    
                                            FROM      xxgrg_elementos_finiquitos_ati xefa    
                                            WHERE     1 = 1    
                                            AND       xefa.element_name = xpalp.clave    
                                          )    
                               )    
                          )    
			ORDER BY  clave;     
		--     
		--     
		CURSOR c_deducciones(  p_payroll_rel_action_id  NUMBER     
							 , p_process_id             NUMBER    
                             , p_tipo_nomina            VARCHAR2    
							) IS     
			SELECT    xpald.tipodeduccion     
					, xpald.clave     
					, xpald.descripcion     
					, xpald.importeexento     
					, xpald.importegravado     
					, xpald.importe     
					, xpald.payroll_rel_action_id     
			FROM      xxtoks_pay_ati_lines_ded xpald    
			WHERE     1 = 1     
			AND       xpald.payroll_rel_action_id = p_payroll_rel_action_id     
			AND       xpald.process_id = p_process_id    
            AND       (     p_tipo_nomina <> 'FINIQUITO'    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'SUELDOS'    
                                AND NOT EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpald.clave    
                                              )    
                               )    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'INDEMNIZACION'    
                                AND EXISTS(    
                                            SELECT    1    
                                            FROM      xxgrg_elementos_finiquitos_ati xefa    
                                            WHERE     1 = 1    
                                            AND       xefa.element_name = xpald.clave    
                                          )    
                               )    
                          )    
			ORDER BY  clave;     
		--     
		--     
		CURSOR c_horasextra(  p_payroll_rel_action_id   NUMBER     
							, p_base_element_name       VARCHAR2     
							, p_process_id              NUMBER     
                            , p_tipo_nomina             VARCHAR2    
						   ) IS     
			SELECT    dias     
					, tipohoras     
					, horasextra     
					, importe     
					, base_element_name     
					, hora_extra_real     
					, payroll_rel_action_id     
			FROM      xxtoks_pay_ati_lines_hextra     
			WHERE     1 = 1     
			AND       payroll_rel_action_id = p_payroll_rel_action_id     
			AND       base_element_name = p_base_element_name     
			AND       process_id = p_process_id;     
		--     
		--     
		CURSOR c_incapacidades(  p_payroll_rel_action_id    NUMBER     
							   , p_process_id               NUMBER    
                               , p_tipo_nomina              VARCHAR2    
							  ) IS     
			SELECT    dias     
					, tipoincapacidad     
					, importemonetario     
					, descuento     
					, payroll_rel_action_id     
			FROM      xxtoks_pay_ati_lines_inc     
			WHERE     1 = 1     
			AND       payroll_rel_action_id = p_payroll_rel_action_id     
			AND       process_id = p_process_id;     
		--     
		--     
		CURSOR c_otrospagos(  p_payroll_rel_action_id   NUMBER     
							, p_process_id              NUMBER    
                            , p_tipo_nomina             VARCHAR2    
						   ) IS     
			SELECT    xpalo.tipootropago     
					, xpalo.clave     
					, xpalo.concepto     
					, xpalo.importe     
					, xpalo.subsidiocausado     
					, xpalo.saldoafavor     
					, xpalo.anio     
					, xpalo.remanentesaldoafavor     
					, xpalo.importeajuste     
					, xpalo.payroll_rel_action_id     
			FROM      xxtoks_pay_ati_lines_otrspagos xpalo    
			WHERE     1 = 1     
			AND       xpalo.payroll_rel_action_id = p_payroll_rel_action_id     
			AND       xpalo.process_id = p_process_id    
            AND       (     p_tipo_nomina <> 'FINIQUITO'    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'SUELDOS'    
                                AND NOT EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpalo.clave    
                                              )    
                               )    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'INDEMNIZACION'    
                                AND EXISTS(    
                                            SELECT    1    
                                            FROM      xxgrg_elementos_finiquitos_ati xefa    
                                            WHERE     1 = 1    
                                            AND       xefa.element_name = xpalo.clave    
                                          )    
                               )    
                          )    
			ORDER BY  clave;     
		--     
		--     
		--     
		v_contenido                     CLOB;     
		--     
		v_diastrabajados                NUMBER := 0;     
		--     
		v_total_percepciones            NUMBER := 0;     
		v_total_otros_pagos             NUMBER := 0;     
		v_total_deducciones             NUMBER := 0;     
		v_neto_pagado                   NUMBER := 0;     
		--     
		v_sdi                           NUMBER := 0;     
		--     
		v_horasextra                    NUMBER := 0;     
		v_ausentismo                    NUMBER := 0;     
		v_incapacidad                   NUMBER := 0;     
		v_isrretenidoacumulado          NUMBER := 0;     
		v_percepciongravableacumulada   NUMBER := 0;     
		v_fondodeahorrodepositado       NUMBER := 0;     
		--     
		v_totalsueldos                  NUMBER := 0;     
		v_totalseparacionindemnizacion  NUMBER := 0;     
		--     
		v_totalgravado_percepciones     NUMBER := 0;     
		v_totalexento_percepciones      NUMBER := 0;     
		--     
		v_totalgravado_deducciones      NUMBER := 0;     
		v_totalexento_deducciones       NUMBER := 0;     
		v_totalotrasdeducciones         NUMBER := 0;     
		v_totalimpuestosretenidos       NUMBER := 0;     
		--     
		v_existe_subsidioalempleo       VARCHAR2(1);     
		--     
		v_totalpagado                   NUMBER := 0;     
		v_ultimosueldomensord           NUMBER := 0;     
		--     
		v_leyenda                       VARCHAR2(500);     
		--     
		v_error                         VARCHAR2(500);     
		--     
		v_payroll_rel_action_id         NUMBER;     
		--     
		v_elemento_subsidio             VARCHAR2(240);     
		v_subsidiocausado               NUMBER;     
		--     
		v_correo                        VARCHAR2(240);    
		--    
		v_np003_np033                   NUMBER;    
		--    
		v_numrecibomes                  VARCHAR2(250) := '';    
		--    
        v_repeticiones                  NUMBER;    
        --    
        v_existe_elemento_finiquito     NUMBER;    
        v_existe_elemento_sueldo        NUMBER;    
        --    
        v_tipo_regimen                  VARCHAR2(2);    
        --    
        v_tipocontrato                  VARCHAR2(2);    
        --    
        v_registropatronal              VARCHAR2(100);    
        --    
        v_periodo                       VARCHAR2(100);    
        v_tipo_nomina                   VARCHAR2(100);    
        v_sdi_v2                        NUMBER;    
        --    
        v_totaljubilacionpensionretiro  NUMBER;    
        --    
        v_numcuenta                     VARCHAR2(100);    
        v_clabe                         VARCHAR2(100);    
        --    
	BEGIN     
		--     
		v_contenido := '';    
        --    
        --    
        SELECT    periodo    
                , tipo_nomina    
        INTO      v_periodo    
                , v_tipo_nomina    
        FROM      xxgrg_recibo_cfdi_v2_process    
        WHERE     1 = 1    
        AND       process_id = p_process_id;            
        --    
        --    
        FOR v_header IN c_header(   p_process_id    
                                  , p_tipo_nomina    
                                ) LOOP     
            --     
            v_payroll_rel_action_id := v_header.payroll_rel_action_id;    
            --    
            --    
            IF p_tipo_nomina = 'FINIQUITO' THEN    
                --    
                v_existe_elemento_finiquito := 0;    
                --    
                SELECT    SUM(existe)    
                INTO      v_existe_elemento_finiquito    
                FROM      (    
                            SELECT    NVL(COUNT(1), 0) existe    
                            FROM      xxtoks_pay_ati_lines_per xpalp    
                            WHERE     1 = 1     
                            AND       xpalp.payroll_rel_action_id = v_header.payroll_rel_action_id     
                            AND       xpalp.process_id = p_process_id    
                            AND       p_tipo_nomina = 'FINIQUITO'    
                            AND       EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpalp.clave    
                                            )    
                            UNION ALL    
                            SELECT    NVL(COUNT(1), 0) existe    
                            FROM      xxtoks_pay_ati_lines_otrspagos xpalo    
                            WHERE     1 = 1     
                            AND       xpalo.payroll_rel_action_id = v_header.payroll_rel_action_id     
                            AND       xpalo.process_id = p_process_id    
                            AND       p_tipo_nomina = 'FINIQUITO'    
                            AND       EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpalo.clave    
                                            )    
                            UNION ALL    
                            SELECT    NVL(COUNT(1), 0) existe    
                            FROM      xxtoks_pay_ati_lines_ded xpald    
                            WHERE     1 = 1     
                            AND       xpald.payroll_rel_action_id = v_header.payroll_rel_action_id     
                            AND       xpald.process_id = p_process_id    
                            AND       p_tipo_nomina = 'FINIQUITO'    
                            AND       EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpald.clave    
                                            )    
                          ) finiquitos    
                WHERE     1 = 1;    
                --    
                --    
                --    
                --    
                v_existe_elemento_sueldo := 0;    
                --    
                SELECT    SUM(existe)    
                INTO      v_existe_elemento_sueldo    
                FROM      (    
                            SELECT    NVL(COUNT(1), 0) existe    
                            FROM      xxtoks_pay_ati_lines_per xpalp    
                            WHERE     1 = 1     
                            AND       xpalp.payroll_rel_action_id = v_header.payroll_rel_action_id     
                            AND       xpalp.process_id = p_process_id    
                            AND       p_tipo_nomina = 'FINIQUITO'    
                            AND       NOT EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpalp.clave    
                                            )    
                            UNION ALL    
                            SELECT    NVL(COUNT(1), 0) existe    
                            FROM      xxtoks_pay_ati_lines_otrspagos xpalo    
                            WHERE     1 = 1     
                            AND       xpalo.payroll_rel_action_id = v_header.payroll_rel_action_id     
                            AND       xpalo.process_id = p_process_id    
                            AND       p_tipo_nomina = 'FINIQUITO'    
                            AND       NOT EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpalo.clave    
                                            )    
                            UNION ALL    
                            SELECT    NVL(COUNT(1), 0) existe    
                            FROM      xxtoks_pay_ati_lines_ded xpald    
                            WHERE     1 = 1     
                            AND       xpald.payroll_rel_action_id = v_header.payroll_rel_action_id     
                            AND       xpald.process_id = p_process_id    
                            AND       p_tipo_nomina = 'FINIQUITO'    
                            AND       NOT EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpald.clave    
                                            )    
                          ) sueldos    
                WHERE     1 = 1;    
                --    
            END IF;    
            --    
            --    
            IF p_tipo_nomina = 'FINIQUITO' AND v_existe_elemento_finiquito > 0 AND v_existe_elemento_sueldo > 0 THEN    
                --    
                v_repeticiones := 2;    
                --    
            ELSE    
                --    
                v_repeticiones := 1;    
                --    
            END IF;    
            --    
            --    
            FOR v_i IN 1..v_repeticiones LOOP    
                --    
                g_secuencia := NULL;    
                g_ciclo_sencuencia  := NULL;    
                --    
                IF v_repeticiones = 2 THEN    
                    --    
                    IF v_i = 1 THEN    
                        --    
                        g_secuencia := NULL;    
                        g_ciclo_sencuencia := 'SUELDOS';    
                        v_tipo_regimen := '02';    
                        v_tipocontrato := '01';    
                        --    
                    ELSE    
                        --    
                        g_secuencia := '2';    
                        g_ciclo_sencuencia := 'INDEMNIZACION';    
                        v_tipo_regimen := '13';    
                        v_tipocontrato := '99';    
                        --    
                    END IF;    
                    --    
                ELSE    
                    --    
                    IF p_tipo_nomina <> 'FINIQUITO' OR (p_tipo_nomina = 'FINIQUITO' AND v_existe_elemento_sueldo > 0) THEN    
                        --    
                        g_secuencia := NULL;    
                        g_ciclo_sencuencia := 'SUELDOS';    
                        v_tipo_regimen := '02';    
                        v_tipocontrato := '01';    
                        --    
                    ELSE    
                        --    
                        g_secuencia := NULL;    
                        g_ciclo_sencuencia := 'INDEMNIZACION';    
                        v_tipo_regimen := '13';    
                        v_tipocontrato := '99';    
                        --    
                    END IF;    
                    --                        
                END IF;    
                --    
                --    
                IF p_tipo_nomina = 'RETIRO VOLUNTARIO' THEN    
                    --    
                    --Validamos que exista el elemento para asignar los valores correspondientes:    
                    --    
                    BEGIN    
                        --    
                        SELECT    DISTINCT    
                                  DECODE(  clave    
                                         , 'FP054', '13'    
                                         , 'FP056', '12'    
                                         , '--'    
                                        )    
                                , '10'    
                        INTO      v_tipo_regimen    
                                , v_tipocontrato    
                        FROM      xxtoks_pay_ati_lines_per    
                        WHERE     1 = 1    
                        AND       clave IN ('FP054', 'FP056')    
                        AND       payroll_rel_action_id = v_header.payroll_rel_action_id     
                        AND       process_id = p_process_id;    
                        --    
                    EXCEPTION    
                        WHEN OTHERS THEN    
                            --    
                            v_tipo_regimen := '--';    
                            v_tipocontrato := '--';    
                    END;    
                    --    
                END IF;    
                --    
                --     
                --D?as trabajados     
                SELECT    NVL(SUM(diastrabajados), 0)     
                INTO      v_diastrabajados     
                FROM      xxtoks_pay_ati_lines_diastrab     
                WHERE     1 = 1     
                AND       payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       process_id = p_process_id;     
                --    
                --    
                --np003_np033    
                SELECT    NVL(SUM(cantidad), 0)     
                INTO      v_np003_np033     
                FROM      xxtoks_pay_ati_lines_per     
                WHERE     1 = 1     
                AND       clave IN ('NP003', 'NP033')    
                AND       payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       process_id = p_process_id;     
                --     
                --Total percepciones     
                SELECT    NVL(SUM(xpalp.importe), 0)     
                        , NVL(SUM(xpalp.importegravado), 0)     
                        , NVL(SUM(xpalp.importeexento), 0)     
                INTO      v_total_percepciones     
                        , v_totalgravado_percepciones     
                        , v_totalexento_percepciones     
                FROM      xxtoks_pay_ati_lines_per xpalp    
                WHERE     1 = 1     
                AND       xpalp.payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       xpalp.process_id = p_process_id    
                AND       (     p_tipo_nomina <> 'FINIQUITO'    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'SUELDOS'    
                                AND NOT EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpalp.clave    
                                              )    
                               )    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'INDEMNIZACION'    
                                AND EXISTS(    
                                            SELECT    1    
                                            FROM      xxgrg_elementos_finiquitos_ati xefa    
                                            WHERE     1 = 1    
                                            AND       xefa.element_name = xpalp.clave    
                                          )    
                               )    
                          );     
                --     
                --Total otros pagos     
                SELECT    NVL(SUM(xpalo.importe), 0)     
                INTO      v_total_otros_pagos     
                FROM      xxtoks_pay_ati_lines_otrspagos xpalo    
                WHERE     1 = 1     
                AND       xpalo.payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       xpalo.process_id = p_process_id    
                AND       (     p_tipo_nomina <> 'FINIQUITO'    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'SUELDOS'    
                                AND NOT EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpalo.clave    
                                              )    
                               )    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'INDEMNIZACION'    
                                AND EXISTS(    
                                            SELECT    1    
                                            FROM      xxgrg_elementos_finiquitos_ati xefa    
                                            WHERE     1 = 1    
                                            AND       xefa.element_name = xpalo.clave    
                                          )    
                               )    
                          );     
                --     
                --Total deducciones     
                SELECT    NVL(SUM(xpald.importe), 0)     
                        , NVL(SUM(xpald.importegravado), 0)     
                        , NVL(SUM(xpald.importeexento), 0)     
                INTO      v_total_deducciones     
                        , v_totalgravado_deducciones     
                        , v_totalexento_deducciones     
                FROM      xxtoks_pay_ati_lines_ded xpald    
                WHERE     1 = 1     
                AND       xpald.payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       xpald.process_id = p_process_id    
                AND       (     p_tipo_nomina <> 'FINIQUITO'    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'SUELDOS'    
                                AND NOT EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpald.clave    
                                              )    
                               )    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'INDEMNIZACION'    
                                AND EXISTS(    
                                            SELECT    1    
                                            FROM      xxgrg_elementos_finiquitos_ati xefa    
                                            WHERE     1 = 1    
                                            AND       xefa.element_name = xpald.clave    
                                          )    
                               )    
                          );    
                --     
                v_neto_pagado := ABS(v_total_percepciones + v_total_otros_pagos) - ABS(v_total_deducciones);     
                --     
                --SDI     
                SELECT    NVL(SUM(sdi), 0)     
                INTO      v_sdi     
                FROM      xxtoks_pay_ati_lines_sdi     
                WHERE     1 = 1     
                AND       payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       process_id = p_process_id;     
                --    
                --    
                --Validamos si es el periodo 18 2021 y si es correcto tomamos el SDI de la tabla temporal    
                --    
                BEGIN    
                    --    
                    SELECT    sdi    
                    INTO      v_sdi_v2    
                    FROM      grg_sdi_correctos_2021    
                    WHERE     1 = 1    
                    AND       estafeta = v_header.numero    
                    AND       periodo = v_periodo;    
                    --    
                    v_sdi := v_sdi_v2;    
                    --    
                EXCEPTION    
                    WHEN OTHERS THEN    
                        v_sdi_v2 := 0;    
                END;    
                    
                /*    
                IF ( v_periodo = '18 2021 Weekly' OR v_periodo = '19 2021 Weekly' ) AND v_tipo_nomina = 'NOMINA SEMANAL' THEN    
                    --    
                    --Tratamos de recuperar el SDI de la tabla temporal, si existe lo tomamos    
                    BEGIN    
                        --    
                        SELECT    sdi    
                        INTO      v_sdi_v2    
                        FROM      (    
                                    SELECT    sdi    
                                    FROM      grg_sdi_correctos_p18_2021    
                                    WHERE     1 = 1    
                                    AND       estafeta = v_header.numero    
                                    AND       v_periodo = '18 2021 Weekly'    
                                    UNION ALL    
                                    SELECT    sdi    
                                    FROM      grg_sdi_correctos_p19_2021    
                                    WHERE     1 = 1    
                                    AND       estafeta = v_header.numero    
                                    AND       v_periodo = '19 2021 Weekly'    
                                  );    
                        --    
                        v_sdi := v_sdi_v2;    
                        --    
                    EXCEPTION    
                        WHEN OTHERS THEN    
                            v_sdi_v2 := 0;    
                    END;    
                    --    
                END IF;    
                */    
                    
                --     
                --Horas Extra     
                SELECT    NVL(SUM(horasextra), 0)     
                INTO      v_horasextra     
                FROM      xxtoks_pay_ati_lines_hextra     
                WHERE     1 = 1     
                AND       payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       process_id = p_process_id;     
                --AND       hora_extra_real = 'Y'; --NOTA PARA QUE MUESTRE LOS VALORES YA QUE SIEMPRE MANDA 'N'    
                --     
                --Ausentismos     
                SELECT    NVL(SUM(ausentismo), 0)     
                INTO      v_ausentismo     
                FROM      xxtoks_pay_ati_lines_ausentism     
                WHERE     1 = 1     
                AND       payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       process_id = p_process_id;     
                --    
                --    
                IF p_tipo_nomina = 'VALES DE DESPENSA' THEN    
                    --    
                    v_ausentismo := v_header.ausentismos;    
                    --    
                END IF;    
                --     
                --Incapacidades     
                SELECT    NVL(SUM(dias), 0)     
                INTO      v_incapacidad     
                FROM      xxtoks_pay_ati_lines_inc     
                WHERE     1 = 1     
                AND       payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       process_id = p_process_id;     
                --    
                --    
                IF p_tipo_nomina = 'VALES DE DESPENSA' THEN    
                    --    
                    v_incapacidad := v_header.incapacidades;    
                    --    
                END IF;    
                --    
                --Separaci?n     
                SELECT    NVL(SUM(xpals.totalpagado), 0)     
                INTO      v_totalpagado     
                FROM      xxtoks_pay_ati_lines_separacio xpals    
                WHERE     1 = 1     
                AND       xpals.payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       xpals.process_id = p_process_id    
                AND       (     p_tipo_nomina <> 'FINIQUITO'    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'INDEMNIZACION'    
                               )    
                          );    
                --     
                --Impuestos Retenidos     
                SELECT    NVL(SUM(xpali.impuestosretenidos), 0)     
                INTO      v_totalimpuestosretenidos     
                FROM      xxtoks_pay_ati_lines_impuestos xpali    
                WHERE     1 = 1     
                AND       xpali.payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       xpali.process_id = p_process_id    
                AND       (     p_tipo_nomina <> 'FINIQUITO'    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'SUELDOS'    
                                AND NOT EXISTS(    
                                                SELECT    1    
                                                FROM      xxgrg_elementos_finiquitos_ati xefa    
                                                WHERE     1 = 1    
                                                AND       xefa.element_name = xpali.element_name_reporte    
                                              )    
                               )    
                            OR (    
                                    p_tipo_nomina = 'FINIQUITO'    
                                AND g_ciclo_sencuencia = 'INDEMNIZACION'    
                                AND EXISTS(    
                                            SELECT    1    
                                            FROM      xxgrg_elementos_finiquitos_ati xefa    
                                            WHERE     1 = 1    
                                            AND       xefa.element_name = xpali.element_name_reporte    
                                          )    
                               )    
                          );    
                --     
                --Acumulados     
                SELECT    NVL(SUM(DISTINCT isrretenidoacumulado), 0)     
                        , NVL(SUM(DISTINCT percepciongravableacumulada), 0)     
                        , NVL(SUM(DISTINCT fondodeahorrodepositado), 0)     
                INTO      v_isrretenidoacumulado     
                        , v_percepciongravableacumulada     
                        , v_fondodeahorrodepositado     
                FROM      xxtoks_pay_ati_lines_acumulado     
                WHERE     1 = 1     
                --AND       payroll_relationship_id = v_header.payroll_relationship_id    
                AND       payroll_rel_action_id = v_header.payroll_rel_action_id     
                AND       process_id = p_process_id;     
                --    
                /*				   
                IF p_tipo_nomina IN(  'FINIQUITO'     
                                    , 'LIQUIDACION'     
                                    , 'VALES DE DESPENSA'     
                                    , 'FINIQUITO FONDO'     
                                    , 'FONDO AHORRO'     
                                    , 'PTU BAJAS'     
                                   ) OR p_si_no = 'N' THEN     
                    --     
                    v_isrretenidoacumulado := 0;     
                    v_percepciongravableacumulada := 0;     
                    v_fondodeahorrodepositado := 0;     
                    --     
                END IF;   
                */   
				IF p_tipo_nomina = 'PTU BAJAS' AND p_si_no = 'Y' THEN   --+ En caso de ser PTU BAJAS y p_si_no = Y , mostrar ISR Acum, Percepcion Grav Acum y el FAh Depositado mostrarlo en 0 -+05/07/2022 alegaspi   
   
					v_fondodeahorrodepositado := 0;   
   
				ELSE   
   
					IF p_tipo_nomina IN(  'FINIQUITO'     
										, 'LIQUIDACION'     
										, 'VALES DE DESPENSA'     
										, 'FINIQUITO FONDO'     
										, 'FONDO AHORRO'     
									   )  OR p_si_no = 'N' THEN     
						--     
						v_isrretenidoacumulado := 0;     
						v_percepciongravableacumulada := 0;     
						v_fondodeahorrodepositado := 0;     
						--    
										   
					END IF;   
				   
				END IF;				   
                --+ SE AGREGO BONO EJECUTIVO A IF 010322    
                IF  p_tipo_nomina IN ('PTU', 'AGUINALDO', 'BONO EJECUTIVO') THEN    
                    --    
                    v_fondodeahorrodepositado := 0;    
                    --    
                END IF;    
                    
                /*    
                IF p_tipo_nomina NOT IN(  'FINIQUITO'     
                                        , 'LIQUIDACION'     
                                        , 'FINIQUITO FONDO'     
                                        , 'PTU BAJAS'     
                                       ) THEN    
                */    
                    --     
                    /*    
                    IF p_payroll_id = 300000016357087 THEN    
                        --    
                        --    
                        IF p_tipo_nomina = 'VALES DE DESPENSA' THEN    
                            --    
                            v_diastrabajados := 30;    
                            --    
                        ELSE    
                            --                                
                            v_diastrabajados := 7;    
                            --    
                        END IF;    
                        --    
                    ELSE    
                        --    
                        v_diastrabajados := v_diastrabajados - v_ausentismo - v_incapacidad + v_np003_np033;    
                        --    
                    END IF;    
                    */    
                    --    
                IF p_tipo_nomina = 'VALES DE DESPENSA' THEN    
                    --    
                    v_diastrabajados := 30;    
                    --    
                END IF;    
                --    
                v_diastrabajados := v_diastrabajados - v_ausentismo - v_incapacidad + v_np003_np033;    
                --    
                --    
                --    
                IF p_payroll_id = 300000016357087 AND p_tipo_nomina <> 'VALES DE DESPENSA' THEN    
                    --    
                    v_diastrabajados := 7;    
                    --    
                END IF;    
                --    
                --END IF;     
                --     
                v_totalseparacionindemnizacion := v_totalpagado;     
                v_totalsueldos := v_total_percepciones - v_totalseparacionindemnizacion;     
                --     
                IF v_totalgravado_percepciones = 0 AND v_totalexento_percepciones = 0 THEN     
                    v_totalexento_percepciones := v_total_percepciones;     
                ELSIF (v_totalexento_percepciones + v_totalgravado_percepciones) > v_total_percepciones OR (v_totalexento_percepciones + v_totalgravado_percepciones) < v_total_percepciones THEN     
                    v_totalexento_percepciones := ROUND((v_total_percepciones - v_totalgravado_percepciones), 2);     
                END IF;     
                --     
                IF v_totalgravado_deducciones = 0 AND v_totalexento_deducciones = 0 THEN     
                    v_totalexento_deducciones := v_total_deducciones;     
                END IF;     
                --     
                v_totalotrasdeducciones := v_total_deducciones - v_totalimpuestosretenidos;     
                --    
                /*    
                BEGIN     
                  SELECT v_header.correo    
                  INTO v_correo    
                  FROM xxtoks_email_cfdi    
                  WHERE 1=1    
                  AND employee_number = v_header.numero;    
                EXCEPTION    
                 WHEN OTHERS THEN     
                    v_correo := 'dummy@toks.com.mx';    
                END;    
                */    
                --    
                --    
                IF (   v_header.numerosucursal LIKE('81%')    
                    OR v_header.numerosucursal LIKE('90%')    
                    OR v_header.numerosucursal LIKE('91%')    
                    OR v_header.numerosucursal LIKE('92%')    
                   ) THEN    
                    --    
                    v_correo := v_header.correo;    
                    --    
                ELSE    
                    --    
                    v_correo := 'dummy@toks.com.mx';    
                    --    
                END IF;    
                --    
                --    
                IF g_secuencia IS NULL THEN    
                    --    
                    v_contenido := v_contenido || '/INICIO';     
                    --    
                END IF;    
                --     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia;    
                --    
                IF g_secuencia IS NULL THEN    
                    --    
                    v_contenido := v_contenido || CHR(10) || RPAD ('fechaLiquidacion', 70) || v_header.fechaliquidacion;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('anio', 70) || v_header.anio;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('mes', 70) || v_header.mes;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('numeroRecibo', 70) || TO_CHAR(v_header.numerorecibo);     
                    v_contenido := v_contenido || CHR(10) || RPAD ('numReciboMes', 70) || v_numrecibomes;--v_header.numrecibomes;     
                    --    
                    --    
                    IF NVL(v_diastrabajados,0) <= 0 THEN    
                        --    
                        v_contenido := v_contenido || CHR(10) || RPAD ('diasTrabajados', 70) || TO_CHAR(1);    
                        --    
                    ELSE    
                        --    
                        v_contenido := v_contenido || CHR(10) || RPAD ('diasTrabajados', 70) || TO_CHAR(v_diastrabajados);    
                        --    
                    END IF;    
                    --                        
                    v_contenido := v_contenido || CHR(10) || RPAD ('periodo', 70)|| v_header.periodo;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('fechainicialpago', 70)|| v_header.fechainicialpago;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('fechafinalpago', 70) || v_header.fechafinalpago;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('sueldoDiario', 70)|| TRIM(TO_CHAR(v_header.sueldodiario,'999,999,990.00'));      
                    --    
                END IF;    
                --    
                --Hacemos nuevamente la validaci?n ya que esto se mostrar? en el reporte matricial independientemente de lo que se pinte en el ATI    
                IF NVL(v_diastrabajados,0) <= 0 AND p_tipo_nomina = 'FINIQUITO'  THEN     
                    --    
                    v_diastrabajados := 1;    
                    --    
                ELSIF NVL(v_diastrabajados,0) <= 0 AND p_tipo_nomina <> 'FINIQUITO'  THEN    
                    --    
                    v_diastrabajados := 0;    
                    --    
                END IF;     
                --    
                --    
                IF NOT(v_total_otros_pagos > 0 AND v_total_percepciones = 0) THEN     
                    --     
                    v_contenido := v_contenido || CHR(10) || RPAD ('totalPercepciones', 70) || TRIM(TO_CHAR(v_total_percepciones,'999,999,990.00'));     
                    --     
                END IF;     
                --     
                IF v_total_deducciones > 0 THEN     
                    --     
                    v_contenido := v_contenido || CHR(10) || RPAD ('totalDeducciones', 70) || TRIM(TO_CHAR(v_total_deducciones,'999,999,990.00'));     
                    --     
                END IF;     
                --     
                v_contenido := v_contenido || CHR(10) || RPAD ('netoPagado', 70) || TRIM(TO_CHAR(v_neto_pagado,'999,999,990.00'));     
                v_contenido := v_contenido || CHR(10) || RPAD ('totalDescuentos', 70) || TRIM(TO_CHAR(v_total_deducciones,'999,999,990.00'));     
                v_contenido := v_contenido || CHR(10) || RPAD ('sdi',70) || TRIM(TO_CHAR(v_sdi,'999,999,990.00'));        
                v_contenido := v_contenido || CHR(10) || RPAD ('fecha', 70) || v_header.fecha;     
                v_contenido := v_contenido || CHR(10) || RPAD ('metododepago', 70) || NVL(p_metodo_pago, v_header.metododepago);        
                v_contenido := v_contenido || CHR(10) || RPAD ('lugarexpedicion', 70) || v_header.lugarexpedicion;      
                v_contenido := v_contenido || CHR(10) || RPAD ('tipoNomina',70)|| v_header.tiponomina;    
                --    
                IF p_tipo_nomina <> 'RETIRO VOLUNTARIO' THEN    
                    --    
                    IF g_ciclo_sencuencia = 'SUELDOS' THEN    
                        --    
                        v_contenido := v_contenido || CHR(10) || RPAD ('totalOtrosPagos',70) || TRIM(TO_CHAR(v_total_otros_pagos,'999,999,999,990.00'));       
                        --    
                    ELSE    
                        --    
                        v_contenido := v_contenido || CHR(10) || RPAD ('totalOtrosPagos',70);       
                        --    
                    END IF;    
                    --    
                END IF;    
                --     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Adicionales';     
                v_contenido := v_contenido || CHR(10) || RPAD ('banco', 70) || v_header.banco;     
                v_contenido := v_contenido || CHR(10) || RPAD ('nomina', 70) ||v_header.nomina;     
                v_contenido := v_contenido || CHR(10) || RPAD ('tipo', 70) || v_header.tipo;     
                v_contenido := v_contenido || CHR(10) || RPAD ('horasExtra', 70) || TO_CHAR(v_horasextra);     
                v_contenido := v_contenido || CHR(10) || RPAD ('ausentismo', 70) || TO_CHAR(v_ausentismo);     
                v_contenido := v_contenido || CHR(10) || RPAD ('incapacidad', 70) || TO_CHAR(v_incapacidad);     
                --    
                v_numcuenta := NULL;    
                v_clabe := NULL;    
                    
                IF v_header.numcuenta IS NOT NULL AND NVL(p_metodo_pago, '-') <> '02' AND v_header.metododepago <> '02' THEN     
                    --     
                    v_contenido := v_contenido || CHR(10) || RPAD ('numCuenta', 70) || v_header.numcuenta;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('clabe', 70) || v_header.clabe;     
                    --    
                    v_numcuenta := v_header.numcuenta;    
                    v_clabe := v_header.clabe;    
                    --    
                END IF;     
                --     
                v_contenido := v_contenido || CHR(10) || RPAD ('fechainiciorellaboral', 70) || v_header.fechainiciorellaboral;     
                v_contenido := v_contenido || CHR(10) || RPAD ('antiguedadporsemana', 70) || v_header.antiguedadporsemana;     
                v_contenido := v_contenido || CHR(10) || RPAD ('tipoPago', 70) || v_header.tipopago;           
                v_contenido := v_contenido || CHR(10) || RPAD ('numQuincena', 70) || v_header.numquincena;     
                v_contenido := v_contenido || CHR(10) || RPAD ('isrRetenidoAcumulado', 70) || TRIM(TO_CHAR(v_isrretenidoacumulado,'999,999,999,990.00'));     
                v_contenido := v_contenido || CHR(10) || RPAD ('percepcionGravableAcumulada', 70) || TRIM(TO_CHAR(v_percepciongravableacumulada,'999,999,999,990.00'));     
				    
				    
				IF  p_tipo_nomina = 'BONO_PRODUCTIVIDAD' AND UPPER(v_header.tipo) LIKE 'TOKS%QUINCENAL' THEN --Incentivo de Productividad para la nómina de TOKS Quincenal no debe de reflejar el acumulado de Fondo de ahorro, cambio judith 31/05/2022    
                    
				v_contenido := v_contenido || CHR(10) || RPAD ('fondoDeAhorroDepositado', 70)|| NULL; 				   
				    
				ELSE     
                   
				v_contenido := v_contenido || CHR(10) || RPAD ('fondoDeAhorroDepositado', 70)|| TRIM(TO_CHAR(v_fondodeahorrodepositado,'999,999,999,990.00'));  				    
				    
				END IF;    
				    
				    
                v_contenido := v_contenido || CHR(10) || RPAD ('numeroSucursal', 70) || v_header.numerosucursal;     
                v_contenido := v_contenido || CHR(10) || RPAD ('tipoSegmentoNomina', 70) || v_header.tiposegmentonomina;     
                --     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Patron';     
                v_contenido := v_contenido || CHR(10) || RPAD ('rfc', 70) || v_header.rfc_empresa;     
                v_contenido := v_contenido || CHR(10) || RPAD ('nombre', 70) || v_header.nombre_empresa;     
                --     
                IF p_tipo_nomina = 'RETIRO VOLUNTARIO' THEN     
                    --     
                    v_registropatronal := '';    
                    --    
                ELSE    
                    --    
                    v_registropatronal := v_header.registropatronal;    
                    --    
                END IF;    
                --      
                IF p_tipo_nomina <> 'FINIQUITO' OR (p_tipo_nomina = 'FINIQUITO' AND g_ciclo_sencuencia = 'SUELDOS') THEN    
                    --    
                    v_contenido := v_contenido || CHR(10) || RPAD ('registropatronal', 70) || v_registropatronal;     
                    --     
                END IF;     
                --     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Patron/Regimenes';     
                v_contenido := v_contenido || CHR(10) || RPAD ('regimenfiscal', 70) || v_header.regimenfiscal;     
                --     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Patron/DomicilioFiscal';     
                v_contenido := v_contenido || CHR(10) || RPAD ('calle', 70) || v_header.calle_empresa;     
                v_contenido := v_contenido || CHR(10) || RPAD ('noExterior', 70) || v_header.noexterior_empresa;     
                v_contenido := v_contenido || CHR(10) || RPAD ('noInterior', 70) || v_header.nointerior_empresa;     
                v_contenido := v_contenido || CHR(10) || RPAD ('colonia', 70) || v_header.colonia_empresa;     
                v_contenido := v_contenido || CHR(10) || RPAD ('localidad', 70) || v_header.localidad_empresa;     
                v_contenido := v_contenido || CHR(10) || RPAD ('municipio', 70) || v_header.municipio_empresa;     
                v_contenido := v_contenido || CHR(10) || RPAD ('estado', 70) || v_header.estado_empresa;     
                v_contenido := v_contenido || CHR(10) || RPAD ('pais', 70) || v_header.pais_empresa;     
                v_contenido := v_contenido || CHR(10) || RPAD ('codigoPostal', 70) || v_header.codigopostal_empresa;     
                --     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Empleado';     
                v_contenido := v_contenido || CHR(10) || RPAD ('nombre', 70) || REPLACE(v_header.nombre,',','');     
                v_contenido := v_contenido || CHR(10) || RPAD ('rfc', 70) || v_header.rfc;     
                v_contenido := v_contenido || CHR(10) || RPAD ('imss', 70) || v_header.imss;     
                v_contenido := v_contenido || CHR(10) || RPAD ('curp', 70) || v_header.curp;     
                v_contenido := v_contenido || CHR(10) || RPAD ('correo', 70) || v_correo;     
                v_contenido := v_contenido || CHR(10) || RPAD ('tiporegimen', 70) || v_tipo_regimen;     
                v_contenido := v_contenido || CHR(10) || RPAD ('tipocontrato', 70) || v_tipocontrato;     
                --     
                IF v_header.sindicalizado IS NOT NULL THEN     
                   --     
                   v_contenido := v_contenido || CHR(10) || RPAD ('sindicalizado', 70) || v_header.sindicalizado;     
                   --     
                END IF;     
                --     
                v_contenido := v_contenido || CHR(10) || RPAD ('riesgopuesto', 70) || v_header.riesgopuesto;     
                v_contenido := v_contenido || CHR(10) || RPAD ('periodicidadPago', 70) || v_header.periodicidadpago;     
                v_contenido := v_contenido || CHR(10) || RPAD ('claveEntFed', 70) || v_header.claveentfed;     
                --     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Empleado/Detalle';     
                v_contenido := v_contenido || CHR(10) || RPAD ('numero', 70) || v_header.numero;     
                v_contenido := v_contenido || CHR(10) || RPAD ('jefeDirecto', 70) || ''; --v_header.jefedirecto;     
                v_contenido := v_contenido || CHR(10) || RPAD ('correoJefe', 70) || ''; --v_header.correojefe;     
                --     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Conceptos';     
                --     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Conceptos/Percepciones';     
                --    
                --    
                v_totaljubilacionpensionretiro := 0;    
                --    
                IF v_tipo_regimen = '12' THEN    
                    --    
                    v_totaljubilacionpensionretiro := v_totalsueldos;    
                    v_totalsueldos := 0;    
                    --    
                END IF;    
                --    
                --    
                v_contenido := v_contenido || CHR(10) || RPAD ('totalSueldos',70) || TRIM(TO_CHAR(v_totalsueldos,'999,999,990.00'));     
                v_contenido := v_contenido || CHR(10) || RPAD ('totalSeparacionIndemnizacion',70) || TRIM(TO_CHAR(v_totalseparacionindemnizacion, '999,999,999,990.00'));     
                v_contenido := v_contenido || CHR(10) || RPAD ('totalJubilacionPensionRetiro',70) || TRIM(TO_CHAR(v_totaljubilacionpensionretiro, '999,999,999,990.00'));     
                v_contenido := v_contenido || CHR(10) || RPAD ('totalgravado',70)|| TRIM(TO_CHAR(v_totalgravado_percepciones,'999,999,990.00'));                 
                v_contenido := v_contenido || CHR(10) || RPAD ('totalexento',70)|| TRIM(TO_CHAR(v_totalexento_percepciones,'999,999,990.00'));                   
                --     
                FOR v_percepcion IN c_percepciones(  v_header.payroll_rel_action_id     
                                                   , p_process_id     
                                                   , p_tipo_nomina    
                                                  ) LOOP     
                    --     
                    v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Conceptos/Percepciones/Percepcion';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('tipopercepcion', 70) || v_percepcion.tipopercepcion;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('clave', 70) || v_percepcion.clave;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('descripcion', 70) || v_percepcion.descripcion;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('importeexento', 70) || TRIM(TO_CHAR(v_percepcion.importeexento,'999,999,990.00'));     
                    v_contenido := v_contenido || CHR(10) || RPAD ('importegravado', 70) || TRIM(TO_CHAR(v_percepcion.importegravado,'999,999,990.00'));     
                    v_contenido := v_contenido || CHR(10) || RPAD ('importe', 70) || TRIM(TO_CHAR(v_percepcion.importe,'999,999,990.00'));     
                    --     
                    IF v_percepcion.tipopercepcion = '019' THEN     
                        --     
                        FOR v_horaextra IN c_horasextra(  v_header.payroll_rel_action_id     
                                                        , v_percepcion.clave     
                                                        , p_process_id    
                                                        , p_tipo_nomina    
                                                       ) LOOP     
                            --     
                            v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Conceptos/Percepciones/Percepcion/HoraExtra';     
                            v_contenido := v_contenido || CHR(10) || RPAD ('dias', 70) || TRIM(TO_CHAR(CEIL(v_horaextra.dias/3),'999,999,999,990.00'));     
                            v_contenido := v_contenido || CHR(10) || RPAD ('tipohoras', 70) || v_horaextra.tipohoras;     
                            v_contenido := v_contenido || CHR(10) || RPAD ('horasextra', 70) || TO_CHAR(v_horaextra.horasextra);     
                            v_contenido := v_contenido || CHR(10) || RPAD ('importe', 70) || TRIM(TO_CHAR(v_percepcion.importe,'999,999,990.00'));     
                            --     
                        END LOOP;     
                        --     
                    END IF;     
                    --     
                END LOOP;     
                --     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Conceptos/Deducciones';     
                v_contenido := v_contenido || CHR(10) || RPAD ('totalgravado',70) || TRIM(TO_CHAR(v_totalgravado_deducciones,'999,999,990.00'));     
                v_contenido := v_contenido || CHR(10) || RPAD ('totalexento',70) || TRIM(TO_CHAR(v_totalexento_deducciones,'999,999,990.00'));     
                v_contenido := v_contenido || CHR(10) || RPAD ('totalOtrasDeducciones',70) || TRIM(TO_CHAR(v_totalotrasdeducciones,'999,999,990.00'));     
                --     
                IF v_totalimpuestosretenidos > 0 THEN     
                    --     
                    v_contenido := v_contenido || CHR(10) || RPAD ('totalImpuestosRetenidos',70) || TRIM(TO_CHAR(v_totalimpuestosretenidos,'999,999,990.00'));     
                    --     
                END IF;     
                --     
                --     
                FOR v_deduccion IN c_deducciones(  v_header.payroll_rel_action_id     
                                                 , p_process_id    
                                                 , p_tipo_nomina    
                                                ) LOOP     
                    --     
                    v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Conceptos/Deducciones/Deduccion';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('tipodeduccion', 70) || v_deduccion.tipodeduccion;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('clave', 70) || v_deduccion.clave;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('descripcion', 70) || v_deduccion.descripcion;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('importeexento', 70) || TRIM(TO_CHAR(v_deduccion.importeexento,'999,999,990.00'));     
                    v_contenido := v_contenido || CHR(10) || RPAD ('importegravado', 70) || TRIM(TO_CHAR(v_deduccion.importegravado,'999,999,990.00'));     
                    v_contenido := v_contenido || CHR(10) || RPAD ('importe', 70) || TRIM(TO_CHAR(v_deduccion.importe,'999,999,990.00'));     
                    --     
                END LOOP;     
                --     
                --     
                IF v_totalpagado > 0 THEN     
                    --     
                    v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Conceptos/SeparacionIndemnizacion';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('totalPagado', 70) || TRIM(TO_CHAR(v_totalpagado,'999,999,990.00'));     
                    v_contenido := v_contenido || CHR(10) || RPAD ('numAñosServicio', 70) || v_header.numaniosservicio;     
                    --     
                    IF v_header.ultimosueldomensord_periodo > 0 THEN     
                        v_ultimosueldomensord := v_header.ultimosueldomensord_periodo;     
                    ELSE     
                        v_ultimosueldomensord := v_header.ultimosueldomensord_contr;     
                    END IF;     
                    --     
                    v_contenido := v_contenido || CHR(10) || RPAD ('UltimoSueldoMensOrd', 70) || TRIM(TO_CHAR(v_ultimosueldomensord,'999,999,990.00'));     
                    v_contenido := v_contenido || CHR(10) || RPAD ('ingresoAcumulable', 70) || '0.00';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('ingresoNoAcumulable', 70) || '0.00';     
                    --     
                END IF;     
                --     
                v_existe_subsidioalempleo := 'N';     
                v_subsidiocausado := 0;     
                --    
                --    
                IF p_tipo_nomina <> 'RETIRO VOLUNTARIO' THEN    
                    --    
                    FOR v_otropago IN c_otrospagos(  v_header.payroll_rel_action_id     
                                                   , p_process_id    
                                                   , p_tipo_nomina    
                                                  ) LOOP     
                                                       
                        IF NVL(v_otropago.importe, 0) > 0 AND g_ciclo_sencuencia = 'SUELDOS' THEN	 --ALG  18/11/2020			       
                              --     
                              v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/OtrosPagos/OtroPago';     
                              v_contenido := v_contenido || CHR(10) || RPAD ('tipoOtroPago', 70) || v_otropago.tipootropago;     
                              v_contenido := v_contenido || CHR(10) || RPAD ('clave', 70) || v_otropago.clave;     
                              v_contenido := v_contenido || CHR(10) || RPAD ('concepto', 70) || v_otropago.concepto;     
                              v_contenido := v_contenido || CHR(10) || RPAD ('importe', 70) || TRIM(TO_CHAR(v_otropago.importe,'999,999,990.00'));     
                              --     
                              IF v_otropago.tipootropago = '002' THEN     
                                  --     
                                  v_existe_subsidioalempleo := 'Y';     
                                  --     
                                  v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/OtrosPagos/OtroPago/SubSidioAlEmpleo';     
                                  v_contenido := v_contenido || CHR(10) || RPAD ('subSidioCausado', 70) || TRIM(TO_CHAR(v_otropago.subsidiocausado,'999,999,990.00'));     
                                  --     
                                  v_subsidiocausado := v_subsidiocausado + v_otropago.subsidiocausado;     
                                  --     
                              END IF;     
                              --     
                              IF v_otropago.tipootropago = '004' THEN     
                                  --     
                                  v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/OtrosPagos/OtroPago/CompensacionSaldoAFavor';     
                                  v_contenido := v_contenido || CHR(10) || RPAD ('saldoafavor', 70) || TRIM(TO_CHAR(v_otropago.saldoafavor,'999,999,990.00'));     
                                  v_contenido := v_contenido || CHR(10) || RPAD ('anio', 70) || TO_CHAR(v_otropago.anio);     
                                  v_contenido := v_contenido || CHR(10) || RPAD ('remanentesaldoafavor', 70) || TRIM(TO_CHAR(v_otropago.remanentesaldoafavor,'999,999,990.00'));     
                                  --     
                              END IF;     
                              --     
                        END IF;     
                        --    
                    END LOOP;    
                    --    
                END IF;    
                --     
                IF v_existe_subsidioalempleo = 'N' AND g_ciclo_sencuencia = 'SUELDOS' AND p_tipo_nomina <> 'RETIRO VOLUNTARIO' THEN     
                    --     
                    IF p_tipo_nomina IN ('FINIQUITO') THEN     
                        --     
                        v_elemento_subsidio := 'FP049';     
                        --     
                    ELSE     
                        --     
                        v_elemento_subsidio := 'NP052';     
                        --     
                    END IF;     
                    --     
                    v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/OtrosPagos/OtroPago';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('tipoOtroPago', 70) || '002';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('clave', 70) || v_elemento_subsidio;     
                    v_contenido := v_contenido || CHR(10) || RPAD ('concepto', 70) || 'SUBSIDIO PARA EL EMPLEO';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('importe', 70) || '0.00';     
                    v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/OtrosPagos/OtroPago/SubSidioAlEmpleo';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('subSidioCausado', 70) || '0.00';     
                    --     
                END IF;     
                --     
                FOR v_incapacidad IN c_incapacidades(  v_header.payroll_rel_action_id     
                                                     , p_process_id    
                                                     , p_tipo_nomina    
                                                    ) LOOP     
                    --     
                    IF v_incapacidad.importemonetario > 0 THEN     
                        --     
                        v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Conceptos/Incapacidades/Incapacidad';     
                        v_contenido := v_contenido || CHR(10) || RPAD ('dias', 70) || TO_CHAR(v_incapacidad.dias);     
                        v_contenido := v_contenido || CHR(10) || RPAD ('tipoincapacidad', 70) || v_incapacidad.tipoincapacidad;     
                        v_contenido := v_contenido || CHR(10) || RPAD ('importeMonetario', 70) || TRIM(TO_CHAR(v_incapacidad.importemonetario,'999,999,990.00'));     
                        v_contenido := v_contenido || CHR(10) || RPAD ('descuento', 70) || TRIM(TO_CHAR(v_incapacidad.descuento,'999,999,990.00'));     
                        --     
                    END IF;     
                    --     
                END LOOP;     
                --    
                --     
                IF v_tipo_regimen = '12' THEN     
                    --    
                    v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Conceptos/JubilacionPensionRetiro';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('totalunaexhibicion', 70) || TRIM(TO_CHAR(v_totaljubilacionpensionretiro,'999,999,990.00'));      
                    v_contenido := v_contenido || CHR(10) || RPAD ('totalparcialidad', 70) || '';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('montodiario', 70) || '';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('ingresoacumulable', 70) || '0.00';     
                    v_contenido := v_contenido || CHR(10) || RPAD ('ingresonoacumulable', 70) || '0.00';     
                    --     
                END IF;     
                --     
                --    
                v_leyenda := p_leyenda;     
                --     
                v_contenido := v_contenido || CHR(10) || '/ReciboDeNomina'||g_secuencia||'/Leyendas';     
                --     
                IF p_tipo_nomina IN ('FINIQUITO', 'LIQUIDACION', 'PTU BAJAS') THEN     
                    --     
                    v_leyenda := v_leyenda||'Recibí de conformidad el importe correspondiente a las percepciones indicadas en esta liquidación de las remuneraciones ordinarias y extraordinarias que se especifican y a las cuales tengo derecho hasta la fecha, asimismo doy por  terminada la relación de Trabajo, manifestando mi consentimiento con las partidas que se me deducen, no reservándome acción o derecho que ejercitar con posterioridad.';     
                    --     
                ELSIF p_tipo_nomina IN ('FINIQUITO FONDO', 'FONDO AHORRO', 'PTU BAJAS') THEN     
                    --     
                    v_leyenda := v_leyenda || '';     
                    --     
                ELSE     
                    --     
                    v_leyenda := v_leyenda || 'RECIBI LA CANTIDAD QUE EN EL PRESENTE RECIBO SE MENCIONA Y CON LA CUAL SE ME CUBRE Y LIQUIDA, HASTA LA PRESENTE FECHA, TODA PRESTACION QUE HUBIERA TENIDO DERECHO A RECIBIR POR CUALQUIER CONCEPTO INCLUSIVE POR SALARIOS ORDINARIOS,EXTRAORDINARIOS, HORAS EXTRAS,DESCANSOS, ETC. HABIENDOSE HECHO TANTO LOS DESCUENTOS DE LEY. COMO LOS DE CARACTER PRIVADO, POR LO QUE OTORGO A DICHA EMPRESA EL MAS AMPLIO FINIQUITO DE OBLIGACIONES QUE EN DERECHO PROCEDAN.';     
                    --     
                END IF;     
                --     
                v_contenido := v_contenido || CHR(10) || RPAD ('texto', 70)|| v_leyenda;    
    
                IF p_tipo_nomina <> 'FINIQUITO' OR (p_tipo_nomina = 'FINIQUITO' AND v_repeticiones = 2 AND v_i = 2) OR (p_tipo_nomina = 'FINIQUITO' AND v_repeticiones = 1 AND v_i = 1) THEN    
                    --    
                    v_contenido := v_contenido|| CHR(10) ||'/FIN' || CHR(10);      
                    --    
                END IF;    
                --     
                UPDATE    xxtoks_pay_ati_header     
                SET       totalpercepciones = NVL(totalpercepciones, 0) + v_total_percepciones     
                        , totaldeducciones = NVL(totaldeducciones, 0) + v_total_deducciones     
                        , netopagado = NVL(netopagado, 0) + v_neto_pagado     
                        , totaldescuentos = NVL(totaldescuentos, 0) + v_total_deducciones     
                        , horasextra = v_horasextra     
                        , isrretenidoacumulado = v_isrretenidoacumulado     
                        , percepciongravableacumulada = v_percepciongravableacumulada     
                        , fondodeahorrodepositado = v_fondodeahorrodepositado     
                        , totalsueldos = NVL(totalsueldos, 0) + v_totalsueldos      
                        , totalseparacionindemnizacion = v_totalseparacionindemnizacion     
                        , totaljubilacionpensionretiro = v_totaljubilacionpensionretiro     
                        , totalgravado_per = NVL(totalgravado_per, 0) + v_totalgravado_percepciones     
                        , totalexento_per = NVL(totalexento_per, 0) + v_totalexento_percepciones     
                        , totalgravado_ded = NVL(totalgravado_ded, 0) + v_totalgravado_deducciones     
                        , totalexento_ded = NVL(totalexento_ded, 0) + v_totalexento_deducciones     
                        , totalotrospagos = NVL(totalotrospagos, 0) + v_total_otros_pagos     
                        , subsidiocausado = NVL(subsidiocausado, 0) + v_subsidiocausado     
                        , leyenda = v_leyenda     
                        , correo = v_correo    
                        , numerorecibo = v_header.numerorecibo    
                        , totaldiastrabajados = v_diastrabajados    
                        , metododepago = NVL(p_metodo_pago, v_header.metododepago)    
                        , tiporegimen = v_tipo_regimen    
                        , tipocontrato = v_tipocontrato    
                        , numcuenta = v_numcuenta    
                        , clabe = v_clabe    
                WHERE     1 = 1     
                AND       payroll_rel_action_id = v_header.payroll_rel_action_id;     
                --     
                COMMIT;     
                --     
            END LOOP;    
            --    
        END LOOP;    
		--     
		XXGRG_PAY_CFDI_V2_FILE_PKG.ac_data (v_contenido, p_process_id);     
		--     
	EXCEPTION     
	WHEN OTHERS THEN     
		--     
		v_error := SQLERRM;     
		--     
		INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
												 , error     
												 , fecha     
												 , created_by     
												 , creation_date     
												 , last_updated_by     
												 , last_update_date     
												 , mensaje     
												) VALUES(  p_process_id     
														 , 'Ocurri? un error al construir el ATI:'||v_error||'. payroll_rel_action_id:'||v_payroll_rel_action_id     
														 , SYSDATE - 6/24     
														 , '-1'     
														 , SYSDATE - 6/24     
														 , '-1'     
														 , SYSDATE - 6/24     
														 , v_contenido     
														);     
		--     
		--COMMIT;     
	END ac_clob;     
	--     
	--     
	PROCEDURE main (  p_payroll_id              IN VARCHAR2     
					, p_tipo_ejec_nomina        IN VARCHAR2     
					, p_period_name             IN VARCHAR2     
					, p_consolidation_set_id    IN VARCHAR2     
					, p_assignment_set_id       IN VARCHAR2     
					, p_tipo_nomina             IN VARCHAR2     
					, p_consolidation_saldos    IN VARCHAR2     
					, p_leyenda                 IN VARCHAR2     
					, p_assig_set_esp_id        IN VARCHAR2     
					, p_fecha_liquidacion       IN VARCHAR2     
					, p_fecha_inicial           IN VARCHAR2     
					, p_fecha_final             IN VARCHAR2     
					, p_si_no                   IN VARCHAR2     
					, p_txt_cheque              IN VARCHAR2     
					, p_balance_adj_flag        IN VARCHAR2     
					, p_envio                   IN VARCHAR2     
					, p_user_token              IN VARCHAR2     
					, p_process_id              IN  NUMBER     
					, p_user_name               IN VARCHAR2     
                                        , p_metodo_pago             IN VARCHAR2    
					, p_status                  OUT NUMBER     
				   )      
	AS     
		--     
		v_process_id   	 			NUMBER;     
		v_error         			VARCHAR2(200);     
		v_existe_elemento_finiquito NUMBER;    
        v_existe_elemento_sueldo    NUMBER;    
     
	BEGIN     
			     
			DELETE FROM xxgrg_recibo_cfdi_v2_process     
			WHERE TRUNC(fecha_inicio) < TRUNC(SYSDATE - 6/24 - 7);     
			     
			DELETE FROM xxtoks_pay_ati_error_tracing     
			WHERE TRUNC(creation_date) < TRUNC(SYSDATE - 6/24 - 7);     
     
			DELETE FROM xxgrg_pay_cfdi_v2_clob_data        
			WHERE TRUNC(f_ejecucion) < TRUNC(SYSDATE - 6/24 - 7);     
     
			DELETE FROM xxgrg_pay_cfdi_v2_clob_data2     
			WHERE TRUNC(f_ejecucion) < TRUNC(SYSDATE - 6/24 - 7);     
	     
			g_user_token := p_user_token;     
			--     
			--SELECT    xxgrg_process_cfdi_sec.NEXTVAL     
			--INTO      v_process_id     
			--FROM      dual;     
			--     
			--     
			v_process_id := p_process_id;     
			BEGIN     
				--     
				--SELECT SYS_CONTEXT('USERENV','CLIENT_IDENTIFIER')     
				--FROM dual;     
				     
				INSERT INTO xxgrg_recibo_cfdi_v2_process(  process_id     
														 , nomina     
														 , tipo_ejec_nomina     
														 , periodo     
														 , juego_consolidacion     
														 , juego_asignacion     
														 , tipo_nomina     
														 , juego_consolidacion_saldos     
														 , leyenda     
														 , juego_asignacion_esp     
														 , fecha_liquidacion     
														 , fecha_inicial     
														 , fecha_final     
														 , acumulados     
														 , texto_cheque     
														 , tipo_acumulado     
														 , envio_correo     
														 , status     
														 , fecha_inicio     
														 , client_identifier     
                                                                                                                 , metodo_pago    
														) VALUES(  v_process_id     
																 , p_payroll_id     
																 , p_tipo_ejec_nomina     
																 , p_period_name     
																 , p_consolidation_set_id     
																 , p_assignment_set_id     
																 , p_tipo_nomina     
																 , p_consolidation_saldos     
																 , p_leyenda     
																 , p_assig_set_esp_id     
																 , p_fecha_liquidacion     
																 , p_fecha_inicial     
																 , p_fecha_final     
																 , p_si_no     
																 , p_txt_cheque     
																 , p_balance_adj_flag     
																 , p_envio     
																 , 'PROCESANDO'     
																 , SYSDATE - 6/24     
																 , p_user_name     
                                                                                                                                 , p_metodo_pago    
																);     
				--     
				--COMMIT;     
				--     
			EXCEPTION     
			WHEN OTHERS THEN     
				--     
				v_error := SQLERRM;     
				--     
				INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
														 , error     
														 , fecha     
														 , created_by     
														 , creation_date     
														 , last_updated_by     
														 , last_update_date     
														) VALUES(  v_process_id     
																 , 'Ocurri? un error al guardar la informaci?n de la ejecuci?n:'||v_error     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																 , '-1'     
																 , SYSDATE - 6/24     
																);     
				--COMMIT;     
			END;     
			--     
			     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'INICIA :XXGRG_PAY_CFDI_V2_FILE_PKG.get_organizations',v_process_id);     
			--Obtenemos las organizaciones que ser?n procesadas     
			XXGRG_PAY_CFDI_V2_FILE_PKG.get_organizations(  p_payroll_id     
														 , p_tipo_ejec_nomina     
														 , p_period_name     
														 , p_consolidation_set_id     
														 , p_assignment_set_id     
														 , p_tipo_nomina     
														 , p_assig_set_esp_id     
														 , p_fecha_liquidacion     
														 , p_fecha_inicial     
														 , p_fecha_final     
														 , p_txt_cheque     
														 , p_balance_adj_flag     
														 , v_process_id     
														 , p_user_token     
														);     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'FINALIZA :XXGRG_PAY_CFDI_V2_FILE_PKG.get_organizations',v_process_id);     
			--     
			--Lanzamos los procesos en paralelo     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'INICIA :XXGRG_PAY_CFDI_V2_FILE_PKG.generar_procesos_paralelo',v_process_id);			     
			XXGRG_PAY_CFDI_V2_FILE_PKG.generar_procesos_paralelo(v_process_id);     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'FINALIZA :XXGRG_PAY_CFDI_V2_FILE_PKG.generar_procesos_paralelo',v_process_id);     
			XXGRG_PAY_CFDI_V2_FILE_PKG.RETRY_ORG_ERR(v_process_id);     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'FINALIZA :XXGRG_PAY_CFDI_V2_FILE_PKG.RETRY_ORG_ERR',v_process_id);     
			  
            --     
     
			--     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'INICIA :XXGRG_PAY_CFDI_V2_FILE_PKG.ac_clob',v_process_id);     
            XXGRG_PAY_CFDI_V2_FILE_PKG.ac_clob (v_process_id, p_tipo_nomina, p_leyenda, p_si_no, p_payroll_id, p_metodo_pago);			     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'FINALIZA :XXGRG_PAY_CFDI_V2_FILE_PKG.ac_clob',v_process_id);     
			--     
			--XXGRG_PAY_CFDI_V2_FILE_PKG.limpiar(v_id_exec);     
			     
			--llena 2do archivo     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'INICIA :XXGRG_PAY_CFDI_V2_FILE_PKG.imprime_reporte_ati',v_process_id);     
                
			v_existe_elemento_finiquito := 0;    
			--    
			SELECT    SUM(existe)    
			INTO      v_existe_elemento_finiquito    
			FROM      (    
						SELECT    NVL(COUNT(1), 0) existe    
						FROM      xxtoks_pay_ati_lines_per xpalp    
						WHERE     1 = 1     
						--AND       xpalp.payroll_rel_action_id = v_header.payroll_rel_action_id     
						AND       xpalp.process_id = v_process_id    
						AND       p_tipo_nomina = 'FINIQUITO'    
						AND       EXISTS(    
											SELECT    1    
											FROM      xxgrg_elementos_finiquitos_ati xefa    
											WHERE     1 = 1    
											AND       xefa.element_name = xpalp.clave    
										)    
						UNION ALL    
						SELECT    NVL(COUNT(1), 0) existe    
						FROM      xxtoks_pay_ati_lines_otrspagos xpalo    
						WHERE     1 = 1     
						--AND       xpalo.payroll_rel_action_id = v_header.payroll_rel_action_id     
						AND       xpalo.process_id = v_process_id    
						AND       p_tipo_nomina = 'FINIQUITO'    
						AND       EXISTS(    
											SELECT    1    
											FROM      xxgrg_elementos_finiquitos_ati xefa    
											WHERE     1 = 1    
											AND       xefa.element_name = xpalo.clave    
										)    
						UNION ALL    
						SELECT    NVL(COUNT(1), 0) existe    
						FROM      xxtoks_pay_ati_lines_ded xpald    
						WHERE     1 = 1     
						--AND       xpald.payroll_rel_action_id = v_header.payroll_rel_action_id     
						AND       xpald.process_id = v_process_id    
						AND       p_tipo_nomina = 'FINIQUITO'    
						AND       EXISTS(    
											SELECT    1    
											FROM      xxgrg_elementos_finiquitos_ati xefa    
											WHERE     1 = 1    
											AND       xefa.element_name = xpald.clave    
										)    
						) finiquitos    
			WHERE     1 = 1;    
            --    
            --    
            v_existe_elemento_sueldo := 0;    
            --    
            SELECT    SUM(existe)    
			INTO      v_existe_elemento_sueldo    
			FROM      (    
						SELECT    NVL(COUNT(1), 0) existe    
						FROM      xxtoks_pay_ati_lines_per xpalp    
						WHERE     1 = 1     
						--AND       xpalp.payroll_rel_action_id = v_header.payroll_rel_action_id     
						AND       xpalp.process_id = v_process_id    
						AND       p_tipo_nomina = 'FINIQUITO'    
						AND       NOT EXISTS(    
											SELECT    1    
											FROM      xxgrg_elementos_finiquitos_ati xefa    
											WHERE     1 = 1    
											AND       xefa.element_name = xpalp.clave    
										)    
						UNION ALL    
						SELECT    NVL(COUNT(1), 0) existe    
						FROM      xxtoks_pay_ati_lines_otrspagos xpalo    
						WHERE     1 = 1     
						--AND       xpalo.payroll_rel_action_id = v_header.payroll_rel_action_id     
						AND       xpalo.process_id = v_process_id    
						AND       p_tipo_nomina = 'FINIQUITO'    
						AND       NOT EXISTS(    
											SELECT    1    
											FROM      xxgrg_elementos_finiquitos_ati xefa    
											WHERE     1 = 1    
											AND       xefa.element_name = xpalo.clave    
										)    
						UNION ALL    
						SELECT    NVL(COUNT(1), 0) existe    
						FROM      xxtoks_pay_ati_lines_ded xpald    
						WHERE     1 = 1     
						--AND       xpald.payroll_rel_action_id = v_header.payroll_rel_action_id     
						AND       xpald.process_id = v_process_id    
						AND       p_tipo_nomina = 'FINIQUITO'    
						AND       NOT EXISTS(    
											SELECT    1    
											FROM      xxgrg_elementos_finiquitos_ati xefa    
											WHERE     1 = 1    
											AND       xefa.element_name = xpald.clave    
										)    
						) sueldos    
			WHERE     1 = 1;    
    
            IF p_tipo_nomina = 'FINIQUITO' AND v_existe_elemento_finiquito > 0 AND v_existe_elemento_sueldo > 0 THEN    
			--IF p_tipo_nomina <> 'FINIQUITO' THEN    
                XXGRG_PAY_CFDI_V2_FILE_PKG.imprime_reporte_ati_finq(v_process_id);    
            ELSE    
                XXGRG_PAY_CFDI_V2_FILE_PKG.imprime_reporte_ati(v_process_id,p_tipo_nomina);    
            END IF;    
			    
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'FINALIZA :XXGRG_PAY_CFDI_V2_FILE_PKG.imprime_reporte_ati',v_process_id);     
			     
     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'INICIA :UPDATE xxgrg_recibo_cfdi_v2_process',v_process_id);     
			UPDATE xxgrg_recibo_cfdi_v2_process     
			SET status = 'FINALIZADO'     
			,fecha_fin = SYSDATE - 6/24     
			WHERE process_id = v_process_id;     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'FINALIZA :UPDATE xxgrg_recibo_cfdi_v2_process',v_process_id);     
     
 			    
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'INICIA :DELETE',v_process_id);     
			    
			    
			DELETE FROM xxtoks_pay_ati_organization     
			WHERE process_id = v_process_id;     
    
			DELETE FROM xxtoks_pay_ati_header     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_per     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_ded     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_hextra     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_inc     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_otrspagos     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_diastrab     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_sdi     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_ausentism     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_separacio     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_impuestos     
			WHERE process_id = v_process_id;     
     
			DELETE FROM xxtoks_pay_ati_lines_acumulado     
			WHERE process_id = v_process_id;    
                
                
			     
			INSERT INTO XXTOK_LOGS_ATI VALUES(TO_CHAR(SYSDATE - 6/24,'DD/MM/YYYY HH24:MI:SS'),'FINALIZA :DELETE',v_process_id);     
              
			--     
		EXCEPTION     
		WHEN OTHERS THEN     
			--     
			v_error := SQLERRM;     
			--     
			INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
													 , error     
													 , fecha     
													 , created_by     
													 , creation_date     
													 , last_updated_by     
													 , last_update_date     
													) VALUES(  v_process_id     
															 , 'Ocurri? un error en el proceso principal:'||v_error     
															 , SYSDATE - 6/24     
															 , '-1'     
															 , SYSDATE - 6/24     
															 , '-1'     
															 , SYSDATE - 6/24     
															);     
			--     
			--COMMIT;     
     
		END main;     
		--     
		PROCEDURE imprime_reporte_ati (p_process_id  IN NUMBER,    
                                       p_tipo_nomina IN VARCHAR2)     
		IS     
			--p_process_id NUMBER:= 362;     
			--l_contador   NUMBER;     
			l_max_perception NUMBER;     
			l_max_deduction  NUMBER;     
			l_max_horas      NUMBER;     
			l_max_inc        NUMBER;     
     
			v_contenido_cabe CLOB;     
			v_contenido      CLOB;		     
     
			l_per_enc        VARCHAR2 (32767);     
			l_ded_enc        VARCHAR2 (32767);     
			l_hora_enc       VARCHAR2 (32767);     
			l_inc_enc        VARCHAR2 (32767);     
			v_error          VARCHAR2 (32767);     
			    
			     
			--l_per            CLOB;       
			--l_ded            CLOB;     
			--l_horas          CLOB;     
			--l_incapacidad    CLOB;     
			v_inc_contador   NUMBER;    
			     
			CURSOR c_xml_data IS     
			WITH xxtoks_pay_ati_per_lines AS(--NOTA: SE GENERO ESTA TABLA TEMP PARA OBTENER LOS OTROS PAGOS COMO PERCEPCIONES    
			    
			(    
			SELECT tipopercepcion         tipopercepcion,    
                   clave                  clave,    
            	   descripcion            descripcion,    
            	   importeexento          importeexento,    
            	   importegravado         importegravado,    
            	   importe                importe,    
            	   cantidad,    
            	   process_id             process_id,    
            	   payroll_rel_action_id  payroll_rel_action_id    
            FROM xxtoks_pay_ati_lines_per    
			)    
            UNION ALL    
			(    
            SELECT tipootropago           tipopercepcion,    
                   clave                  clave,    
            	   concepto               descripcion,    
            	   importe                importeexento,    
            	   null                   importegravado,    
            	   importe                importe,    
            	   null cantidad,    
            	   process_id             process_id,    
            	   payroll_rel_action_id  payroll_rel_action_id    
            FROM xxtoks_pay_ati_lines_otrspagos    
			WHERE 1=1    
			AND importe > 0 --+alegaspi 31/05/2022    
			)    
			)    
			---------------------------------------------+ PERCEPCIONES    
			,xxtoks_pay_ati_percepciones AS(      
			SELECT      
				 cabe.cabecero||'|'||LISTAGG(cabe.tipopercepcion||'|'||cabe.clave||'|'||cabe.cantidad||'|'||cabe.descripcion||'|'||cabe.importeexento||'|'||cabe.importegravado||'|'||cabe.importe,'|') WITHIN GROUP (ORDER BY cabe.clave_all ASC) contenido_per  --AQUI HAY QUE METER EL FILTRO PARA QUE NO TRAIGA LOS DE 0    
				,cabe.payroll_rel_action_id     
				,cabe.process_id     
				,cabe.numerorecibo     
				,cabe.numero     
				,cabe.nombre     
				,COUNT(cabe.clave_all) total_per     
				,cabe.leyenda     
				,cabe.cabecero1    
				--,rownum    
			FROM     
			(     
				SELECT      
					head.fechaliquidacion||'|'||head.anio||'|'||head.mes||'|'||head.numerorecibo as cabecero1    
					,CASE    
						WHEN p_tipo_nomina = 'BONO_PRODUCTIVIDAD' AND UPPER(head.tipo) LIKE 'TOKS%QUINCENAL' THEN --Incentivo de Productividad para la nómina de TOKS Quincenal no debe de reflejar el acumulado de Fondo de ahorro, cambio judith 31/05/2022    
						    
					 '|'||NULL||'|'||TO_CHAR(head.totaldiastrabajados)     
					||'|'||head.periodo||'|'||head.fechainicialpago||'|'||head.fechafinalpago||'|'||head.sueldodiario||'|'||TO_CHAR(head.totalpercepciones)||'|'||TO_CHAR(head.totaldeducciones)     
					||'|'||TO_CHAR(head.netopagado)||'|'||TO_CHAR(head.totaldescuentos)||'|'||TO_CHAR(head.sdi)||'|'||NULL||'|'||head.fecha||'|'||head.metododepago||'|'||head.lugarexpedicion||'|'||NULL     
					||'|'||NULL||'|'||NULL||'|'||NULL||'|'||head.nomina||'|'||NULL||'|'||head.tipo||'|'||TO_CHAR(head.horasextra)||'|'||NULL||'|'||NULL||'|'||head.numcuenta||'|'||head.clabe     
					||'|'||head.fechainiciorellaboral||'|'||head.antiguedadporsemana||'|'||head.tipocontrato -- default: 01     
					||'|'||NULL||'|'||NULL||'|'||NULL||'|'||NULL||'|'||NULL||'|'||NULL||'|'||head.tipopago||'|'||head.numquincena||'|'||TO_CHAR(head.isrretenidoacumulado)     
					||'|'||TO_CHAR(head.percepciongravableacumulada)||'|'||NULL||'|'||head.numerosucursal||'|'||head.tiposegmentonomina||'|'||head.rfc_empresa     
					||'|'||head.nombre_empresa||'|'||head.registropatronal||'|'||head.regimenfiscal||'|'||head.calle_empresa||'|'||head.noexterior_empresa||'|'||head.nointerior_empresa     
					||'|'||head.colonia_empresa||'|'||head.localidad_empresa||'|'||NULL||'|'||head.municipio_empresa||'|'||head.estado_empresa||'|'||head.pais_empresa||'|'||head.codigopostal_empresa     
					||'|'||head.rfc||'|'||head.nombre||'|'||head.imss||'|'||head.curp||'|'||NVL (head.correo, 'dummy@toks.com.mx')||'|'||head.tiporegimen||'|'||head.riesgopuesto||'|'||head.numero     
					||'|'||TO_CHAR(head.puesto)||'|'||head.fechainiciorellaboral||'|'||head.jefedirecto||'|'||head.correojefe||'|'||TO_CHAR(head.totalsueldos)||'|'||TO_CHAR(head.totalseparacionindemnizacion)      
					||'|'||TO_CHAR(head.totaljubilacionpensionretiro) ||'|'||TO_CHAR(head.totalgravado_per) ||'|'||TO_CHAR(head.totalexento_per) ||'|'||TO_CHAR(head.totalotrospagos)     
					||'|'||TO_CHAR(head.subsidiocausado)     
					     
					 ELSE    
					    
					 '|'||NULL||'|'||TO_CHAR(head.totaldiastrabajados)     
					||'|'||head.periodo||'|'||head.fechainicialpago||'|'||head.fechafinalpago||'|'||head.sueldodiario||'|'||TO_CHAR(head.totalpercepciones)||'|'||TO_CHAR(head.totaldeducciones)     
					||'|'||TO_CHAR(head.netopagado)||'|'||TO_CHAR(head.totaldescuentos)||'|'||TO_CHAR(head.sdi)||'|'||NULL||'|'||head.fecha||'|'||head.metododepago||'|'||head.lugarexpedicion||'|'||NULL     
					||'|'||NULL||'|'||NULL||'|'||NULL||'|'||head.nomina||'|'||NULL||'|'||head.tipo||'|'||TO_CHAR(head.horasextra)||'|'||NULL||'|'||NULL||'|'||head.numcuenta||'|'||head.clabe     
					||'|'||head.fechainiciorellaboral||'|'||head.antiguedadporsemana||'|'||head.tipocontrato -- default: 01     
					||'|'||NULL||'|'||NULL||'|'||NULL||'|'||NULL||'|'||NULL||'|'||NULL||'|'||head.tipopago||'|'||head.numquincena||'|'||TO_CHAR(head.isrretenidoacumulado)     
					||'|'||TO_CHAR(head.percepciongravableacumulada)||'|'||TO_CHAR(head.fondodeahorrodepositado)||'|'||head.numerosucursal||'|'||head.tiposegmentonomina||'|'||head.rfc_empresa     
					||'|'||head.nombre_empresa||'|'||head.registropatronal||'|'||head.regimenfiscal||'|'||head.calle_empresa||'|'||head.noexterior_empresa||'|'||head.nointerior_empresa     
					||'|'||head.colonia_empresa||'|'||head.localidad_empresa||'|'||NULL||'|'||head.municipio_empresa||'|'||head.estado_empresa||'|'||head.pais_empresa||'|'||head.codigopostal_empresa     
					||'|'||head.rfc||'|'||head.nombre||'|'||head.imss||'|'||head.curp||'|'||NVL (head.correo, 'dummy@toks.com.mx')||'|'||head.tiporegimen||'|'||head.riesgopuesto||'|'||head.numero     
					||'|'||TO_CHAR(head.puesto)||'|'||head.fechainiciorellaboral||'|'||head.jefedirecto||'|'||head.correojefe||'|'||TO_CHAR(head.totalsueldos)||'|'||TO_CHAR(head.totalseparacionindemnizacion)      
					||'|'||TO_CHAR(head.totaljubilacionpensionretiro) ||'|'||TO_CHAR(head.totalgravado_per) ||'|'||TO_CHAR(head.totalexento_per) ||'|'||TO_CHAR(head.totalotrospagos)     
					||'|'||TO_CHAR(head.subsidiocausado)					    
    
					 END cabecero     
					--||'|'||LISTAGG(per.tipopercepcion||'|'||per.clave||'|'||NULL||'|'||per.descripcion||'|'||per.importeexento||'|'||per.importegravado||'|'||per.importe,'|') WITHIN GROUP (ORDER BY per.clave DESC) contenido_per      
					,head.payroll_rel_action_id     
					,head.process_id     
					,head.numerorecibo     
					,head.numero     
					,head.nombre     
					,head.leyenda     
					,per.tipopercepcion     
					,per.clave                 
					,per.descripcion           
					,per.importeexento         
					,per.importegravado        
					,per.importe     
					,per.cantidad    
					,perc.clave clave_all     
				FROM     
					(     
						SELECT     
							--rownum numerorecibo     
							tmp.*     
						FROM     
						(     
							SELECT     
								enc.fechaliquidacion     
								,enc.anio     
								,enc.mes     
								,enc.numrecibomes     
								,enc.periodo     
								,enc.fechainicialpago     
								,enc.fechafinalpago     
								,enc.sueldodiario     
								,(SELECT MAX(hfecha.fecha)    
									FROM xxtoks_pay_ati_header hfecha    
									WHERE 1=1    
									AND hfecha.process_id = p_process_id)  fecha  --+alegaspi 06/01/2021    
								--,enc.fecha     
								,enc.metododepago     
								,enc.lugarexpedicion     
								,enc.tiponomina     
								,enc.banco     
								,enc.nomina     
								,enc.tipo     
								,enc.numcuenta     
								,enc.clabe     
								,enc.fechainiciorellaboral     
								,enc.antiguedadporsemana     
								,enc.tipopago     
								,enc.numquincena     
								,enc.numerosucursal     
								,enc.tiposegmentonomina     
								,enc.rfc_empresa     
								,enc.nombre_empresa     
								,enc.registropatronal     
								,enc.regimenfiscal     
								,enc.calle_empresa     
								,enc.noexterior_empresa     
								,enc.nointerior_empresa     
								,enc.colonia_empresa     
								,enc.localidad_empresa     
								,enc.municipio_empresa     
								,enc.estado_empresa     
								,enc.pais_empresa     
								,enc.codigopostal_empresa     
								,enc.nombre     
								,enc.rfc     
								,enc.imss     
								,enc.curp     
								,enc.correo     
								,enc.tiporegimen     
								,enc.tipocontrato     
								,enc.sindicalizado     
								,enc.riesgopuesto     
								,enc.periodicidadpago     
								,enc.claveentfed     
								,enc.numero     
								,enc.jefedirecto                                                                
								,enc.correojefe      
								,enc.payroll_rel_action_id     
								,enc.totalpercepciones     
								,enc.totaldeducciones     
								,enc.netopagado     
								,enc.totaldescuentos     
								,enc.horasextra     
								,enc.isrretenidoacumulado     
								,enc.percepciongravableacumulada     
								,enc.fondodeahorrodepositado     
								,enc.totalsueldos     
								,enc.totalseparacionindemnizacion     
								,enc.totaljubilacionpensionretiro     
								,enc.totalgravado_per     
								,enc.totalexento_per     
								,enc.totalgravado_ded     
								,enc.totalexento_ded     
								,enc.totalotrospagos     
								,enc.subsidiocausado     
								,enc.puesto     
								,enc.leyenda     
								,enc.process_id     
								,enc.numerorecibo    
								--+     
								,(SELECT NVL(SUM(diastrabajados), 1)     
									FROM  xxtoks_pay_ati_lines_diastrab xpac     
									WHERE xpac.payroll_rel_action_id = enc.payroll_rel_action_id     
									AND xpac.process_id = p_process_id     
								) diastrabajados    
								, enc.totaldiastrabajados     
								--,(SELECT NVL(SUM(sdi), 1)     
								--	FROM  xxtoks_pay_ati_lines_sdi xpac     
								--	WHERE xpac.payroll_rel_action_id = enc.payroll_rel_action_id     
								--	AND xpac.process_id = p_process_id     
								--) sdi    
                                ,nvl((  SELECT    sdi    
                                        FROM      grg_sdi_correctos_2021    
                                        WHERE     1 = 1    
                                        AND       estafeta = enc.numero    
                                        AND       periodo = (    
                                                                SELECT    periodo    
                                                                FROM      xxgrg_recibo_cfdi_v2_process    
                                                                WHERE     1 = 1    
                                                                AND       process_id = p_process_id    
                                                            )    
                                      /*    
                                      SELECT sdi    
                                      FROM grg_sdi_correctos_p18_2021    
                                      WHERE 1 = 1    
                                      AND estafeta = enc.numero    
                                      AND ('18 2021 Weekly','NOMINA SEMANAL') = (    
                                                                                    SELECT    periodo    
                                                                                            , tipo_nomina    
                                                                                    FROM      xxgrg_recibo_cfdi_v2_process    
                                                                                    WHERE     1 = 1    
                                                                                    AND       process_id = p_process_id    
                                                                                )    
                                      UNION ALL    
                                      SELECT sdi    
                                      FROM grg_sdi_correctos_p19_2021    
                                      WHERE 1 = 1    
                                      AND estafeta = enc.numero    
                                      AND ('19 2021 Weekly','NOMINA SEMANAL') = (    
                                                                                    SELECT    periodo    
                                                                                            , tipo_nomina    
                                                                                    FROM      xxgrg_recibo_cfdi_v2_process    
                                                                                    WHERE     1 = 1    
                                                                                    AND       process_id = p_process_id    
                                                                                )    
                                      */    
                                      ), (SELECT NVL(SUM(sdi), 1)     
									                               FROM  xxtoks_pay_ati_lines_sdi xpac     
									                               WHERE xpac.payroll_rel_action_id = enc.payroll_rel_action_id     
									                               AND xpac.process_id = p_process_id     
								                                   )    
							          ) sdi  --+alegaspi 03/05/2021    
							FROM  	     
							xxtoks_pay_ati_header enc    
							WHERE process_id = p_process_id     
						)tmp     
					)head	      
					,xxtoks_pay_ati_per_lines   per     
					,(       
						SELECT DISTINCT clave,process_id     
						FROM xxtoks_pay_ati_per_lines     
						WHERE process_id = p_process_id) perc     
				WHERE     1 = 1     
					AND head.process_id = p_process_id     
					--AND head.numero IN ('93038','160673')      
					AND head.process_id = per.process_id (+)     
					AND head.payroll_rel_action_id = per.payroll_rel_action_id (+)     
					AND per.clave (+) = perc.clave				    
				--ORDER BY head.numerorecibo,perc.clave ASC  --alegaspi 07/01/2021    
				ORDER BY perc.clave ASC  --alegaspi 07/01/2021    
			)cabe     
			GROUP BY     
				cabe.cabecero     
				,cabe.payroll_rel_action_id     
				,cabe.process_id     
				,cabe.numerorecibo     
				,cabe.cabecero1    
				,cabe.numero     
				,cabe.nombre     
				,cabe.leyenda    
			ORDER BY cabe.numero    
			)     
			---------------------------------------------+ DEDUCCIONES     
			,xxtoks_pay_ati_deducciones AS(	     
			SELECT     
				deduc.numero     
				,deduc.nombre     
				,deduc.payroll_rel_action_id     
				,deduc.process_id      
				,LISTAGG(deduc.tipodeduccion||'|'||deduc.clave||'|'||deduc.cantidad||'|'||deduc.descripcion||'|'||deduc.importeexento||'|'||deduc.importegravado||'|'||deduc.importe,'|') WITHIN GROUP (ORDER BY deduc.clave_all ASC) contenido_ded     
				,COUNT(deduc.clave_all) total_ded     
				,deduc.totalgravado_ded     
				,deduc.totalexento_ded     
			FROM     
				(     
				SELECT         
					enc.numero     
					,enc.nombre     
					,enc.payroll_rel_action_id     
					,enc.process_id     
					,ded.tipodeduccion     
					,ded.clave       
                    ,ded.cantidad	--cantidad				    
					,ded.descripcion           
					,ded.importeexento         
					,ded.importegravado        
					,ded.importe  					    
					,elem.clave clave_all     
					,enc.totalgravado_ded     
					,enc.totalexento_ded     
				FROM  	     
					xxtoks_pay_ati_header      enc     
					,xxtoks_pay_ati_lines_ded   ded     
					,(       
						SELECT DISTINCT clave,process_id     
						FROM xxtoks_pay_ati_lines_ded     
						WHERE process_id = p_process_id) elem     
				WHERE     1 = 1     
					AND enc.process_id = p_process_id     
					--AND enc.numero = '128870'     
					AND enc.process_id = ded.process_id (+)     
					AND enc.payroll_rel_action_id = ded.payroll_rel_action_id (+)     
					AND ded.clave (+) = elem.clave     
				ORDER BY elem.clave ASC   --alegaspi  07/01/2021    
				)deduc     
			GROUP BY     
				deduc.numero     
				,deduc.nombre     
				,deduc.payroll_rel_action_id     
				,deduc.process_id     
				,deduc.totalgravado_ded     
				,deduc.totalexento_ded     
			)    
			/*     
			---------------------------------------------+ HORAS EXTRAS     
			,xxtoks_pay_ati_hrs AS (     
			SELECT     
				hora.numero     
				,hora.nombre     
				,hora.payroll_rel_action_id     
				,hora.process_id      
				,LISTAGG('|'||hora.dias||'|'||hora.tipohoras||'|'||hora.horasextra||'|'||hora.importe,'|') WITHIN GROUP (ORDER BY hora.tipohoras_all DESC) contenido_hrs     
				,COUNT(hora.tipohoras_all) total_hrs     
			FROM     
				(     
				SELECT         
					enc.numero     
					,enc.nombre     
					,enc.payroll_rel_action_id     
					,enc.process_id     
					,hrs.dias     
					,hrs.tipohoras     
					,hrs.horasextra     
					,hrs.importe            
					,hextra.tipohoras tipohoras_all     
				FROM  	     
					xxtoks_pay_ati_header      enc     
					,xxtoks_pay_ati_lines_hextra hrs     
					,(       
						SELECT DISTINCT tipohoras,process_id     
						FROM xxtoks_pay_ati_lines_hextra     
						WHERE process_id = p_process_id) hextra     
				WHERE     1 = 1     
					AND enc.process_id = p_process_id     
					--AND enc.numero IN ('159745','155894')     
					AND enc.process_id = hrs.process_id (+)     
					AND enc.payroll_rel_action_id = hrs.payroll_rel_action_id (+)     
					AND hrs.tipohoras (+) = hextra.tipohoras     
				ORDER BY hextra.tipohoras DESC     
				)hora     
			GROUP BY     
				hora.numero     
				,hora.nombre     
				,hora.payroll_rel_action_id     
				,hora.process_id     
			)     
			---------------------------------------------+ INCIDENTES     
            ,xx_inc_reales AS(    
                            SELECT    enc.numero     
                                    , enc.nombre     
                                    , enc.payroll_rel_action_id     
                                    , enc.process_id     
                                    , inc.dias       
                                    , inc.tipoincapacidad     
                                    , inc.descuento    
                            FROM      xxtoks_pay_ati_header enc     
                                    , xxtoks_pay_ati_lines_inc  inc    
                            WHERE     1 = 1    
                            AND       enc.payroll_rel_action_id = inc.payroll_rel_action_id    
                            AND       enc.process_id = inc.process_id    
                            AND       enc.process_id = p_process_id    
                            --AND       enc.numerorecibo = 395    
                          )    
			,xxtoks_pay_ati_incidentes AS(     
                SELECT    incap.numero     
                        , incap.nombre     
                        , incap.payroll_rel_action_id     
                        , incap.process_id      
                        , LISTAGG('|'||incap.dias||'|'||incap.tipoincapacidad||'|'||incap.descuento) WITHIN GROUP (ORDER BY incap.tipoinca_all DESC) contenido_inc     
                        , COUNT(incap.tipoinca_all) total_inc    
                FROM      (    
                            SELECT    inc_totales.numero     
                                    , inc_totales.nombre     
                                    , inc_totales.payroll_rel_action_id     
                                    , inc_totales.process_id     
                                    , NVL(xx_inc_reales.dias, 0) dias       
                                    , inc_totales.tipoincapacidad     
                                    , NVL(xx_inc_reales.descuento, 0 ) descuento    
                                    , inc_totales.tipoincapacidad tipoinca_all    
                            FROM      xx_inc_reales    
                                    , (    
                                        SELECT    DISTINCT inc_empleados.numero    
                                                , inc_empleados.nombre    
                                                , inc_empleados.payroll_rel_action_id    
                                                , inc_empleados.process_id    
                                                , inc.tipoincapacidad    
                                        FROM      xx_inc_reales inc_empleados    
                                                , (    
                                                    SELECT    DISTINCT tipoincapacidad    
                                                            , process_id    
                                                    FROM      xxtoks_pay_ati_lines_inc      
                                                    WHERE     1 = 1    
                                                    AND       process_id = p_process_id    
                                                  ) inc    
                                        WHERE     1 = 1    
                                        AND       inc_empleados.process_id = inc.process_id    
                                      ) inc_totales    
                            WHERE     1 = 1    
                            AND       xx_inc_reales.numero(+) = inc_totales.numero    
                            AND       xx_inc_reales.payroll_rel_action_id(+) = inc_totales.payroll_rel_action_id    
                            AND       xx_inc_reales.process_id(+) = inc_totales.process_id    
                            AND       xx_inc_reales.tipoincapacidad(+) = inc_totales.tipoincapacidad    
                          ) incap    
                WHERE     1 = 1    
                GROUP BY  incap.numero     
                        , incap.nombre     
                        , incap.payroll_rel_action_id     
                        , incap.process_id     
			)     
			*/    
            ,xxtoks_pay_ati AS (     
			SELECT      
				 perc.numero     
                ,perc.numerorecibo       
				,perc.nombre     
				,perc.payroll_rel_action_id     
				,perc.process_id     
				--,perc.total_per     
				--,perc.contenido_per     
				--,dedu.total_ded     
				--,dedu.contenido_ded     
				--,hors.total_hrs     
				--,hors.contenido_hrs     
				--,incid.total_inc     
				--,incid.contenido_inc     
				,dedu.totalgravado_ded     
				,dedu.totalexento_ded     
				,perc.leyenda    
				,perc.cabecero1				    
				,perc.contenido_per     
				,dedu.contenido_ded     
				--,hors.contenido_hrs     
				--,incid.contenido_inc      
				/*,RPAD(perc.contenido_per,LENGTH(perc.contenido_per)+(7*(l_max_perception - perc.total_per)),'|')contenido_per     
				,RPAD(dedu.contenido_ded,LENGTH(dedu.contenido_ded)+(7*(l_max_deduction - dedu.total_ded)),'|')contenido_ded     
				,RPAD(hors.contenido_hrs,LENGTH(hors.contenido_hrs)+(4*(l_max_horas - hors.total_hrs)),'|')contenido_hrs     
				,RPAD(incid.contenido_inc,LENGTH(incid.contenido_inc)+(3*(l_max_inc - incid.total_inc)),'|')contenido_inc*/     
			FROM     
				xxtoks_pay_ati_percepciones perc     
                FULL OUTER JOIN xxtoks_pay_ati_deducciones  dedu     
                ON  perc.payroll_rel_action_id = dedu.payroll_rel_action_id AND perc.process_id = dedu.process_id      
                --FULL OUTER JOIN xxtoks_pay_ati_hrs          hors     
                --ON  perc.payroll_rel_action_id = hors.payroll_rel_action_id AND perc.process_id = hors.process_id     
                --FULL OUTER JOIN xxtoks_pay_ati_incidentes   incid     
                --ON  perc.payroll_rel_action_id = incid.payroll_rel_action_id AND perc.process_id = incid.process_id     
            )     
            SELECT      
				ati.numero     
				--,ati.numerorecibo     
				,ati.totalgravado_ded     
				,ati.totalexento_ded     
				,ati.cabecero1    
				--,ati.contenido_per||'|'||TO_CHAR(ati.totalgravado_ded)||'|'||TO_CHAR(ati.totalexento_ded)||'|'||ati.contenido_ded||ati.contenido_hrs||ati.contenido_inc||'|'||ati.leyenda AS contenido     
				,ati.contenido_per||'|'||TO_CHAR(ati.totalgravado_ded)||'|'||TO_CHAR(ati.totalexento_ded)||'|'||ati.contenido_ded||'|'||ati.leyenda AS contenido    
            FROM xxtoks_pay_ati ati    
            ORDER BY ati.numerorecibo;    
			    
			l_num_recibo NUMBER;    
                 
		BEGIN     
			--DBMS_OUTPUT.PUT_LINE('EMPIEZA...');     
     
			--v_contenido_cabe := '';     
			     
			v_contenido_cabe:=	'fechaliquidacion'||'|'||'anio'||'|'||'mes'||'|'||'numerorecibo'||'|'||'numrecibomes'||'|'||'diastrabajados'||'|'||'periodo'     
							||'|'||'fechainicialpago'||'|'||'fechafinalpago'||'|'||'sueldodiario'||'|'||'totalpercepciones'||'|'||'totaldeducciones'||'|'||'netopagado'||'|'||'totalDescuentos'     
							||'|'||'sdi'||'|'||'salariobasecotapor'||'|'||'fecha'||'|'||'metododepago'||'|'||'lugarexpedicion'||'|'||'tipodecambio'||'|'||'moneda'||'|'||'banco'     
							||'|'||'clavebanco'||'|'||'nomina'||'|'||'departamento'||'|'||'tipo'||'|'||'horasextra'||'|'||'pagonetomensual'||'|'||'pagonetoquincenal'||'|'||'numCuenta'     
							||'|'||'clabe'||'|'||'fechainiciorellaboral'||'|'||'antiguedadporsemana'||'|'||'tipocontrato'||'|'||'tipojornada'||'|'||'bimestre'||'|'||'cesantiavejez'||'|'||'retiro'     
							||'|'||'infonavit'||'|'||'valesdespensa'||'|'||'tipopago'||'|'||'numquincena'||'|'||'isrRetenidoAcumulado'||'|'||'percepcionGravableAcumulada'||'|'||'fondoDeAhorroDepositado'     
							||'|'||'numeroSucursal'||'|'||'tipoSegmentoNomina'||'|'||'rfc_patron'||'|'||'nombre_patron'||'|'||'registropatronal'||'|'||'regimenfiscal'||'|'||'calle'||'|'||'noexterior'     
							||'|'||'nointerior'||'|'||'colonia'||'|'||'localidad'||'|'||'referencia'||'|'||'municipio'||'|'||'estado'||'|'||'pais'||'|'||'codigopostal'||'|'||'rfc_emp'||'|'||'nombre_emp'     
							||'|'||'imss_emp'||'|'||'curp_emp'||'|'||'correo_emp'||'|'||'tiporegimen_emp'||'|'||'riesgopuesto_emp'||'|'||'numero_emp'||'|'||'puesto_emp'||'|'||'fechaingreso_emp'     
							||'|'||'jefedirecto_emp'||'|'||'correojefe_emp'||'|'||'Sueldos'||'|'||'separacion_indemnizacion'||'|'||'jubilacion_pension_retiro'     
							||'|'||'totalgravado_per'||'|'||'totalexento_per'||'|'||'otro_pagos'||'|'||'subsidio_causado';     
     
			BEGIN    
            WITH xxtoks_pay_ati_per_lines AS    
            (    
			    
			(    
            SELECT tipopercepcion         tipopercepcion,    
                   clave                  clave,    
            	   descripcion            descripcion,    
            	   importeexento          importeexento,    
            	   importegravado         importegravado,    
            	   importe                importe,    
            	   process_id             process_id,    
            	   payroll_rel_action_id  payroll_rel_action_id    
            FROM xxtoks_pay_ati_lines_per    
			)    
            UNION ALL    
			(    
            SELECT tipootropago           tipopercepcion,    
                   clave                  clave,    
            	   concepto               descripcion,    
            	   importe                importeexento,    
            	   null                   importegravado,    
            	   importe                importe,    
            	   process_id             process_id,    
            	   payroll_rel_action_id  payroll_rel_action_id    
            FROM xxtoks_pay_ati_lines_otrspagos    
			WHERE 1=1    
			AND importe > 0 --+alegaspi 31/05/2022    
			)    
			    
            )--NOTA: SE GENERO ESTA TABLA TEMP PARA OBTENER LOS OTROS PAGOS COMO PERCEPCIONES    
				SELECT COUNT(DISTINCT clave)     
				INTO l_max_perception     
				--FROM xxtoks_pay_ati_lines_per     
				FROM xxtoks_pay_ati_per_lines    
				WHERE process_id = p_process_id;                          
			EXCEPTION     
			WHEN OTHERS THEN      
				l_max_perception := 0;                            
			END;     
			--     
			BEGIN      
				SELECT COUNT(DISTINCT clave)     
				INTO l_max_deduction     
				FROM xxtoks_pay_ati_lines_ded     
				WHERE process_id = p_process_id;     
			EXCEPTION      
			WHEN OTHERS THEN      
				l_max_deduction := 0;     
			END;     
			--     
			BEGIN    --NOTA: NO DEVUELVE DATOS  PORQUE NO SE LLENA LA TABLA AL EJECUTAR LA PANTALLA     
				SELECT COUNT(DISTINCT tipohoras)     
				INTO l_max_horas     
				FROM xxtoks_pay_ati_lines_hextra     
				WHERE process_id = p_process_id;     
			EXCEPTION     
			WHEN OTHERS THEN      
				l_max_horas := 0;     
			END;     
			--     
			--BEGIN   --NOTA: SI DEVUELCE DATOS , COMO SE IMPLEMENTA, NO COINCIDE LA TABLA CON DEDUCCIONES Y PERCEPCIONES     
			--	SELECT COUNT(DISTINCT tipoincapacidad)     
			--	INTO l_max_inc     
			--	FROM xxtoks_pay_ati_lines_inc     
			--	WHERE process_id = p_process_id;	     
			--EXCEPTION     
			--WHEN OTHERS THEN      
			--	l_max_inc := 0;     
			--END;    
			--+    
            BEGIN           --NOTA: se agreg? para que imprima el cabecero de incapacidad    
			  SELECT COUNT(DIAS)    
			  INTO v_inc_contador    
			  FROM xxtoks_pay_ati_lines_inc    
			  WHERE process_id = p_process_id;    
			      
			  IF v_inc_contador > 0 THEN     
			     l_max_inc := 1;    
			  ELSE     
			     l_max_inc := 0;    
			  END IF;    
            EXCEPTION    
              WHEN OTHERS THEN    
                 l_max_inc := 0;			      
            END;   			    
			--+		      
			FOR x IN 1 .. l_max_perception LOOP     
				IF x = 1 THEN     
					l_per_enc := '|tipo_percep|clave_percep|cantidad|descripcion_percep|importe_exento_percep|importe_gravado_percep|importe_percep';      
				ELSE     
					l_per_enc := '|tipo_percep|clave_percep|cantidad|descripcion_percep|importe_exento_percep|importe_gravado_percep|importe_percep'||l_per_enc;     
				END IF;     
			END LOOP;	     
     
			FOR x IN 1 .. l_max_deduction LOOP     
				IF x = 1 THEN      
					l_ded_enc := '|tipo_dedu|clave_dedu|cantidad|descripcion_dedu|importe_exento_dedu|importe_gravado_dedu|importe_dedu';     
				ELSE      
					l_ded_enc := '|tipo_dedu|clave_dedu|cantidad|descripcion_dedu|importe_exento_dedu|importe_gravado_dedu|importe_dedu'||l_ded_enc;     
				END IF;     
			END LOOP;     
     
			/*    
			FOR x IN 1 .. l_max_horas LOOP     
				IF x = 1 THEN      
					l_hora_enc := '|dias|tipohoras|horasextra|importe';     
				ELSE     
					l_hora_enc := '|dias|tipohoras|horasextra|importe'||l_hora_enc;     
				END IF;     
			END LOOP;     
     
			FOR x IN 1 .. l_max_inc LOOP     
				IF x = 1 THEN     
					l_inc_enc := '|dias|tipoincapacidad|descuento';     
				ELSE     
					l_inc_enc := '|dias|tipoincapacidad|descuento'||l_inc_enc;     
				END IF;     
			END LOOP;     
            */    
					      
			--v_contenido_cabe :=  v_contenido_cabe||l_per_enc||'|'||'totalgravado_ded'||'|'||'totalexento_ded'||l_ded_enc||l_hora_enc||l_inc_enc||'|'||'Leyenda';    
			v_contenido_cabe :=  v_contenido_cabe||l_per_enc||'|'||'totalgravado_ded'||'|'||'totalexento_ded'||l_ded_enc||'|'||'Leyenda';     
			     
			v_contenido:= v_contenido_cabe;     
			       
			l_num_recibo:= 0;    
			FOR r_data IN c_xml_data LOOP     
			      
			    l_num_recibo:= l_num_recibo + 1;    
				--v_contenido:= v_contenido||CHR(10)||r_data.contenido;      
				/*IF l_max_perception > r_data.total_per THEN     
					FOR x IN r_data.total_per + 1 .. l_max_perception LOOP     
						l_per := l_per || '||||||';     
					END LOOP;     
				END IF;     
     
				IF l_max_deduction > r_data.total_ded THEN     
					 FOR x IN r_data.total_ded + 1 .. l_max_deduction LOOP     
						 l_ded := l_ded || '||||||';     
					 END LOOP;     
				END IF;     
     
				IF l_max_horas > r_data.total_hrs THEN     
					FOR x IN r_data.total_hrs + 1 .. l_max_horas LOOP     
						l_horas := l_horas || '||||';     
					END LOOP;     
				END IF;     
     
				IF l_max_inc > r_data.total_inc THEN     
					FOR x IN r_data.total_inc + 1 .. l_max_inc LOOP     
						l_incapacidad := l_incapacidad || '|||';     
					END LOOP;     
				END IF;     
     
				v_contenido:= v_contenido||CHR(10)||r_data.contenido_per||l_per||r_data.contenido_ded||l_ded||r_data.contenido_hrs||l_horas||r_data.contenido_inc||l_incapacidad||r_data.leyenda;*/     
     
				v_contenido:= v_contenido||CHR(10)||r_data.cabecero1||r_data.contenido;      
				     
			END LOOP;     
     
			INSERT INTO xxgrg_pay_cfdi_v2_clob_data2 (contenido,id)      
			VALUES(v_contenido,p_process_id);      
			--     
			--XXGRG_PAY_CFDI_V2_FILE_PKG.ac_data2(v_contenido, p_process_id );     
			--DBMS_OUTPUT.PUT_LINE('FIN');     
			--     
		EXCEPTION     
		WHEN OTHERS THEN     
			--     
			v_error := SQLERRM;     
			--     
			INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
													 , error     
													 , fecha     
													 , created_by     
													 , creation_date     
													 , last_updated_by     
													 , last_update_date     
													 , mensaje     
													 ) VALUES(  p_process_id     
															  , 'Ocurri? un error al construir el ATI:'||v_error     
															  , SYSDATE - 6/24     
															  , '-1'     
															  , SYSDATE - 6/24     
															  , '-1'     
															  , SYSDATE - 6/24     
															  , v_contenido     
															 );     
			--     
			     
			UPDATE xxgrg_recibo_cfdi_v2_process     
			SET status = 'ERROR'     
			,fecha_fin = SYSDATE - 6/24     
			WHERE process_id = p_process_id;      
			     
			--COMMIT;     
		END imprime_reporte_ati;    
    
		PROCEDURE imprime_reporte_ati_finq (p_process_id IN NUMBER )     
		IS     
			--p_process_id NUMBER:= 362;     
			--l_contador   NUMBER;     
			l_max_perception 	NUMBER;     
			l_max_deduction  	NUMBER;     
			l_max_perceptionf 	NUMBER;     
			l_max_deductionf  	NUMBER;     
			l_max_horas      	NUMBER;     
			l_max_inc        	NUMBER;     
     
			v_contenido_cabe 	CLOB;     
			v_contenido      	CLOB;		     
     
			l_per_enc        	VARCHAR2 (32767);     
			l_ded_enc        	VARCHAR2 (32767);     
			l_perf_enc        	VARCHAR2 (32767);     
			l_dedf_enc        	VARCHAR2 (32767);     
			l_hora_enc       	VARCHAR2 (32767);     
			l_inc_enc        	VARCHAR2 (32767);     
			v_error          	VARCHAR2 (32767);     
			    
			     
			--l_per            CLOB;       
			--l_ded            CLOB;     
			--l_horas          CLOB;     
			--l_incapacidad    CLOB;     
			v_inc_contador   NUMBER;    
			     
			CURSOR c_xml_data IS     
			WITH xxtoks_pay_ati_per_lines AS(--NOTA: SE GENERO ESTA TABLA TEMP PARA OBTENER LOS OTROS PAGOS COMO PERCEPCIONES    
			SELECT tipopercepcion         tipopercepcion,    
                   clave                  clave,    
            	   descripcion            descripcion,    
            	   importeexento          importeexento,    
            	   importegravado         importegravado,    
            	   importe                importe,    
            	   cantidad,    
            	   process_id             process_id,    
            	   payroll_rel_action_id  payroll_rel_action_id    
            FROM xxtoks_pay_ati_lines_per    
            UNION ALL    
            SELECT tipootropago           tipopercepcion,    
                   clave                  clave,    
            	   concepto               descripcion,    
            	   importe                importeexento,    
            	   null                   importegravado,    
            	   importe                importe,    
            	   null cantidad,    
            	   process_id             process_id,    
            	   payroll_rel_action_id  payroll_rel_action_id    
            FROM xxtoks_pay_ati_lines_otrspagos    
			)    
			---------------------------------------------+ PERCEPCIONES    
			,xxtoks_pay_ati_percepciones AS(      
			SELECT      
				 cabe.cabecero||'|'||LISTAGG(cabe.tipopercepcion||'|'||DECODE(cabe.tipopercepcion, NULL, '',cabe.clave)||'|'||cabe.cantidad||'|'||cabe.descripcion||'|'||cabe.importeexento||'|'||cabe.importegravado||'|'||cabe.importe,'|') WITHIN GROUP (ORDER BY cabe.clave_all ASC) contenido_per  --AQUI HAY QUE METER EL FILTRO PARA QUE NO TRAIGA LOS DE 0    
				,cabe.payroll_rel_action_id     
				,cabe.process_id     
				,cabe.numerorecibo     
				,cabe.numero     
				,cabe.nombre     
				,COUNT(cabe.clave_all) total_per     
				,cabe.leyenda     
				,cabe.cabecero1    
				,cabe.totalgravado_per     
				,cabe.totalexento_per     
				--,rownum    
			FROM     
			(     
				SELECT      
					head.fechaliquidacion||'|'||head.anio||'|'||head.mes||'|'||head.numerorecibo as cabecero1    
					,'|'||NULL||'|'||TO_CHAR(head.totaldiastrabajados)     
					||'|'||head.periodo||'|'||head.fechainicialpago||'|'||head.fechafinalpago||'|'||head.sueldodiario||'|'||TO_CHAR(head.totalpercepciones)||'|'||TO_CHAR(head.totaldeducciones)     
					||'|'||TO_CHAR(head.netopagado)||'|'||TO_CHAR(head.totaldescuentos)||'|'||TO_CHAR(head.sdi)||'|'||NULL||'|'||head.fecha||'|'||head.metododepago||'|'||head.lugarexpedicion||'|'||NULL     
					||'|'||NULL||'|'||NULL||'|'||NULL||'|'||head.nomina||'|'||NULL||'|'||head.tipo||'|'||TO_CHAR(head.horasextra)||'|'||NULL||'|'||NULL||'|'||head.numcuenta||'|'||head.clabe     
					||'|'||head.fechainiciorellaboral||'|'||head.antiguedadporsemana||'|'||head.tipocontrato -- default: 01     
					||'|'||NULL||'|'||NULL||'|'||NULL||'|'||NULL||'|'||NULL||'|'||NULL||'|'||head.tipopago||'|'||head.numquincena||'|'||TO_CHAR(head.isrretenidoacumulado)     
					||'|'||TO_CHAR(head.percepciongravableacumulada)||'|'||TO_CHAR(head.fondodeahorrodepositado)||'|'||head.numerosucursal||'|'||head.tiposegmentonomina||'|'||head.rfc_empresa     
					||'|'||head.nombre_empresa||'|'||head.registropatronal||'|'||head.regimenfiscal||'|'||head.calle_empresa||'|'||head.noexterior_empresa||'|'||head.nointerior_empresa     
					||'|'||head.colonia_empresa||'|'||head.localidad_empresa||'|'||NULL||'|'||head.municipio_empresa||'|'||head.estado_empresa||'|'||head.pais_empresa||'|'||head.codigopostal_empresa     
					||'|'||head.rfc||'|'||head.nombre||'|'||head.imss||'|'||head.curp||'|'||NVL (head.correo, 'dummy@toks.com.mx')||'|'||head.tiporegimen||'|'||head.riesgopuesto||'|'||head.numero     
					||'|'||TO_CHAR(head.puesto)||'|'||head.fechainiciorellaboral||'|'||head.jefedirecto||'|'||head.correojefe||'|'||TO_CHAR(head.totalsueldos)||'|'||TO_CHAR(head.totalseparacionindemnizacion)      
					--||'|'||TO_CHAR(head.totaljubilacionpensionretiro) ||'|'||TO_CHAR(head.totalgravado_per) ||'|'||TO_CHAR(head.totalexento_per) ||'|'||TO_CHAR(head.totalotrospagos)     
					||'|'||TO_CHAR(head.totaljubilacionpensionretiro) ||'|'||TO_CHAR(head.totalotrospagos)     
					||'|'||TO_CHAR(head.subsidiocausado) as cabecero     
    
					--||'|'||LISTAGG(per.tipopercepcion||'|'||per.clave||'|'||NULL||'|'||per.descripcion||'|'||per.importeexento||'|'||per.importegravado||'|'||per.importe,'|') WITHIN GROUP (ORDER BY per.clave DESC) contenido_per      
					,head.payroll_rel_action_id     
					,head.process_id     
					,head.numerorecibo     
					,head.numero     
					,head.nombre     
					,head.leyenda     
					,per.tipopercepcion --    
					,perc.clave          --     
					,per.descripcion    --      
					,per.importeexento  --      
					,per.importegravado --      
					,per.importe --    
					,per.cantidad    
					,perc.clave clave_all    
					,head.totalgravado_per     
					,head.totalexento_per      
				FROM     
					(     
						SELECT     
							--rownum numerorecibo     
							tmp.*     
						FROM     
						(     
							SELECT     
								enc.fechaliquidacion     
								,enc.anio     
								,enc.mes     
								,enc.numrecibomes     
								,enc.periodo     
								,enc.fechainicialpago     
								,enc.fechafinalpago     
								,enc.sueldodiario     
								,(SELECT MAX(hfecha.fecha)    
									FROM xxtoks_pay_ati_header hfecha    
									WHERE 1=1    
									AND hfecha.process_id = p_process_id)  fecha  --+alegaspi 06/01/2021    
								--,enc.fecha     
								,enc.metododepago     
								,enc.lugarexpedicion     
								,enc.tiponomina     
								,enc.banco     
								,enc.nomina     
								,enc.tipo     
								,enc.numcuenta     
								,enc.clabe     
								,enc.fechainiciorellaboral     
								,enc.antiguedadporsemana     
								,enc.tipopago     
								,enc.numquincena     
								,enc.numerosucursal     
								,enc.tiposegmentonomina     
								,enc.rfc_empresa     
								,enc.nombre_empresa     
								,enc.registropatronal     
								,enc.regimenfiscal     
								,enc.calle_empresa     
								,enc.noexterior_empresa     
								,enc.nointerior_empresa     
								,enc.colonia_empresa     
								,enc.localidad_empresa     
								,enc.municipio_empresa     
								,enc.estado_empresa     
								,enc.pais_empresa     
								,enc.codigopostal_empresa     
								,enc.nombre     
								,enc.rfc     
								,enc.imss     
								,enc.curp     
								,enc.correo     
								,enc.tiporegimen     
								,enc.tipocontrato     
								,enc.sindicalizado     
								,enc.riesgopuesto     
								,enc.periodicidadpago     
								,enc.claveentfed     
								,enc.numero     
								,enc.jefedirecto                                                                
								,enc.correojefe      
								,enc.payroll_rel_action_id     
								,enc.totalpercepciones     
								,enc.totaldeducciones     
								,enc.netopagado     
								,enc.totaldescuentos     
								,enc.horasextra     
								,enc.isrretenidoacumulado     
								,enc.percepciongravableacumulada     
								,enc.fondodeahorrodepositado     
								,enc.totalsueldos     
								,enc.totalseparacionindemnizacion     
								,enc.totaljubilacionpensionretiro     
								,enc.totalgravado_per     
								,enc.totalexento_per     
								,enc.totalgravado_ded     
								,enc.totalexento_ded     
								,enc.totalotrospagos     
								,enc.subsidiocausado     
								,enc.puesto     
								,enc.leyenda     
								,enc.process_id     
								,enc.numerorecibo    
								--+     
								,(SELECT NVL(SUM(diastrabajados), 1)     
									FROM  xxtoks_pay_ati_lines_diastrab xpac     
									WHERE xpac.payroll_rel_action_id = enc.payroll_rel_action_id     
									AND xpac.process_id = p_process_id     
								) diastrabajados    
								, enc.totaldiastrabajados     
								--,(SELECT NVL(SUM(sdi), 1)     
								--	FROM  xxtoks_pay_ati_lines_sdi xpac     
								--	WHERE xpac.payroll_rel_action_id = enc.payroll_rel_action_id     
								--	AND xpac.process_id = p_process_id     
								--) sdi    
                                , nvl(( SELECT    sdi    
                                        FROM      grg_sdi_correctos_2021    
                                        WHERE     1 = 1    
                                        AND       estafeta = enc.numero    
                                        AND       periodo = (    
                                                                SELECT    periodo    
                                                                FROM      xxgrg_recibo_cfdi_v2_process    
                                                                WHERE     1 = 1    
                                                                AND       process_id = p_process_id    
                                                            )    
                                      /*    
                                      SELECT sdi    
                                      FROM grg_sdi_correctos_p18_2021    
                                      WHERE 1 = 1    
                                      AND estafeta = enc.numero    
                                      AND ('18 2021 Weekly','NOMINA SEMANAL') = (    
                                                                                    SELECT    periodo    
                                                                                            , tipo_nomina    
                                                                                    FROM      xxgrg_recibo_cfdi_v2_process    
                                                                                    WHERE     1 = 1    
                                                                                    AND       process_id = p_process_id    
                                                                                )    
                                      UNION ALL    
                                      SELECT sdi    
                                      FROM grg_sdi_correctos_p19_2021    
                                      WHERE 1 = 1    
                                      AND estafeta = enc.numero    
                                      AND ('19 2021 Weekly','NOMINA SEMANAL') = (    
                                                                                    SELECT    periodo    
                                                                                            , tipo_nomina    
                                                                                    FROM      xxgrg_recibo_cfdi_v2_process    
                                                                                    WHERE     1 = 1    
                                                                                    AND       process_id = p_process_id    
                                                                                )    
                                      */    
                                      ), (SELECT NVL(SUM(sdi), 1)     
									                                FROM  xxtoks_pay_ati_lines_sdi xpac     
									                                WHERE xpac.payroll_rel_action_id = enc.payroll_rel_action_id     
									                                AND xpac.process_id = p_process_id     
								                                    )    
							          ) sdi  --+alegaspi 03/05/2021    
							FROM  	     
							xxtoks_pay_ati_header enc     
						)tmp     
					)head	      
					,xxtoks_pay_ati_per_lines   per     
					,(       
						SELECT DISTINCT clave,process_id     
						FROM xxtoks_pay_ati_per_lines     
						WHERE process_id = p_process_id) perc     
				WHERE     1 = 1     
					AND head.process_id = p_process_id     
					--AND head.numero IN ('93038','160673')      
					AND head.process_id = per.process_id (+)     
					AND head.payroll_rel_action_id = per.payroll_rel_action_id (+)     
					--AND per.clave = perc.clave	    
					AND per.clave (+) = perc.clave	    
					AND NOT EXISTS(    
									SELECT    1    
									FROM      xxgrg_elementos_finiquitos_ati xefa    
									WHERE     1 = 1    
									AND       xefa.element_name = perc.clave    
									)			    
				--ORDER BY head.numerorecibo,perc.clave ASC  --alegaspi 07/01/2021    
				ORDER BY perc.clave ASC  --alegaspi 07/01/2021    
			)cabe     
			GROUP BY     
				cabe.cabecero     
				,cabe.payroll_rel_action_id     
				,cabe.process_id     
				,cabe.numerorecibo     
				,cabe.cabecero1    
				,cabe.numero     
				,cabe.nombre     
				,cabe.leyenda    
				,cabe.totalgravado_per     
				,cabe.totalexento_per     
			ORDER BY cabe.numero    
			)     
			---------------------------------------------+ PERCEPCIONES_FINIQUITOS    
			,xxtoks_pay_ati_percepciones_fin AS(      
			SELECT  cabe.numero     
					,cabe.nombre     
					,cabe.payroll_rel_action_id     
					,cabe.process_id     
					,LISTAGG(cabe.tipopercepcion||'|'||DECODE(cabe.tipopercepcion,NULL,'',cabe.clave)||'|'||cabe.cantidad||'|'||cabe.descripcion||'|'||cabe.importeexento||'|'||cabe.importegravado||'|'||cabe.importe,'|') WITHIN GROUP (ORDER BY cabe.clave_all ASC) contenido_per  --AQUI HAY QUE METER EL FILTRO PARA QUE NO TRAIGA LOS DE 0    
					,COUNT(cabe.clave_all) total_per     
					,NVL(SUM(NVL(cabe.importeexento,0)), 0) totalexento_perf    
					,NVL(SUM(NVL(cabe.importegravado,0)), 0) totalgravado_perf    
					,NVL(cabe.totalgravado_per, 0) totalgravado_per    
					,NVL(cabe.totalexento_per, 0) totalexento_per    
					--,rownum    
			FROM 	(SELECT  enc.numero     
							,enc.nombre     
							,enc.payroll_rel_action_id     
							,enc.process_id     
							,per.tipopercepcion     
							,perc.clave       
							,per.cantidad	--cantidad				    
							,per.descripcion           
							,per.importeexento         
							,per.importegravado        
							,per.importe  					    
							,perc.clave clave_all     
							,enc.totalgravado_per     
							,enc.totalexento_per     
					FROM     xxtoks_pay_ati_header      enc     
							,xxtoks_pay_ati_per_lines   per     
							,(       
								SELECT DISTINCT clave,process_id     
								FROM xxtoks_pay_ati_per_lines     
								WHERE process_id = p_process_id) perc     
					WHERE     1 = 1     
						AND enc.process_id = p_process_id     
						--AND head.numero IN ('93038','160673')      
						AND enc.process_id = per.process_id (+)     
						AND enc.payroll_rel_action_id = per.payroll_rel_action_id (+)     
						--AND per.clave = perc.clave		    
						AND per.clave (+) = perc.clave		    
						AND EXISTS  (    
								SELECT    1    
								FROM      xxgrg_elementos_finiquitos_ati xefa    
								WHERE     1 = 1    
								AND       xefa.element_name = perc.clave    
								)		    
					--ORDER BY head.numerorecibo,perc.clave ASC  --alegaspi 07/01/2021    
					ORDER BY perc.clave ASC  --alegaspi 07/01/2021    
				)cabe     
			GROUP BY     
				cabe.numero     
				,cabe.nombre     
				,cabe.payroll_rel_action_id     
				,cabe.process_id     
				,cabe.totalgravado_per     
				,cabe.totalexento_per     
			ORDER BY cabe.numero    
			)     
			---------------------------------------------+ DEDUCCIONES     
			,xxtoks_pay_ati_deducciones AS(	     
			SELECT     
				deduc.numero     
				,deduc.nombre     
				,deduc.payroll_rel_action_id     
				,deduc.process_id      
				,LISTAGG(deduc.tipodeduccion||'|'||DECODE(deduc.tipodeduccion,NULL,'',deduc.clave)||'|'||deduc.cantidad||'|'||deduc.descripcion||'|'||deduc.importeexento||'|'||deduc.importegravado||'|'||deduc.importe,'|') WITHIN GROUP (ORDER BY deduc.clave_all ASC) contenido_ded     
				,COUNT(deduc.clave_all) total_ded     
				,NVL(deduc.totalgravado_ded, 0) totalgravado_ded    
				,NVL(deduc.totalexento_ded, 0) totalexento_ded    
			FROM     
				(     
				SELECT         
					enc.numero     
					,enc.nombre     
					,enc.payroll_rel_action_id     
					,enc.process_id     
					,ded.tipodeduccion     
					,elem.clave       
                    ,ded.cantidad	--cantidad				    
					,ded.descripcion           
					,ded.importeexento         
					,ded.importegravado        
					,ded.importe  					    
					,elem.clave clave_all     
					,enc.totalgravado_ded     
					,enc.totalexento_ded     
				FROM  	     
					xxtoks_pay_ati_header      enc     
					,xxtoks_pay_ati_lines_ded   ded     
					,(       
						SELECT DISTINCT clave,process_id     
						FROM xxtoks_pay_ati_lines_ded     
						WHERE process_id = p_process_id) elem     
				WHERE     1 = 1     
					AND enc.process_id = p_process_id     
					--AND enc.numero = '128870'     
					AND enc.process_id = ded.process_id (+)     
					AND enc.payroll_rel_action_id = ded.payroll_rel_action_id (+)     
					--AND ded.clave = elem.clave 	    
					AND ded.clave (+) = elem.clave 	    
					AND NOT EXISTS(    
									SELECT    1    
									FROM      xxgrg_elementos_finiquitos_ati xefa    
									WHERE     1 = 1    
									AND       xefa.element_name = elem.clave    
									)    
				ORDER BY elem.clave ASC   --alegaspi  07/01/2021    
				)deduc     
			GROUP BY     
				deduc.numero     
				,deduc.nombre     
				,deduc.payroll_rel_action_id     
				,deduc.process_id     
				,deduc.totalgravado_ded     
				,deduc.totalexento_ded     
			)    
			---------------------------------------------+ DEDUCCIONES_FINIQUITOS    
			,xxtoks_pay_ati_deducciones_fin AS(	     
			SELECT     
				deduc.numero     
				,deduc.nombre     
				,deduc.payroll_rel_action_id     
				,deduc.process_id      
				,LISTAGG(deduc.tipodeduccion||'|'||DECODE(deduc.tipodeduccion,NULL,'',deduc.clave)||'|'||deduc.cantidad||'|'||deduc.descripcion||'|'||deduc.importeexento||'|'||deduc.importegravado||'|'||deduc.importe,'|') WITHIN GROUP (ORDER BY deduc.clave_all ASC) contenido_ded     
				,COUNT(deduc.clave_all) total_ded     
				,NVL(SUM(NVL(deduc.importeexento,0)), 0) totalexento_dedf    
				,NVL(SUM(NVL(deduc.importegravado,0)), 0) totalgravado_dedf    
				,NVL(deduc.totalgravado_ded , 0) totalgravado_ded    
				,NVL(deduc.totalexento_ded , 0) totalexento_ded    
			FROM     
				(     
				SELECT         
					enc.numero     
					,enc.nombre     
					,enc.payroll_rel_action_id     
					,enc.process_id     
					,ded.tipodeduccion     
					,elem.clave       
                    ,ded.cantidad	--cantidad				    
					,ded.descripcion           
					,ded.importeexento         
					,ded.importegravado        
					,ded.importe  					    
					,elem.clave clave_all     
					,enc.totalgravado_ded     
					,enc.totalexento_ded     
				FROM  	     
					xxtoks_pay_ati_header      enc     
					,xxtoks_pay_ati_lines_ded   ded     
					,(       
						SELECT DISTINCT clave,process_id     
						FROM xxtoks_pay_ati_lines_ded     
						WHERE process_id = p_process_id) elem     
				WHERE     1 = 1     
					AND enc.process_id = p_process_id     
					--AND enc.numero = '128870'     
					AND enc.process_id = ded.process_id (+)     
					AND enc.payroll_rel_action_id = ded.payroll_rel_action_id (+)     
					--AND ded.clave = elem.clave     
					AND ded.clave (+) = elem.clave     
					AND EXISTS  (    
								SELECT    1    
								FROM      xxgrg_elementos_finiquitos_ati xefa    
								WHERE     1 = 1    
								AND       xefa.element_name = elem.clave    
								)    
				ORDER BY elem.clave ASC   --alegaspi  07/01/2021    
				)deduc     
			GROUP BY     
				deduc.numero     
				,deduc.nombre     
				,deduc.payroll_rel_action_id     
				,deduc.process_id     
				,deduc.totalgravado_ded     
				,deduc.totalexento_ded     
			)    
			/*     
			---------------------------------------------+ HORAS EXTRAS     
			,xxtoks_pay_ati_hrs AS (     
			SELECT     
				hora.numero     
				,hora.nombre     
				,hora.payroll_rel_action_id     
				,hora.process_id      
				,LISTAGG('|'||hora.dias||'|'||hora.tipohoras||'|'||hora.horasextra||'|'||hora.importe,'|') WITHIN GROUP (ORDER BY hora.tipohoras_all DESC) contenido_hrs     
				,COUNT(hora.tipohoras_all) total_hrs     
			FROM     
				(     
				SELECT         
					enc.numero     
					,enc.nombre     
					,enc.payroll_rel_action_id     
					,enc.process_id     
					,hrs.dias     
					,hrs.tipohoras     
					,hrs.horasextra     
					,hrs.importe            
					,hextra.tipohoras tipohoras_all     
				FROM  	     
					xxtoks_pay_ati_header      enc     
					,xxtoks_pay_ati_lines_hextra hrs     
					,(       
						SELECT DISTINCT tipohoras,process_id     
						FROM xxtoks_pay_ati_lines_hextra     
						WHERE process_id = p_process_id) hextra     
				WHERE     1 = 1     
					AND enc.process_id = p_process_id     
					--AND enc.numero IN ('159745','155894')     
					AND enc.process_id = hrs.process_id (+)     
					AND enc.payroll_rel_action_id = hrs.payroll_rel_action_id (+)     
					AND hrs.tipohoras (+) = hextra.tipohoras     
				ORDER BY hextra.tipohoras DESC     
				)hora     
			GROUP BY     
				hora.numero     
				,hora.nombre     
				,hora.payroll_rel_action_id     
				,hora.process_id     
			)     
			---------------------------------------------+ INCIDENTES     
            ,xx_inc_reales AS(    
                            SELECT    enc.numero     
                                    , enc.nombre     
                                    , enc.payroll_rel_action_id     
                                    , enc.process_id     
                                    , inc.dias       
                                    , inc.tipoincapacidad     
                                    , inc.descuento    
                            FROM      xxtoks_pay_ati_header enc     
                                    , xxtoks_pay_ati_lines_inc  inc    
                            WHERE     1 = 1    
                            AND       enc.payroll_rel_action_id = inc.payroll_rel_action_id    
                            AND       enc.process_id = inc.process_id    
                            AND       enc.process_id = p_process_id    
                            --AND       enc.numerorecibo = 395    
                          )    
			,xxtoks_pay_ati_incidentes AS(     
                SELECT    incap.numero     
                        , incap.nombre     
                        , incap.payroll_rel_action_id     
                        , incap.process_id      
                        , LISTAGG('|'||incap.dias||'|'||incap.tipoincapacidad||'|'||incap.descuento) WITHIN GROUP (ORDER BY incap.tipoinca_all DESC) contenido_inc     
                        , COUNT(incap.tipoinca_all) total_inc    
                FROM      (    
                            SELECT    inc_totales.numero     
                                    , inc_totales.nombre     
                                    , inc_totales.payroll_rel_action_id     
                                    , inc_totales.process_id     
                                    , NVL(xx_inc_reales.dias, 0) dias       
                                    , inc_totales.tipoincapacidad     
                                    , NVL(xx_inc_reales.descuento, 0 ) descuento    
                                    , inc_totales.tipoincapacidad tipoinca_all    
                            FROM      xx_inc_reales    
                                    , (    
                                        SELECT    DISTINCT inc_empleados.numero    
                                                , inc_empleados.nombre    
                                                , inc_empleados.payroll_rel_action_id    
                                                , inc_empleados.process_id    
                                                , inc.tipoincapacidad    
                                        FROM      xx_inc_reales inc_empleados    
                                                , (    
                                                    SELECT    DISTINCT tipoincapacidad    
                                                            , process_id    
                                                    FROM      xxtoks_pay_ati_lines_inc      
                                                    WHERE     1 = 1    
                                                    AND       process_id = p_process_id    
                                                  ) inc    
                                        WHERE     1 = 1    
                                        AND       inc_empleados.process_id = inc.process_id    
                                      ) inc_totales    
                            WHERE     1 = 1    
                            AND       xx_inc_reales.numero(+) = inc_totales.numero    
                            AND       xx_inc_reales.payroll_rel_action_id(+) = inc_totales.payroll_rel_action_id    
                            AND       xx_inc_reales.process_id(+) = inc_totales.process_id    
                            AND       xx_inc_reales.tipoincapacidad(+) = inc_totales.tipoincapacidad    
                          ) incap    
                WHERE     1 = 1    
                GROUP BY  incap.numero     
                        , incap.nombre     
                        , incap.payroll_rel_action_id     
                        , incap.process_id     
			)     
			*/    
            ,xxtoks_pay_ati AS (     
			SELECT      
				 perc.numero     
                ,perc.numerorecibo       
				,perc.nombre     
				,perc.payroll_rel_action_id     
				,perc.process_id     
				--,perc.total_per     
				--,perc.contenido_per     
				--,dedu.total_ded     
				--,dedu.contenido_ded     
				--,hors.total_hrs     
				--,hors.contenido_hrs     
				--,incid.total_inc     
				--,incid.contenido_inc     
				,dedu.totalgravado_ded     
				,dedu.totalexento_ded     
				,perc.totalgravado_per     
				,perc.totalexento_per    
				,percf.totalexento_perf    
				,percf.totalgravado_perf    
				,deduf.totalexento_dedf    
				,deduf.totalgravado_dedf    
				,perc.leyenda    
				,perc.cabecero1				    
				,perc.contenido_per     
				,dedu.contenido_ded     
				,percf.contenido_per AS contenido_perf    
				,deduf.contenido_ded AS contenido_dedf    
				--,hors.contenido_hrs     
				--,incid.contenido_inc      
				/*,RPAD(perc.contenido_per,LENGTH(perc.contenido_per)+(7*(l_max_perception - perc.total_per)),'|')contenido_per     
				,RPAD(dedu.contenido_ded,LENGTH(dedu.contenido_ded)+(7*(l_max_deduction - dedu.total_ded)),'|')contenido_ded     
				,RPAD(hors.contenido_hrs,LENGTH(hors.contenido_hrs)+(4*(l_max_horas - hors.total_hrs)),'|')contenido_hrs     
				,RPAD(incid.contenido_inc,LENGTH(incid.contenido_inc)+(3*(l_max_inc - incid.total_inc)),'|')contenido_inc*/     
			FROM     
				xxtoks_pay_ati_percepciones perc     
                FULL OUTER JOIN xxtoks_pay_ati_deducciones  dedu     
                ON  perc.payroll_rel_action_id = dedu.payroll_rel_action_id AND perc.process_id = dedu.process_id    
				 FULL OUTER JOIN xxtoks_pay_ati_percepciones_fin  percf     
                ON  perc.payroll_rel_action_id = percf.payroll_rel_action_id AND perc.process_id = percf.process_id      
				 FULL OUTER JOIN xxtoks_pay_ati_deducciones_fin  deduf    
                ON  perc.payroll_rel_action_id = deduf.payroll_rel_action_id AND perc.process_id = deduf.process_id      
                --FULL OUTER JOIN xxtoks_pay_ati_hrs          hors     
                --ON  perc.payroll_rel_action_id = hors.payroll_rel_action_id AND perc.process_id = hors.process_id     
                --FULL OUTER JOIN xxtoks_pay_ati_incidentes   incid     
                --ON  perc.payroll_rel_action_id = incid.payroll_rel_action_id AND perc.process_id = incid.process_id     
            )     
            SELECT      
				ati.numero     
				--,ati.numerorecibo     
				,ati.totalgravado_ded     
				,ati.totalexento_ded     
				,ati.cabecero1    
				--,ati.contenido_per||'|'||TO_CHAR(ati.totalgravado_ded)||'|'||TO_CHAR(ati.totalexento_ded)||'|'||ati.contenido_ded||ati.contenido_hrs||ati.contenido_inc||'|'||ati.leyenda AS contenido     
				--,ati.contenido_per||'|'||ati.contenido_ded||'|'||TO_CHAR(ati.totalgravado_ded)||'|'||TO_CHAR(ati.totalexento_ded)||'|'||TO_CHAR(ati.totalgravado_per)||'|'||TO_CHAR(ati.totalexento_per)||'|'||ati.contenido_perf||'|'||ati.contenido_dedf||'|'||ati.leyenda AS contenido    
				,ati.contenido_per||'|'||TO_CHAR((NVL(ati.totalgravado_per, 0) - NVL(ati.totalgravado_perf, 0)))||'|'||TO_CHAR((NVL(ati.totalexento_per, 0) - NVL(ati.totalexento_perf, 0)))||'|'||ati.contenido_ded||'|'||TO_CHAR((NVL(ati.totalgravado_ded, 0) - NVL(ati.totalgravado_dedf, 0)))||'|'||TO_CHAR((NVL(ati.totalexento_ded, 0) - NVL(ati.totalexento_dedf, 0)))||'|'||ati.contenido_perf||'|'||TO_CHAR(ati.totalgravado_perf)||'|'||TO_CHAR(ati.totalexento_perf)||'|'||ati.contenido_dedf||'|'||TO_CHAR(ati.totalgravado_dedf)||'|'||TO_CHAR(ati.totalexento_dedf)||'|'||ati.leyenda AS contenido    
            FROM xxtoks_pay_ati ati    
            ORDER BY ati.numerorecibo;    
			    
			l_num_recibo NUMBER;    
                 
		BEGIN     
			--DBMS_OUTPUT.PUT_LINE('EMPIEZA...');     
     
			--v_contenido_cabe := '';     
			     
			v_contenido_cabe:=	'fechaliquidacion'||'|'||'anio'||'|'||'mes'||'|'||'numerorecibo'||'|'||'numrecibomes'||'|'||'diastrabajados'||'|'||'periodo'     
							||'|'||'fechainicialpago'||'|'||'fechafinalpago'||'|'||'sueldodiario'||'|'||'totalpercepciones'||'|'||'totaldeducciones'||'|'||'netopagado'||'|'||'totalDescuentos'     
							||'|'||'sdi'||'|'||'salariobasecotapor'||'|'||'fecha'||'|'||'metododepago'||'|'||'lugarexpedicion'||'|'||'tipodecambio'||'|'||'moneda'||'|'||'banco'     
							||'|'||'clavebanco'||'|'||'nomina'||'|'||'departamento'||'|'||'tipo'||'|'||'horasextra'||'|'||'pagonetomensual'||'|'||'pagonetoquincenal'||'|'||'numCuenta'     
							||'|'||'clabe'||'|'||'fechainiciorellaboral'||'|'||'antiguedadporsemana'||'|'||'tipocontrato'||'|'||'tipojornada'||'|'||'bimestre'||'|'||'cesantiavejez'||'|'||'retiro'     
							||'|'||'infonavit'||'|'||'valesdespensa'||'|'||'tipopago'||'|'||'numquincena'||'|'||'isrRetenidoAcumulado'||'|'||'percepcionGravableAcumulada'||'|'||'fondoDeAhorroDepositado'     
							||'|'||'numeroSucursal'||'|'||'tipoSegmentoNomina'||'|'||'rfc_patron'||'|'||'nombre_patron'||'|'||'registropatronal'||'|'||'regimenfiscal'||'|'||'calle'||'|'||'noexterior'     
							||'|'||'nointerior'||'|'||'colonia'||'|'||'localidad'||'|'||'referencia'||'|'||'municipio'||'|'||'estado'||'|'||'pais'||'|'||'codigopostal'||'|'||'rfc_emp'||'|'||'nombre_emp'     
							||'|'||'imss_emp'||'|'||'curp_emp'||'|'||'correo_emp'||'|'||'tiporegimen_emp'||'|'||'riesgopuesto_emp'||'|'||'numero_emp'||'|'||'puesto_emp'||'|'||'fechaingreso_emp'     
							||'|'||'jefedirecto_emp'||'|'||'correojefe_emp'||'|'||'Sueldos'||'|'||'separacion_indemnizacion'||'|'||'jubilacion_pension_retiro'     
							--||'|'||'totalgravado_per'||'|'||'totalexento_per'||'|'||'otro_pagos'||'|'||'subsidio_causado';     
							||'|'||'otro_pagos'||'|'||'subsidio_causado';     
     
			BEGIN    
            WITH xxtoks_pay_ati_per_lines AS    
            (    
            SELECT tipopercepcion         tipopercepcion,    
                   clave                  clave,    
            	   descripcion            descripcion,    
            	   importeexento          importeexento,    
            	   importegravado         importegravado,    
            	   importe                importe,    
            	   process_id             process_id,    
            	   payroll_rel_action_id  payroll_rel_action_id    
            FROM xxtoks_pay_ati_lines_per    
            UNION ALL    
            SELECT tipootropago           tipopercepcion,    
                   clave                  clave,    
            	   concepto               descripcion,    
            	   importe                importeexento,    
            	   null                   importegravado,    
            	   importe                importe,    
            	   process_id             process_id,    
            	   payroll_rel_action_id  payroll_rel_action_id    
            FROM xxtoks_pay_ati_lines_otrspagos    
            )--NOTA: SE GENERO ESTA TABLA TEMP PARA OBTENER LOS OTROS PAGOS COMO PERCEPCIONES    
				SELECT 	COUNT(DISTINCT xpapl.clave)     
				INTO 	l_max_perception     
				--FROM xxtoks_pay_ati_lines_per     
				FROM 	xxtoks_pay_ati_per_lines xpapl    
				WHERE 	xpapl.process_id = p_process_id                          
						AND NOT EXISTS	(    
										SELECT    1    
										FROM      xxgrg_elementos_finiquitos_ati xefa    
										WHERE     1 = 1    
										AND       xefa.element_name = xpapl.clave    
										);    
				    
				EXCEPTION     
				WHEN OTHERS THEN      
					l_max_perception := 0;                            
			END;     
			--     
			BEGIN      
				SELECT 	COUNT(DISTINCT xpald.clave)     
				INTO 	l_max_deduction     
				FROM 	xxtoks_pay_ati_lines_ded xpald    
				WHERE 	xpald.process_id = p_process_id    
						AND NOT EXISTS	(    
										SELECT    1    
										FROM      xxgrg_elementos_finiquitos_ati xefa    
										WHERE     1 = 1    
										AND       xefa.element_name = xpald.clave    
										);     
				    
				EXCEPTION      
				WHEN OTHERS THEN      
					l_max_deduction := 0;     
			END;     
			--    
			------------------------------------------------    
			--    
			BEGIN    
            WITH xxtoks_pay_ati_per_lines AS    
            (    
            SELECT tipopercepcion         tipopercepcion,    
                   clave                  clave,    
            	   descripcion            descripcion,    
            	   importeexento          importeexento,    
            	   importegravado         importegravado,    
            	   importe                importe,    
            	   process_id             process_id,    
            	   payroll_rel_action_id  payroll_rel_action_id    
            FROM xxtoks_pay_ati_lines_per    
            UNION ALL    
            SELECT tipootropago           tipopercepcion,    
                   clave                  clave,    
            	   concepto               descripcion,    
            	   importe                importeexento,    
            	   null                   importegravado,    
            	   importe                importe,    
            	   process_id             process_id,    
            	   payroll_rel_action_id  payroll_rel_action_id    
            FROM xxtoks_pay_ati_lines_otrspagos    
            )--NOTA: SE GENERO ESTA TABLA TEMP PARA OBTENER LOS OTROS PAGOS COMO PERCEPCIONES    
				SELECT 	COUNT(DISTINCT xpapl.clave)     
				INTO 	l_max_perceptionf    
				--FROM xxtoks_pay_ati_lines_per     
				FROM 	xxtoks_pay_ati_per_lines xpapl    
				WHERE 	xpapl.process_id = p_process_id    
						AND EXISTS	(    
									SELECT    1    
									FROM      xxgrg_elementos_finiquitos_ati xefa    
									WHERE     1 = 1    
									AND       xefa.element_name = xpapl.clave    
									);    
				    
				EXCEPTION     
				WHEN OTHERS THEN      
					l_max_perceptionf := 0;                            
			END;     
			--     
			BEGIN      
				SELECT 	COUNT(DISTINCT xpald.clave)     
				INTO 	l_max_deductionf     
				FROM 	xxtoks_pay_ati_lines_ded xpald    
				WHERE 	xpald.process_id = p_process_id    
						AND EXISTS	(    
									SELECT    1    
									FROM      xxgrg_elementos_finiquitos_ati xefa    
									WHERE     1 = 1    
									AND       xefa.element_name = xpald.clave    
									);    
				    
				EXCEPTION      
				WHEN OTHERS THEN      
					l_max_deductionf := 0;     
			END;     
			--     
			/*BEGIN    --NOTA: NO DEVUELVE DATOS  PORQUE NO SE LLENA LA TABLA AL EJECUTAR LA PANTALLA     
				SELECT COUNT(DISTINCT tipohoras)     
				INTO l_max_horas     
				FROM xxtoks_pay_ati_lines_hextra     
				WHERE process_id = p_process_id;     
				EXCEPTION     
				WHEN OTHERS THEN      
					l_max_horas := 0;     
			END;*/     
			--     
			--BEGIN   --NOTA: SI DEVUELCE DATOS , COMO SE IMPLEMENTA, NO COINCIDE LA TABLA CON DEDUCCIONES Y PERCEPCIONES     
			--	SELECT COUNT(DISTINCT tipoincapacidad)     
			--	INTO l_max_inc     
			--	FROM xxtoks_pay_ati_lines_inc     
			--	WHERE process_id = p_process_id;	     
			--EXCEPTION     
			--WHEN OTHERS THEN      
			--	l_max_inc := 0;     
			--END;    
			--+    
            /*BEGIN           --NOTA: se agreg? para que imprima el cabecero de incapacidad    
				SELECT COUNT(DIAS)    
				INTO v_inc_contador    
				FROM xxtoks_pay_ati_lines_inc    
				WHERE process_id = p_process_id;    
				    
				IF v_inc_contador > 0 THEN     
					l_max_inc := 1;    
				ELSE     
					l_max_inc := 0;    
				END IF;    
				EXCEPTION    
				WHEN OTHERS THEN    
					l_max_inc := 0;			      
            END;*/   			    
			--+		      
			FOR x IN 1 .. l_max_perception LOOP     
				IF x = 1 THEN     
					l_per_enc := '|tipo_percep|clave_percep|cantidad|descripcion_percep|importe_exento_percep|importe_gravado_percep|importe_percep';      
				ELSE     
					l_per_enc := '|tipo_percep|clave_percep|cantidad|descripcion_percep|importe_exento_percep|importe_gravado_percep|importe_percep'||l_per_enc;     
				END IF;     
			END LOOP;	     
     
			FOR x IN 1 .. l_max_deduction LOOP     
				IF x = 1 THEN      
					l_ded_enc := '|tipo_dedu|clave_dedu|cantidad|descripcion_dedu|importe_exento_dedu|importe_gravado_dedu|importe_dedu';     
				ELSE      
					l_ded_enc := '|tipo_dedu|clave_dedu|cantidad|descripcion_dedu|importe_exento_dedu|importe_gravado_dedu|importe_dedu'||l_ded_enc;     
				END IF;     
			END LOOP;     
    
			FOR x IN 1 .. l_max_perceptionf LOOP     
				IF x = 1 THEN     
					l_perf_enc := '|tipo_percep|clave_percep|cantidad|descripcion_percep|importe_exento_percep|importe_gravado_percep|importe_percep';      
				ELSE     
					l_perf_enc := '|tipo_percep|clave_percep|cantidad|descripcion_percep|importe_exento_percep|importe_gravado_percep|importe_percep'||l_perf_enc;     
				END IF;     
			END LOOP;	     
     
			FOR x IN 1 .. l_max_deductionf LOOP     
				IF x = 1 THEN      
					l_dedf_enc := '|tipo_dedu|clave_dedu|cantidad|descripcion_dedu|importe_exento_dedu|importe_gravado_dedu|importe_dedu';     
				ELSE      
					l_dedf_enc := '|tipo_dedu|clave_dedu|cantidad|descripcion_dedu|importe_exento_dedu|importe_gravado_dedu|importe_dedu'||l_dedf_enc;     
				END IF;     
			END LOOP;     
     
			/*    
			FOR x IN 1 .. l_max_horas LOOP     
				IF x = 1 THEN      
					l_hora_enc := '|dias|tipohoras|horasextra|importe';     
				ELSE     
					l_hora_enc := '|dias|tipohoras|horasextra|importe'||l_hora_enc;     
				END IF;     
			END LOOP;     
     
			FOR x IN 1 .. l_max_inc LOOP     
				IF x = 1 THEN     
					l_inc_enc := '|dias|tipoincapacidad|descuento';     
				ELSE     
					l_inc_enc := '|dias|tipoincapacidad|descuento'||l_inc_enc;     
				END IF;     
			END LOOP;     
            */    
					      
			--v_contenido_cabe :=  v_contenido_cabe||l_per_enc||'|'||'totalgravado_ded'||'|'||'totalexento_ded'||l_ded_enc||l_hora_enc||l_inc_enc||'|'||'Leyenda';    
			v_contenido_cabe :=  v_contenido_cabe||l_per_enc||'|'||'totalgravado_per'||'|'||'totalexento_per'||l_ded_enc||'|'||'totalgravado_ded'||'|'||'totalexento_ded'||l_perf_enc||'|'||'totalgravado_per_fin'||'|'||'totalexento_per_fin'||l_dedf_enc||'|'||'totalgravado_ded_fin'||'|'||'totalexento_ded_fin'||'|'||'Leyenda';     
			     
			v_contenido:= v_contenido_cabe;     
			       
			l_num_recibo:= 0;    
			FOR r_data IN c_xml_data LOOP     
			      
			    l_num_recibo:= l_num_recibo + 1;    
				--v_contenido:= v_contenido||CHR(10)||r_data.contenido;      
				/*IF l_max_perception > r_data.total_per THEN     
					FOR x IN r_data.total_per + 1 .. l_max_perception LOOP     
						l_per := l_per || '||||||';     
					END LOOP;     
				END IF;     
     
				IF l_max_deduction > r_data.total_ded THEN     
					 FOR x IN r_data.total_ded + 1 .. l_max_deduction LOOP     
						 l_ded := l_ded || '||||||';     
					 END LOOP;     
				END IF;     
     
				IF l_max_horas > r_data.total_hrs THEN     
					FOR x IN r_data.total_hrs + 1 .. l_max_horas LOOP     
						l_horas := l_horas || '||||';     
					END LOOP;     
				END IF;     
     
				IF l_max_inc > r_data.total_inc THEN     
					FOR x IN r_data.total_inc + 1 .. l_max_inc LOOP     
						l_incapacidad := l_incapacidad || '|||';     
					END LOOP;     
				END IF;     
     
				v_contenido:= v_contenido||CHR(10)||r_data.contenido_per||l_per||r_data.contenido_ded||l_ded||r_data.contenido_hrs||l_horas||r_data.contenido_inc||l_incapacidad||r_data.leyenda;*/     
     
				v_contenido:= v_contenido||CHR(10)||r_data.cabecero1||r_data.contenido;      
				     
			END LOOP;     
     
			INSERT INTO xxgrg_pay_cfdi_v2_clob_data2 (contenido,id)      
			VALUES(v_contenido,p_process_id);      
			--     
			--XXGRG_PAY_CFDI_V2_FILE_PKG.ac_data2(v_contenido, p_process_id );     
			--DBMS_OUTPUT.PUT_LINE('FIN');     
			--     
		EXCEPTION     
		WHEN OTHERS THEN     
			--     
			v_error := SQLERRM;     
			--     
			INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
													 , error     
													 , fecha     
													 , created_by     
													 , creation_date     
													 , last_updated_by     
													 , last_update_date     
													 , mensaje     
													 ) VALUES(  p_process_id     
															  , 'Ocurri? un error al construir el ATI:'||v_error     
															  , SYSDATE - 6/24     
															  , '-1'     
															  , SYSDATE - 6/24     
															  , '-1'     
															  , SYSDATE - 6/24     
															  , v_contenido     
															 );     
			--     
			     
			UPDATE xxgrg_recibo_cfdi_v2_process     
			SET status = 'ERROR'     
			,fecha_fin = SYSDATE - 6/24     
			WHERE process_id = p_process_id;      
			     
			--COMMIT;     
		END imprime_reporte_ati_finq;    
		--+     
		PROCEDURE ac_data2(  p_contenido     IN CLOB      
							, p_process_id    IN NUMBER      
						  )      
		IS      
			--      
			v_ac_id NUMBER;      
			v_error VARCHAR2(500);     
			--      
		BEGIN      
			--      
			INSERT INTO xxgrg_pay_cfdi_v2_clob_data2     
			(       
				 contenido     
				,id      
			)      
			VALUES     
			(       
				p_contenido      
				,p_process_id      
			);      
     
			--COMMIT;      
     
		EXCEPTION      
		WHEN OTHERS THEN      
			--     
			v_error := SQLERRM;     
			--     
			INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
													 , error     
													 , fecha     
													 , created_by     
													 , creation_date     
													 , last_updated_by     
													 , last_update_date     
													 , mensaje     
													 ) VALUES(  p_process_id     
															  , 'Ocurri? un error al construir el ATI:'||v_error||'. xxgrg_pay_cfdi_v2_clob_data2'     
															  , SYSDATE - 6/24     
															  , '-1'     
															  , SYSDATE - 6/24     
															  , '-1'     
															  , SYSDATE - 6/24     
															  , 'ERROR AL GENERAR EL ARCHIVO DEL ATI'     
															 );     
															      
			UPDATE xxgrg_recibo_cfdi_v2_process     
			SET status = 'ERROR'     
			,fecha_fin = SYSDATE - 6/24     
			WHERE process_id = p_process_id;      
		END ac_data2;     
     
    PROCEDURE RETRY_ORG_ERR (p_process_id IN NUMBER)  
	IS     
		--     
		v_error             VARCHAR2(500);     
        --+  
        v_ids               VARCHAR2(512);  
        --+  
        v_val               NUMBER;  
        --+  
	BEGIN     
  
        SELECT  COUNT(*)  
        INTO    v_val  
        FROM    xxtoks_pay_ati_error_tracing  
        WHERE   process_id = p_process_id  
                AND ERROR LIKE 'Error al crear el XML2. ORG_ID:%' ; 
          
        WHILE v_val > 0 LOOP  
  
            FOR x IN (  
                SELECT  TO_NUMBER(TRIM(SUBSTR(ERROR,32,15))) AS id,id_error  
                FROM    xxtoks_pay_ati_error_tracing  
                WHERE   process_id = p_process_id  
                        AND ERROR LIKE 'Error al crear el XML2. ORG_ID:%'  
            ) LOOP  
                --  
                BEGIN  
                    --  
                    DELETE  xxtoks_pay_ati_error_tracing  
                    WHERE   process_id = p_process_id  
                            AND ERROR LIKE 'Error al crear el XML2. ORG_ID:%'  
                            AND id_error = x.id_error ; 
                    COMMIT;     
                    --  
                    SELECT  DISTINCT id  
                    INTO    v_ids   
                    FROM    xxtoks_pay_ati_organization     
                    WHERE   1 = 1     
                    AND     process_id = p_process_id  
                            AND organization_id = x.id;  
                    --       
                    pay.xxgrg_pay_cfdi_v2_file_pkg.get_result_values(  v_ids , v_ids );  
                    --  
                    EXCEPTION      
                    WHEN OTHERS THEN     
                        v_error := SQLERRM;     
                        INSERT INTO xxtoks_pay_ati_error_tracing(  process_id     
                                                                    , error     
                                                                    , fecha     
                                                                    , created_by     
                                                                    , creation_date     
                                                                    , last_updated_by     
                                                                    , last_update_date     
                                                                    ) VALUES(  p_process_id     
                                                                            , 'Error al crear el XML2. ORG_ID:'||x.id|| ' Error: '||v_error     
                                                                            , SYSDATE - 6/24     
                                                                            , '-1'     
                                                                            , SYSDATE - 6/24     
                                                                            , '-1'     
                                                                            , SYSDATE - 6/24     
                                                                            );  
  
                END;  
                --  
            END LOOP;  
  
            SELECT  COUNT(*)  
            INTO    v_val  
            FROM    xxtoks_pay_ati_error_tracing  
            WHERE   process_id = p_process_id  
                    AND ERROR LIKE 'Error al crear el XML2. ORG_ID:%' ; 
            --  
        END LOOP;  
	END RETRY_ORG_ERR;  
     
  
END XXGRG_PAY_CFDI_V2_FILE_PKG;   
