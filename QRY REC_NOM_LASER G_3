--QRY REC_NOM_LASER G_3
--+ ADD NEW FUNCTION TO RETRIVE BALANCE VALUES 200223
--+footer
SELECT 
     paf.assignment_id                                    assigment
    ,ppa.payroll_action_id                                action_id
    ,(CASE
        WHEN :p_cuenta_banco = 1 THEN 
            pba.bank_account_num
        WHEN pba.bank_account_num IS NULL THEN '-'
     END)                                                CUENTA_BANCO
    ,COALESCE ( :p_leyenda_1, '')                              LEYENDA_1
    ,COALESCE ( :p_leyenda_2, '')                              LEYENDA_2
    ,CASE WHEN :p_imprime_ispt = 1 AND :p_recibo_vales = 0 THEN 
        NVL( (Select to_char(max(bal.balance_value),'999,999,990.00')
                From table(
                    pay_balance_view_pkg.get_balance_values(
                        p_payroll_rel_action_id => ppra.payroll_rel_action_id
                        ,p_base_balance_name1    => 'MX_ISR_WITHHELD_REGULAR'
                        ,p_database_item_suffix1 => '_REL_YTD'
                    )
                ) bal
            )
            , 0
        )
    END AS ISPT          
    ,CASE WHEN :p_recibo_vales = 0 THEN 
        NVL( (Select to_char(max(bal.balance_value), '999,999,990.00') GRAV
                From table(
                    pay_balance_view_pkg.get_balance_values(
                        p_payroll_rel_action_id => ppra.payroll_rel_action_id
                        ,p_base_balance_name1    => 'MX_ISR_SUBJECT'
                        ,p_database_item_suffix1 => '_REL_YTD'
                    )
                ) bal
            )
            , 0
        )
    END AS GRAVADO
    ,CASE WHEN :p_imprime_fondo = 1 AND :p_recibo_vales = 0 THEN  
        NVL( (Select to_char(max(bal.balance_value), '999,999,990.00') FDO
                From table(
                    pay_balance_view_pkg.get_balance_values(
                        p_payroll_rel_action_id => ppra.payroll_rel_action_id
                        ,p_base_balance_name1    => 'FDO_AHO_RECIBO'
                        ,p_database_item_suffix1 => '_REL_ITD'
                    )
                ) bal
            )
            , 0
        )
     END AS FDO_AHORRO
FROM
     per_person_secured_list_v      ppf
    ,Per_Person_Names_F             ppn
    ,per_assignment_secured_list_v  paf
    --+
    ,pay_payroll_rel_actions        ppra
    ,pay_rel_groups_dn              prg
    ,pay_payroll_actions            ppa
    ,pay_personal_payment_methods_f pppm 
    ,pay_bank_accounts              pba
    
WHERE 1 = 1
    And ppn.person_id = ppf.person_id
    And ppn.name_type = 'MX'
    And paf.person_id = ppf.person_id
    And paf.primary_flag = 'Y'
    And paf.assignment_type = 'E'
    --+
    And prg.assignment_id = paf.assignment_id
    And prg.group_type = 'A'
    And ppra.payroll_relationship_id = prg.payroll_relationship_id
    And ppra.action_status = 'C'
    And ppra.chunk_number is not null
    And ppra.retro_component_id is null
    And ppa.payroll_action_id = ppra.payroll_action_id
    And ppa.action_type IN ('R', 'B', 'Q')
    And not exists(
        Select 1
        From pay_object_groups  pog
            ,pay_object_group_types pogt
        Where 1 = 1
            And pog.BASE_OBJECT_GROUP_NAME = 'NOMINA ALTAS'
            And pogt.object_group_type_id = pog.object_group_type_id
            And name_code = 'ELEGRP'
            And pog.object_group_id = ppa.element_set_id
    )
    And ppra.RUN_TYPE_ID is not null
    And pppm.payroll_relationship_id(+) = ppra.payroll_relationship_id 
    And pppm.name(+) like '%NOMINA%'
    And pppm.PRIORITY(+) = 10
    And pba.bank_account_id(+) = pppm.bank_account_id

    And ppa.effective_date BETWEEN ppf.effective_start_date AND ppf.effective_end_date
    And ppa.effective_date BETWEEN ppn.effective_start_date AND ppn.effective_end_date
    And ppa.effective_date BETWEEN paf.effective_start_date AND paf.effective_end_date
    And ppa.effective_date BETWEEN pppm.effective_start_date(+) AND pppm.effective_end_date(+)      
